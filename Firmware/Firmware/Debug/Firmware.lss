
Firmware.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ae  00800100  0000146c  00001500  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000146c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000e  008001ae  008001ae  000015ae  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000015ae  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000160c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f0  00000000  00000000  0000164c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000014fe  00000000  00000000  0000173c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e76  00000000  00000000  00002c3a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008e6  00000000  00000000  00003ab0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000210  00000000  00000000  00004398  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000064d  00000000  00000000  000045a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000783  00000000  00000000  00004bf5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a0  00000000  00000000  00005378  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__ctors_end>
       4:	0c 94 28 02 	jmp	0x450	; 0x450 <__vector_1>
       8:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
       c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      10:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      14:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      18:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      1c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      20:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      24:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      28:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      2c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      30:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      34:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      38:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      3c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      40:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      44:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      48:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      4c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      50:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      54:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      58:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      5c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      60:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      64:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      68:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      6c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      70:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      74:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      78:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      7c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      80:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      84:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      88:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      8c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      90:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      94:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      98:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      9c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      a0:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      a4:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      a8:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      ac:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      b0:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>

000000b4 <__trampolines_end>:
      b4:	63 64       	ori	r22, 0x43	; 67
      b6:	69 6e       	ori	r22, 0xE9	; 233
      b8:	6f 70       	andi	r22, 0x0F	; 15
      ba:	73 75       	andi	r23, 0x53	; 83
      bc:	78 58       	subi	r23, 0x88	; 136
      be:	5b 00       	.word	0x005b	; ????

000000c0 <__ctors_end>:
      c0:	11 24       	eor	r1, r1
      c2:	1f be       	out	0x3f, r1	; 63
      c4:	cf ef       	ldi	r28, 0xFF	; 255
      c6:	d8 e0       	ldi	r29, 0x08	; 8
      c8:	de bf       	out	0x3e, r29	; 62
      ca:	cd bf       	out	0x3d, r28	; 61

000000cc <__do_copy_data>:
      cc:	11 e0       	ldi	r17, 0x01	; 1
      ce:	a0 e0       	ldi	r26, 0x00	; 0
      d0:	b1 e0       	ldi	r27, 0x01	; 1
      d2:	ec e6       	ldi	r30, 0x6C	; 108
      d4:	f4 e1       	ldi	r31, 0x14	; 20
      d6:	02 c0       	rjmp	.+4      	; 0xdc <__do_copy_data+0x10>
      d8:	05 90       	lpm	r0, Z+
      da:	0d 92       	st	X+, r0
      dc:	ae 3a       	cpi	r26, 0xAE	; 174
      de:	b1 07       	cpc	r27, r17
      e0:	d9 f7       	brne	.-10     	; 0xd8 <__do_copy_data+0xc>

000000e2 <__do_clear_bss>:
      e2:	21 e0       	ldi	r18, 0x01	; 1
      e4:	ae ea       	ldi	r26, 0xAE	; 174
      e6:	b1 e0       	ldi	r27, 0x01	; 1
      e8:	01 c0       	rjmp	.+2      	; 0xec <.do_clear_bss_start>

000000ea <.do_clear_bss_loop>:
      ea:	1d 92       	st	X+, r1

000000ec <.do_clear_bss_start>:
      ec:	ac 3b       	cpi	r26, 0xBC	; 188
      ee:	b2 07       	cpc	r27, r18
      f0:	e1 f7       	brne	.-8      	; 0xea <.do_clear_bss_loop>
      f2:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <main>
      f6:	0c 94 34 0a 	jmp	0x1468	; 0x1468 <_exit>

000000fa <__bad_interrupt>:
      fa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000fe <blink_init>:

//Init function for the blinking functionality 
void blink_init()
{
	//Set the necessary outputs on the DDRD port & set them up as high since the LED is active-low
	DDRD = RED | BLUE | GREEN;
      fe:	80 ee       	ldi	r24, 0xE0	; 224
     100:	8a b9       	out	0x0a, r24	; 10
	PORTD |= RED | BLUE | GREEN;
     102:	8b b1       	in	r24, 0x0b	; 11
     104:	80 6e       	ori	r24, 0xE0	; 224
     106:	8b b9       	out	0x0b, r24	; 11
     108:	08 95       	ret

0000010a <blink>:
}

//Blink any color LED for a brief moment
void blink(int color)
{
	PORTD &= ~color;
     10a:	9b b1       	in	r25, 0x0b	; 11
     10c:	28 2f       	mov	r18, r24
     10e:	20 95       	com	r18
     110:	92 23       	and	r25, r18
     112:	9b b9       	out	0x0b, r25	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     114:	2f ef       	ldi	r18, 0xFF	; 255
     116:	31 ee       	ldi	r19, 0xE1	; 225
     118:	94 e0       	ldi	r25, 0x04	; 4
     11a:	21 50       	subi	r18, 0x01	; 1
     11c:	30 40       	sbci	r19, 0x00	; 0
     11e:	90 40       	sbci	r25, 0x00	; 0
     120:	e1 f7       	brne	.-8      	; 0x11a <blink+0x10>
     122:	00 c0       	rjmp	.+0      	; 0x124 <blink+0x1a>
     124:	00 00       	nop
	_delay_ms(100);
	PORTD |= color;
     126:	9b b1       	in	r25, 0x0b	; 11
     128:	89 2b       	or	r24, r25
     12a:	8b b9       	out	0x0b, r24	; 11
     12c:	2f ef       	ldi	r18, 0xFF	; 255
     12e:	31 ee       	ldi	r19, 0xE1	; 225
     130:	84 e0       	ldi	r24, 0x04	; 4
     132:	21 50       	subi	r18, 0x01	; 1
     134:	30 40       	sbci	r19, 0x00	; 0
     136:	80 40       	sbci	r24, 0x00	; 0
     138:	e1 f7       	brne	.-8      	; 0x132 <blink+0x28>
     13a:	00 c0       	rjmp	.+0      	; 0x13c <blink+0x32>
     13c:	00 00       	nop
     13e:	08 95       	ret

00000140 <terminal_error>:

//Indicate to user that there's an error which ended the program with a blinking red light
void terminal_error()
{
	//initalize blinking again, just in case
	blink_init();
     140:	0e 94 7f 00 	call	0xfe	; 0xfe <blink_init>
	while(1)
	{
		blink(RED);		
     144:	80 e8       	ldi	r24, 0x80	; 128
     146:	90 e0       	ldi	r25, 0x00	; 0
     148:	0e 94 85 00 	call	0x10a	; 0x10a <blink>
     14c:	fb cf       	rjmp	.-10     	; 0x144 <terminal_error+0x4>

0000014e <ESP01_init>:
char *network_name;
char *password;

//Init for the ESP8266 interface
void ESP01_init(char *_network_name, char *_password)
{
     14e:	0f 93       	push	r16
     150:	1f 93       	push	r17
     152:	cf 93       	push	r28
     154:	df 93       	push	r29
     156:	8c 01       	movw	r16, r24
     158:	eb 01       	movw	r28, r22
	//Copy over the login information
	network_name = malloc(strlen(_network_name) + 1);
     15a:	fc 01       	movw	r30, r24
     15c:	01 90       	ld	r0, Z+
     15e:	00 20       	and	r0, r0
     160:	e9 f7       	brne	.-6      	; 0x15c <ESP01_init+0xe>
     162:	31 97       	sbiw	r30, 0x01	; 1
     164:	cf 01       	movw	r24, r30
     166:	80 1b       	sub	r24, r16
     168:	91 0b       	sbc	r25, r17
     16a:	01 96       	adiw	r24, 0x01	; 1
     16c:	0e 94 a7 02 	call	0x54e	; 0x54e <malloc>
     170:	90 93 b1 01 	sts	0x01B1, r25	; 0x8001b1 <network_name+0x1>
     174:	80 93 b0 01 	sts	0x01B0, r24	; 0x8001b0 <network_name>
	strcpy(network_name, _network_name);
     178:	b8 01       	movw	r22, r16
     17a:	0e 94 c8 03 	call	0x790	; 0x790 <strcpy>
	password = malloc(strlen(_password) + 1);
     17e:	fe 01       	movw	r30, r28
     180:	01 90       	ld	r0, Z+
     182:	00 20       	and	r0, r0
     184:	e9 f7       	brne	.-6      	; 0x180 <ESP01_init+0x32>
     186:	31 97       	sbiw	r30, 0x01	; 1
     188:	cf 01       	movw	r24, r30
     18a:	8c 1b       	sub	r24, r28
     18c:	9d 0b       	sbc	r25, r29
     18e:	01 96       	adiw	r24, 0x01	; 1
     190:	0e 94 a7 02 	call	0x54e	; 0x54e <malloc>
     194:	90 93 af 01 	sts	0x01AF, r25	; 0x8001af <__data_end+0x1>
     198:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <__data_end>
	strcpy(password, _password);
     19c:	be 01       	movw	r22, r28
     19e:	0e 94 c8 03 	call	0x790	; 0x790 <strcpy>

	//Configure the pins connected to reset & chip_en for output
	DDRD |= _BV(3) | _BV(4);
     1a2:	8a b1       	in	r24, 0x0a	; 10
     1a4:	88 61       	ori	r24, 0x18	; 24
     1a6:	8a b9       	out	0x0a, r24	; 10
	//Set the RESET pin to high to reset it later
	PORTD |= _BV(4);
     1a8:	8b b1       	in	r24, 0x0b	; 11
     1aa:	80 61       	ori	r24, 0x10	; 16
     1ac:	8b b9       	out	0x0b, r24	; 11
}
     1ae:	df 91       	pop	r29
     1b0:	cf 91       	pop	r28
     1b2:	1f 91       	pop	r17
     1b4:	0f 91       	pop	r16
     1b6:	08 95       	ret

000001b8 <ESP01_Loop_Until_OK>:

//halt the device's operation until an "OK" is received on the UART bus.
//"OK" is the ESP8266's acknowledgment message of a successful command.
//"ERROR" is what the ESP8266 sends in response if the command fails.
char ESP01_Loop_Until_OK()
{
     1b8:	0f 93       	push	r16
     1ba:	1f 93       	push	r17
     1bc:	cf 93       	push	r28
     1be:	df 93       	push	r29
     1c0:	cd b7       	in	r28, 0x3d	; 61
     1c2:	de b7       	in	r29, 0x3e	; 62
     1c4:	c0 54       	subi	r28, 0x40	; 64
     1c6:	d1 09       	sbc	r29, r1
     1c8:	0f b6       	in	r0, 0x3f	; 63
     1ca:	f8 94       	cli
     1cc:	de bf       	out	0x3e, r29	; 62
     1ce:	0f be       	out	0x3f, r0	; 63
     1d0:	cd bf       	out	0x3d, r28	; 61
	char esp_resp[64];
	int res;
	do 
	{
		//Read in a word from the ESP
		scanf("%s", esp_resp);	
     1d2:	8e 01       	movw	r16, r28
     1d4:	0f 5f       	subi	r16, 0xFF	; 255
     1d6:	1f 4f       	sbci	r17, 0xFF	; 255
     1d8:	1f 93       	push	r17
     1da:	0f 93       	push	r16
     1dc:	82 e2       	ldi	r24, 0x22	; 34
     1de:	91 e0       	ldi	r25, 0x01	; 1
     1e0:	9f 93       	push	r25
     1e2:	8f 93       	push	r24
     1e4:	0e 94 19 04 	call	0x832	; 0x832 <scanf>

		//Check if an "ERROR" message was received
		res = (int) strstr(esp_resp, "ERROR");
     1e8:	65 e2       	ldi	r22, 0x25	; 37
     1ea:	71 e0       	ldi	r23, 0x01	; 1
     1ec:	c8 01       	movw	r24, r16
     1ee:	0e 94 cf 03 	call	0x79e	; 0x79e <strstr>
		if(res) return -1;
     1f2:	0f 90       	pop	r0
     1f4:	0f 90       	pop	r0
     1f6:	0f 90       	pop	r0
     1f8:	0f 90       	pop	r0
     1fa:	89 2b       	or	r24, r25
     1fc:	49 f4       	brne	.+18     	; 0x210 <ESP01_Loop_Until_OK+0x58>

		//If the word is or contains "OK", return 0
		res = (int) strstr(esp_resp, "OK");
     1fe:	6b e2       	ldi	r22, 0x2B	; 43
     200:	71 e0       	ldi	r23, 0x01	; 1
     202:	c8 01       	movw	r24, r16
     204:	0e 94 cf 03 	call	0x79e	; 0x79e <strstr>
	} while (!res);
     208:	89 2b       	or	r24, r25
     20a:	19 f3       	breq	.-58     	; 0x1d2 <ESP01_Loop_Until_OK+0x1a>

	return 0;
     20c:	80 e0       	ldi	r24, 0x00	; 0
     20e:	01 c0       	rjmp	.+2      	; 0x212 <ESP01_Loop_Until_OK+0x5a>
		//Read in a word from the ESP
		scanf("%s", esp_resp);	

		//Check if an "ERROR" message was received
		res = (int) strstr(esp_resp, "ERROR");
		if(res) return -1;
     210:	8f ef       	ldi	r24, 0xFF	; 255
		//If the word is or contains "OK", return 0
		res = (int) strstr(esp_resp, "OK");
	} while (!res);

	return 0;
}
     212:	c0 5c       	subi	r28, 0xC0	; 192
     214:	df 4f       	sbci	r29, 0xFF	; 255
     216:	0f b6       	in	r0, 0x3f	; 63
     218:	f8 94       	cli
     21a:	de bf       	out	0x3e, r29	; 62
     21c:	0f be       	out	0x3f, r0	; 63
     21e:	cd bf       	out	0x3d, r28	; 61
     220:	df 91       	pop	r29
     222:	cf 91       	pop	r28
     224:	1f 91       	pop	r17
     226:	0f 91       	pop	r16
     228:	08 95       	ret

0000022a <ESP01_Set_EN>:

//Turn the ESP8266 on & reset it to avoid conflicts
void ESP01_Set_EN(char status)
{
	if(status)
     22a:	88 23       	and	r24, r24
     22c:	e1 f0       	breq	.+56     	; 0x266 <ESP01_Set_EN+0x3c>
	{//Activate the device
		PORTD |= _BV(3);
     22e:	8b b1       	in	r24, 0x0b	; 11
     230:	88 60       	ori	r24, 0x08	; 8
     232:	8b b9       	out	0x0b, r24	; 11

		//Reset the device
		PORTD &= ~_BV(4);
     234:	8b b1       	in	r24, 0x0b	; 11
     236:	8f 7e       	andi	r24, 0xEF	; 239
     238:	8b b9       	out	0x0b, r24	; 11
     23a:	2f ef       	ldi	r18, 0xFF	; 255
     23c:	83 ed       	ldi	r24, 0xD3	; 211
     23e:	90 e3       	ldi	r25, 0x30	; 48
     240:	21 50       	subi	r18, 0x01	; 1
     242:	80 40       	sbci	r24, 0x00	; 0
     244:	90 40       	sbci	r25, 0x00	; 0
     246:	e1 f7       	brne	.-8      	; 0x240 <ESP01_Set_EN+0x16>
     248:	00 c0       	rjmp	.+0      	; 0x24a <ESP01_Set_EN+0x20>
     24a:	00 00       	nop
		_delay_ms(1000);
		PORTD |= _BV(4);
     24c:	8b b1       	in	r24, 0x0b	; 11
     24e:	80 61       	ori	r24, 0x10	; 16
     250:	8b b9       	out	0x0b, r24	; 11
     252:	2f ef       	ldi	r18, 0xFF	; 255
     254:	83 ed       	ldi	r24, 0xD3	; 211
     256:	90 e3       	ldi	r25, 0x30	; 48
     258:	21 50       	subi	r18, 0x01	; 1
     25a:	80 40       	sbci	r24, 0x00	; 0
     25c:	90 40       	sbci	r25, 0x00	; 0
     25e:	e1 f7       	brne	.-8      	; 0x258 <ESP01_Set_EN+0x2e>
     260:	00 c0       	rjmp	.+0      	; 0x262 <ESP01_Set_EN+0x38>
     262:	00 00       	nop
     264:	03 c0       	rjmp	.+6      	; 0x26c <ESP01_Set_EN+0x42>
		_delay_ms(1000);
	}
	else
	{//Deactivate the device
		PORTD &= ~_BV(3);
     266:	8b b1       	in	r24, 0x0b	; 11
     268:	87 7f       	andi	r24, 0xF7	; 247
     26a:	8b b9       	out	0x0b, r24	; 11
     26c:	2f ef       	ldi	r18, 0xFF	; 255
     26e:	87 ea       	ldi	r24, 0xA7	; 167
     270:	91 e6       	ldi	r25, 0x61	; 97
     272:	21 50       	subi	r18, 0x01	; 1
     274:	80 40       	sbci	r24, 0x00	; 0
     276:	90 40       	sbci	r25, 0x00	; 0
     278:	e1 f7       	brne	.-8      	; 0x272 <ESP01_Set_EN+0x48>
     27a:	00 c0       	rjmp	.+0      	; 0x27c <ESP01_Set_EN+0x52>
     27c:	00 00       	nop
     27e:	08 95       	ret

00000280 <ESP01_Send_CMD>:
	_delay_ms(2000);
}

//Send a command to the ESP01 & move on when it's OK'd the operation
void ESP01_Send_CMD(char *cmd)
{
     280:	cf 93       	push	r28
     282:	df 93       	push	r29
     284:	ec 01       	movw	r28, r24
	do 
	{
		puts(cmd);
     286:	ce 01       	movw	r24, r28
     288:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <puts>
	} while (ESP01_Loop_Until_OK());//If you get an error message, send command again
     28c:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <ESP01_Loop_Until_OK>
     290:	81 11       	cpse	r24, r1
     292:	f9 cf       	rjmp	.-14     	; 0x286 <ESP01_Send_CMD+0x6>
}
     294:	df 91       	pop	r29
     296:	cf 91       	pop	r28
     298:	08 95       	ret

0000029a <ESP01_Send_CMD_Args>:

//Send a command with 'num' number of arguments
void ESP01_Send_CMD_Args(char *cmd, char **args, int num)
{
     29a:	cf 93       	push	r28
     29c:	df 93       	push	r29
     29e:	cd b7       	in	r28, 0x3d	; 61
     2a0:	de b7       	in	r29, 0x3e	; 62
     2a2:	c0 58       	subi	r28, 0x80	; 128
     2a4:	d1 09       	sbc	r29, r1
     2a6:	0f b6       	in	r0, 0x3f	; 63
     2a8:	f8 94       	cli
     2aa:	de bf       	out	0x3e, r29	; 62
     2ac:	0f be       	out	0x3f, r0	; 63
     2ae:	cd bf       	out	0x3d, r28	; 61
     2b0:	fb 01       	movw	r30, r22
	char cmd_w_args[128] = "";
     2b2:	1a 82       	std	Y+2, r1	; 0x02
     2b4:	19 82       	std	Y+1, r1	; 0x01
     2b6:	be 01       	movw	r22, r28
     2b8:	6d 5f       	subi	r22, 0xFD	; 253
     2ba:	7f 4f       	sbci	r23, 0xFF	; 255
     2bc:	2e e7       	ldi	r18, 0x7E	; 126
     2be:	db 01       	movw	r26, r22
     2c0:	1d 92       	st	X+, r1
     2c2:	2a 95       	dec	r18
     2c4:	e9 f7       	brne	.-6      	; 0x2c0 <ESP01_Send_CMD_Args+0x26>

	//Input a variable number of arguments
	switch(num)
     2c6:	42 30       	cpi	r20, 0x02	; 2
     2c8:	51 05       	cpc	r21, r1
     2ca:	01 f1       	breq	.+64     	; 0x30c <ESP01_Send_CMD_Args+0x72>
     2cc:	24 f4       	brge	.+8      	; 0x2d6 <ESP01_Send_CMD_Args+0x3c>
     2ce:	41 30       	cpi	r20, 0x01	; 1
     2d0:	51 05       	cpc	r21, r1
     2d2:	49 f0       	breq	.+18     	; 0x2e6 <ESP01_Send_CMD_Args+0x4c>
     2d4:	69 c0       	rjmp	.+210    	; 0x3a8 <ESP01_Send_CMD_Args+0x10e>
     2d6:	43 30       	cpi	r20, 0x03	; 3
     2d8:	51 05       	cpc	r21, r1
     2da:	71 f1       	breq	.+92     	; 0x338 <ESP01_Send_CMD_Args+0x9e>
     2dc:	44 30       	cpi	r20, 0x04	; 4
     2de:	51 05       	cpc	r21, r1
     2e0:	09 f4       	brne	.+2      	; 0x2e4 <ESP01_Send_CMD_Args+0x4a>
     2e2:	44 c0       	rjmp	.+136    	; 0x36c <ESP01_Send_CMD_Args+0xd2>
     2e4:	61 c0       	rjmp	.+194    	; 0x3a8 <ESP01_Send_CMD_Args+0x10e>
	{
		case 1:
			sprintf(cmd_w_args, cmd, args[0]);	
     2e6:	21 81       	ldd	r18, Z+1	; 0x01
     2e8:	2f 93       	push	r18
     2ea:	20 81       	ld	r18, Z
     2ec:	2f 93       	push	r18
     2ee:	9f 93       	push	r25
     2f0:	8f 93       	push	r24
     2f2:	ce 01       	movw	r24, r28
     2f4:	01 96       	adiw	r24, 0x01	; 1
     2f6:	9f 93       	push	r25
     2f8:	8f 93       	push	r24
     2fa:	0e 94 2f 04 	call	0x85e	; 0x85e <sprintf>
			break;
     2fe:	0f 90       	pop	r0
     300:	0f 90       	pop	r0
     302:	0f 90       	pop	r0
     304:	0f 90       	pop	r0
     306:	0f 90       	pop	r0
     308:	0f 90       	pop	r0
     30a:	50 c0       	rjmp	.+160    	; 0x3ac <ESP01_Send_CMD_Args+0x112>
		case 2:
			sprintf(cmd_w_args, cmd, args[0], args[1]);	
     30c:	23 81       	ldd	r18, Z+3	; 0x03
     30e:	2f 93       	push	r18
     310:	22 81       	ldd	r18, Z+2	; 0x02
     312:	2f 93       	push	r18
     314:	21 81       	ldd	r18, Z+1	; 0x01
     316:	2f 93       	push	r18
     318:	20 81       	ld	r18, Z
     31a:	2f 93       	push	r18
     31c:	9f 93       	push	r25
     31e:	8f 93       	push	r24
     320:	ce 01       	movw	r24, r28
     322:	01 96       	adiw	r24, 0x01	; 1
     324:	9f 93       	push	r25
     326:	8f 93       	push	r24
     328:	0e 94 2f 04 	call	0x85e	; 0x85e <sprintf>
			break;
     32c:	0f b6       	in	r0, 0x3f	; 63
     32e:	f8 94       	cli
     330:	de bf       	out	0x3e, r29	; 62
     332:	0f be       	out	0x3f, r0	; 63
     334:	cd bf       	out	0x3d, r28	; 61
     336:	3a c0       	rjmp	.+116    	; 0x3ac <ESP01_Send_CMD_Args+0x112>
		case 3:
			sprintf(cmd_w_args, cmd, args[0], args[1], args[2]);	
     338:	25 81       	ldd	r18, Z+5	; 0x05
     33a:	2f 93       	push	r18
     33c:	24 81       	ldd	r18, Z+4	; 0x04
     33e:	2f 93       	push	r18
     340:	23 81       	ldd	r18, Z+3	; 0x03
     342:	2f 93       	push	r18
     344:	22 81       	ldd	r18, Z+2	; 0x02
     346:	2f 93       	push	r18
     348:	21 81       	ldd	r18, Z+1	; 0x01
     34a:	2f 93       	push	r18
     34c:	20 81       	ld	r18, Z
     34e:	2f 93       	push	r18
     350:	9f 93       	push	r25
     352:	8f 93       	push	r24
     354:	ce 01       	movw	r24, r28
     356:	01 96       	adiw	r24, 0x01	; 1
     358:	9f 93       	push	r25
     35a:	8f 93       	push	r24
     35c:	0e 94 2f 04 	call	0x85e	; 0x85e <sprintf>
			break;
     360:	0f b6       	in	r0, 0x3f	; 63
     362:	f8 94       	cli
     364:	de bf       	out	0x3e, r29	; 62
     366:	0f be       	out	0x3f, r0	; 63
     368:	cd bf       	out	0x3d, r28	; 61
     36a:	20 c0       	rjmp	.+64     	; 0x3ac <ESP01_Send_CMD_Args+0x112>
		case 4:
			sprintf(cmd_w_args, cmd, args[0], args[1], args[2], args[3]);	
     36c:	27 81       	ldd	r18, Z+7	; 0x07
     36e:	2f 93       	push	r18
     370:	26 81       	ldd	r18, Z+6	; 0x06
     372:	2f 93       	push	r18
     374:	25 81       	ldd	r18, Z+5	; 0x05
     376:	2f 93       	push	r18
     378:	24 81       	ldd	r18, Z+4	; 0x04
     37a:	2f 93       	push	r18
     37c:	23 81       	ldd	r18, Z+3	; 0x03
     37e:	2f 93       	push	r18
     380:	22 81       	ldd	r18, Z+2	; 0x02
     382:	2f 93       	push	r18
     384:	21 81       	ldd	r18, Z+1	; 0x01
     386:	2f 93       	push	r18
     388:	20 81       	ld	r18, Z
     38a:	2f 93       	push	r18
     38c:	9f 93       	push	r25
     38e:	8f 93       	push	r24
     390:	ce 01       	movw	r24, r28
     392:	01 96       	adiw	r24, 0x01	; 1
     394:	9f 93       	push	r25
     396:	8f 93       	push	r24
     398:	0e 94 2f 04 	call	0x85e	; 0x85e <sprintf>
			break;
     39c:	0f b6       	in	r0, 0x3f	; 63
     39e:	f8 94       	cli
     3a0:	de bf       	out	0x3e, r29	; 62
     3a2:	0f be       	out	0x3f, r0	; 63
     3a4:	cd bf       	out	0x3d, r28	; 61
     3a6:	02 c0       	rjmp	.+4      	; 0x3ac <ESP01_Send_CMD_Args+0x112>
		default:
			terminal_error();
     3a8:	0e 94 a0 00 	call	0x140	; 0x140 <terminal_error>
			break;
	}

	//Send the altered command to the ESP
	ESP01_Send_CMD(cmd_w_args);
     3ac:	ce 01       	movw	r24, r28
     3ae:	01 96       	adiw	r24, 0x01	; 1
     3b0:	0e 94 40 01 	call	0x280	; 0x280 <ESP01_Send_CMD>
}
     3b4:	c0 58       	subi	r28, 0x80	; 128
     3b6:	df 4f       	sbci	r29, 0xFF	; 255
     3b8:	0f b6       	in	r0, 0x3f	; 63
     3ba:	f8 94       	cli
     3bc:	de bf       	out	0x3e, r29	; 62
     3be:	0f be       	out	0x3f, r0	; 63
     3c0:	cd bf       	out	0x3d, r28	; 61
     3c2:	df 91       	pop	r29
     3c4:	cf 91       	pop	r28
     3c6:	08 95       	ret

000003c8 <ESP01_Send_Data>:

//Complete a basic sequence of commands to send a TCP message through the ESP8266 to a specified server.
void ESP01_Send_Data(char *mssg)
{
     3c8:	0f 93       	push	r16
     3ca:	1f 93       	push	r17
     3cc:	cf 93       	push	r28
     3ce:	df 93       	push	r29
     3d0:	00 d0       	rcall	.+0      	; 0x3d2 <ESP01_Send_Data+0xa>
     3d2:	00 d0       	rcall	.+0      	; 0x3d4 <ESP01_Send_Data+0xc>
     3d4:	cd b7       	in	r28, 0x3d	; 61
     3d6:	de b7       	in	r29, 0x3e	; 62
     3d8:	8c 01       	movw	r16, r24
	//Initialize the args array for the login data
	char *args[2];
	args[0] = network_name;
     3da:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <network_name>
     3de:	90 91 b1 01 	lds	r25, 0x01B1	; 0x8001b1 <network_name+0x1>
     3e2:	9a 83       	std	Y+2, r25	; 0x02
     3e4:	89 83       	std	Y+1, r24	; 0x01
	args[1] = password;
     3e6:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <__data_end>
     3ea:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <__data_end+0x1>
     3ee:	9c 83       	std	Y+4, r25	; 0x04
     3f0:	8b 83       	std	Y+3, r24	; 0x03
	
	ESP01_Set_EN(1);
     3f2:	81 e0       	ldi	r24, 0x01	; 1
     3f4:	0e 94 15 01 	call	0x22a	; 0x22a <ESP01_Set_EN>
	ESP01_Send_CMD(AT_CLIENT_MODE);
     3f8:	8e e2       	ldi	r24, 0x2E	; 46
     3fa:	91 e0       	ldi	r25, 0x01	; 1
     3fc:	0e 94 40 01 	call	0x280	; 0x280 <ESP01_Send_CMD>
	ESP01_Send_CMD_Args(AT_JOIN_NETWORK, args, 2);
     400:	42 e0       	ldi	r20, 0x02	; 2
     402:	50 e0       	ldi	r21, 0x00	; 0
     404:	be 01       	movw	r22, r28
     406:	6f 5f       	subi	r22, 0xFF	; 255
     408:	7f 4f       	sbci	r23, 0xFF	; 255
     40a:	8a e3       	ldi	r24, 0x3A	; 58
     40c:	91 e0       	ldi	r25, 0x01	; 1
     40e:	0e 94 4d 01 	call	0x29a	; 0x29a <ESP01_Send_CMD_Args>
	ESP01_Send_CMD(AT_START_TCP);
     412:	8d e4       	ldi	r24, 0x4D	; 77
     414:	91 e0       	ldi	r25, 0x01	; 1
     416:	0e 94 40 01 	call	0x280	; 0x280 <ESP01_Send_CMD>
	ESP01_Send_CMD(AT_INIT_SEND);
     41a:	8f e6       	ldi	r24, 0x6F	; 111
     41c:	91 e0       	ldi	r25, 0x01	; 1
     41e:	0e 94 40 01 	call	0x280	; 0x280 <ESP01_Send_CMD>
	ESP01_Send_CMD(mssg);
     422:	c8 01       	movw	r24, r16
     424:	0e 94 40 01 	call	0x280	; 0x280 <ESP01_Send_CMD>
	ESP01_Send_CMD(AT_END_SEND);
     428:	8d e7       	ldi	r24, 0x7D	; 125
     42a:	91 e0       	ldi	r25, 0x01	; 1
     42c:	0e 94 40 01 	call	0x280	; 0x280 <ESP01_Send_CMD>
	ESP01_Send_CMD(AT_QUIT_NETWORK);
     430:	89 e8       	ldi	r24, 0x89	; 137
     432:	91 e0       	ldi	r25, 0x01	; 1
     434:	0e 94 40 01 	call	0x280	; 0x280 <ESP01_Send_CMD>
	ESP01_Set_EN(0);
     438:	80 e0       	ldi	r24, 0x00	; 0
     43a:	0e 94 15 01 	call	0x22a	; 0x22a <ESP01_Set_EN>
}
     43e:	0f 90       	pop	r0
     440:	0f 90       	pop	r0
     442:	0f 90       	pop	r0
     444:	0f 90       	pop	r0
     446:	df 91       	pop	r29
     448:	cf 91       	pop	r28
     44a:	1f 91       	pop	r17
     44c:	0f 91       	pop	r16
     44e:	08 95       	ret

00000450 <__vector_1>:
#include "Error.h"
#include "ESP82_Drv.h"

//This interrupt activates when the button is pressed
ISR(INT0_vect)
{
     450:	1f 92       	push	r1
     452:	0f 92       	push	r0
     454:	0f b6       	in	r0, 0x3f	; 63
     456:	0f 92       	push	r0
     458:	11 24       	eor	r1, r1
     45a:	2f 93       	push	r18
     45c:	3f 93       	push	r19
     45e:	4f 93       	push	r20
     460:	5f 93       	push	r21
     462:	6f 93       	push	r22
     464:	7f 93       	push	r23
     466:	8f 93       	push	r24
     468:	9f 93       	push	r25
     46a:	af 93       	push	r26
     46c:	bf 93       	push	r27
     46e:	ef 93       	push	r30
     470:	ff 93       	push	r31
	//Send the message when the button is pressed
	ESP01_Send_Data("$LAUNDRY\n");
     472:	82 e9       	ldi	r24, 0x92	; 146
     474:	91 e0       	ldi	r25, 0x01	; 1
     476:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <ESP01_Send_Data>

	//Blink once to confirm completion of transmission
	blink(RED | BLUE);
     47a:	80 ec       	ldi	r24, 0xC0	; 192
     47c:	90 e0       	ldi	r25, 0x00	; 0
     47e:	0e 94 85 00 	call	0x10a	; 0x10a <blink>
}
     482:	ff 91       	pop	r31
     484:	ef 91       	pop	r30
     486:	bf 91       	pop	r27
     488:	af 91       	pop	r26
     48a:	9f 91       	pop	r25
     48c:	8f 91       	pop	r24
     48e:	7f 91       	pop	r23
     490:	6f 91       	pop	r22
     492:	5f 91       	pop	r21
     494:	4f 91       	pop	r20
     496:	3f 91       	pop	r19
     498:	2f 91       	pop	r18
     49a:	0f 90       	pop	r0
     49c:	0f be       	out	0x3f, r0	; 63
     49e:	0f 90       	pop	r0
     4a0:	1f 90       	pop	r1
     4a2:	18 95       	reti

000004a4 <int_init>:

//Activate the necessary flags for the interrupt to activate
void int_init()
{
	sei();
     4a4:	78 94       	sei
	EICRA |= 0x00;
     4a6:	e9 e6       	ldi	r30, 0x69	; 105
     4a8:	f0 e0       	ldi	r31, 0x00	; 0
     4aa:	80 81       	ld	r24, Z
     4ac:	80 83       	st	Z, r24
	EIMSK |= 0x01;
     4ae:	8d b3       	in	r24, 0x1d	; 29
     4b0:	81 60       	ori	r24, 0x01	; 1
     4b2:	8d bb       	out	0x1d, r24	; 29
     4b4:	08 95       	ret

000004b6 <main>:
#define NETWORK_PASSWORD "goterps_3141"

int main(void) 
{
	//call the init functions
    uart_init();
     4b6:	0e 94 80 02 	call	0x500	; 0x500 <uart_init>
	blink_init();
     4ba:	0e 94 7f 00 	call	0xfe	; 0xfe <blink_init>
	ESP01_init(NETWORK_NAME, NETWORK_PASSWORD);
     4be:	6c e9       	ldi	r22, 0x9C	; 156
     4c0:	71 e0       	ldi	r23, 0x01	; 1
     4c2:	89 ea       	ldi	r24, 0xA9	; 169
     4c4:	91 e0       	ldi	r25, 0x01	; 1
     4c6:	0e 94 a7 00 	call	0x14e	; 0x14e <ESP01_init>
	int_init();
     4ca:	0e 94 52 02 	call	0x4a4	; 0x4a4 <int_init>

	//Set up uart signals to be set up through default stdio functions
    stdout = &uart_output;
     4ce:	e6 eb       	ldi	r30, 0xB6	; 182
     4d0:	f1 e0       	ldi	r31, 0x01	; 1
     4d2:	84 e1       	ldi	r24, 0x14	; 20
     4d4:	91 e0       	ldi	r25, 0x01	; 1
     4d6:	93 83       	std	Z+3, r25	; 0x03
     4d8:	82 83       	std	Z+2, r24	; 0x02
    stdin  = &uart_input;
     4da:	86 e0       	ldi	r24, 0x06	; 6
     4dc:	91 e0       	ldi	r25, 0x01	; 1
     4de:	91 83       	std	Z+1, r25	; 0x01
     4e0:	80 83       	st	Z, r24

	//Indicate end of set up by blinking light
	blink(BLUE | GREEN);
     4e2:	80 e6       	ldi	r24, 0x60	; 96
     4e4:	90 e0       	ldi	r25, 0x00	; 0
     4e6:	0e 94 85 00 	call	0x10a	; 0x10a <blink>

	//Enter idle mode to conserve power
	set_sleep_mode(0x0); //Set sleep mode to 'idle'
     4ea:	83 b7       	in	r24, 0x33	; 51
     4ec:	81 7f       	andi	r24, 0xF1	; 241
     4ee:	83 bf       	out	0x33, r24	; 51
	while(1) sleep_mode();
     4f0:	83 b7       	in	r24, 0x33	; 51
     4f2:	81 60       	ori	r24, 0x01	; 1
     4f4:	83 bf       	out	0x33, r24	; 51
     4f6:	88 95       	sleep
     4f8:	83 b7       	in	r24, 0x33	; 51
     4fa:	8e 7f       	andi	r24, 0xFE	; 254
     4fc:	83 bf       	out	0x33, r24	; 51
     4fe:	f8 cf       	rjmp	.-16     	; 0x4f0 <main+0x3a>

00000500 <uart_init>:

//Init for UART
void uart_init(void) 
{
	//Set the baud rate's high & low registers
	UBRR0H = UBRRH_VALUE;
     500:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = UBRRL_VALUE;
     504:	80 e1       	ldi	r24, 0x10	; 16
     506:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	
	//Run this code if device is in 2x baud mode
	#if USE_2X
	UCSR0A |= _BV(U2X0);
     50a:	e0 ec       	ldi	r30, 0xC0	; 192
     50c:	f0 e0       	ldi	r31, 0x00	; 0
     50e:	80 81       	ld	r24, Z
     510:	82 60       	ori	r24, 0x02	; 2
     512:	80 83       	st	Z, r24
	#else
	UCSR0A &= ~(_BV(U2X0));
	#endif

	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00); /* 8-bit data */
     514:	86 e0       	ldi	r24, 0x06	; 6
     516:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
	UCSR0B = _BV(RXEN0) | _BV(TXEN0);   /* Enable RX and TX */
     51a:	88 e1       	ldi	r24, 0x18	; 24
     51c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
     520:	08 95       	ret

00000522 <uart_putchar>:
}

//Send a character to the UART bus
void uart_putchar(char c, FILE *stream) 
{
     522:	cf 93       	push	r28
     524:	c8 2f       	mov	r28, r24
	if (c == '\n') {
     526:	8a 30       	cpi	r24, 0x0A	; 10
     528:	19 f4       	brne	.+6      	; 0x530 <uart_putchar+0xe>
		uart_putchar('\r', stream);
     52a:	8d e0       	ldi	r24, 0x0D	; 13
     52c:	0e 94 91 02 	call	0x522	; 0x522 <uart_putchar>
	}
	//Halt operation until the character has been sent
	loop_until_bit_is_set(UCSR0A, UDRE0);
     530:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     534:	85 ff       	sbrs	r24, 5
     536:	fc cf       	rjmp	.-8      	; 0x530 <uart_putchar+0xe>
	UDR0 = c;
     538:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
     53c:	cf 91       	pop	r28
     53e:	08 95       	ret

00000540 <uart_getchar>:

//Receive a character from the UART bus
char uart_getchar(FILE *stream) 
{
	//Halt operation until the buffer is free
	loop_until_bit_is_set(UCSR0A, RXC0);
     540:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     544:	88 23       	and	r24, r24
     546:	e4 f7       	brge	.-8      	; 0x540 <uart_getchar>
	return UDR0;
     548:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
     54c:	08 95       	ret

0000054e <malloc>:
     54e:	0f 93       	push	r16
     550:	1f 93       	push	r17
     552:	cf 93       	push	r28
     554:	df 93       	push	r29
     556:	82 30       	cpi	r24, 0x02	; 2
     558:	91 05       	cpc	r25, r1
     55a:	10 f4       	brcc	.+4      	; 0x560 <malloc+0x12>
     55c:	82 e0       	ldi	r24, 0x02	; 2
     55e:	90 e0       	ldi	r25, 0x00	; 0
     560:	e0 91 b4 01 	lds	r30, 0x01B4	; 0x8001b4 <__flp>
     564:	f0 91 b5 01 	lds	r31, 0x01B5	; 0x8001b5 <__flp+0x1>
     568:	20 e0       	ldi	r18, 0x00	; 0
     56a:	30 e0       	ldi	r19, 0x00	; 0
     56c:	a0 e0       	ldi	r26, 0x00	; 0
     56e:	b0 e0       	ldi	r27, 0x00	; 0
     570:	30 97       	sbiw	r30, 0x00	; 0
     572:	19 f1       	breq	.+70     	; 0x5ba <malloc+0x6c>
     574:	40 81       	ld	r20, Z
     576:	51 81       	ldd	r21, Z+1	; 0x01
     578:	02 81       	ldd	r16, Z+2	; 0x02
     57a:	13 81       	ldd	r17, Z+3	; 0x03
     57c:	48 17       	cp	r20, r24
     57e:	59 07       	cpc	r21, r25
     580:	c8 f0       	brcs	.+50     	; 0x5b4 <malloc+0x66>
     582:	84 17       	cp	r24, r20
     584:	95 07       	cpc	r25, r21
     586:	69 f4       	brne	.+26     	; 0x5a2 <malloc+0x54>
     588:	10 97       	sbiw	r26, 0x00	; 0
     58a:	31 f0       	breq	.+12     	; 0x598 <malloc+0x4a>
     58c:	12 96       	adiw	r26, 0x02	; 2
     58e:	0c 93       	st	X, r16
     590:	12 97       	sbiw	r26, 0x02	; 2
     592:	13 96       	adiw	r26, 0x03	; 3
     594:	1c 93       	st	X, r17
     596:	27 c0       	rjmp	.+78     	; 0x5e6 <malloc+0x98>
     598:	00 93 b4 01 	sts	0x01B4, r16	; 0x8001b4 <__flp>
     59c:	10 93 b5 01 	sts	0x01B5, r17	; 0x8001b5 <__flp+0x1>
     5a0:	22 c0       	rjmp	.+68     	; 0x5e6 <malloc+0x98>
     5a2:	21 15       	cp	r18, r1
     5a4:	31 05       	cpc	r19, r1
     5a6:	19 f0       	breq	.+6      	; 0x5ae <malloc+0x60>
     5a8:	42 17       	cp	r20, r18
     5aa:	53 07       	cpc	r21, r19
     5ac:	18 f4       	brcc	.+6      	; 0x5b4 <malloc+0x66>
     5ae:	9a 01       	movw	r18, r20
     5b0:	bd 01       	movw	r22, r26
     5b2:	ef 01       	movw	r28, r30
     5b4:	df 01       	movw	r26, r30
     5b6:	f8 01       	movw	r30, r16
     5b8:	db cf       	rjmp	.-74     	; 0x570 <malloc+0x22>
     5ba:	21 15       	cp	r18, r1
     5bc:	31 05       	cpc	r19, r1
     5be:	f9 f0       	breq	.+62     	; 0x5fe <malloc+0xb0>
     5c0:	28 1b       	sub	r18, r24
     5c2:	39 0b       	sbc	r19, r25
     5c4:	24 30       	cpi	r18, 0x04	; 4
     5c6:	31 05       	cpc	r19, r1
     5c8:	80 f4       	brcc	.+32     	; 0x5ea <malloc+0x9c>
     5ca:	8a 81       	ldd	r24, Y+2	; 0x02
     5cc:	9b 81       	ldd	r25, Y+3	; 0x03
     5ce:	61 15       	cp	r22, r1
     5d0:	71 05       	cpc	r23, r1
     5d2:	21 f0       	breq	.+8      	; 0x5dc <malloc+0x8e>
     5d4:	fb 01       	movw	r30, r22
     5d6:	93 83       	std	Z+3, r25	; 0x03
     5d8:	82 83       	std	Z+2, r24	; 0x02
     5da:	04 c0       	rjmp	.+8      	; 0x5e4 <malloc+0x96>
     5dc:	90 93 b5 01 	sts	0x01B5, r25	; 0x8001b5 <__flp+0x1>
     5e0:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <__flp>
     5e4:	fe 01       	movw	r30, r28
     5e6:	32 96       	adiw	r30, 0x02	; 2
     5e8:	44 c0       	rjmp	.+136    	; 0x672 <malloc+0x124>
     5ea:	fe 01       	movw	r30, r28
     5ec:	e2 0f       	add	r30, r18
     5ee:	f3 1f       	adc	r31, r19
     5f0:	81 93       	st	Z+, r24
     5f2:	91 93       	st	Z+, r25
     5f4:	22 50       	subi	r18, 0x02	; 2
     5f6:	31 09       	sbc	r19, r1
     5f8:	39 83       	std	Y+1, r19	; 0x01
     5fa:	28 83       	st	Y, r18
     5fc:	3a c0       	rjmp	.+116    	; 0x672 <malloc+0x124>
     5fe:	20 91 b2 01 	lds	r18, 0x01B2	; 0x8001b2 <__brkval>
     602:	30 91 b3 01 	lds	r19, 0x01B3	; 0x8001b3 <__brkval+0x1>
     606:	23 2b       	or	r18, r19
     608:	41 f4       	brne	.+16     	; 0x61a <malloc+0xcc>
     60a:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
     60e:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
     612:	30 93 b3 01 	sts	0x01B3, r19	; 0x8001b3 <__brkval+0x1>
     616:	20 93 b2 01 	sts	0x01B2, r18	; 0x8001b2 <__brkval>
     61a:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     61e:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     622:	21 15       	cp	r18, r1
     624:	31 05       	cpc	r19, r1
     626:	41 f4       	brne	.+16     	; 0x638 <malloc+0xea>
     628:	2d b7       	in	r18, 0x3d	; 61
     62a:	3e b7       	in	r19, 0x3e	; 62
     62c:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
     630:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
     634:	24 1b       	sub	r18, r20
     636:	35 0b       	sbc	r19, r21
     638:	e0 91 b2 01 	lds	r30, 0x01B2	; 0x8001b2 <__brkval>
     63c:	f0 91 b3 01 	lds	r31, 0x01B3	; 0x8001b3 <__brkval+0x1>
     640:	e2 17       	cp	r30, r18
     642:	f3 07       	cpc	r31, r19
     644:	a0 f4       	brcc	.+40     	; 0x66e <malloc+0x120>
     646:	2e 1b       	sub	r18, r30
     648:	3f 0b       	sbc	r19, r31
     64a:	28 17       	cp	r18, r24
     64c:	39 07       	cpc	r19, r25
     64e:	78 f0       	brcs	.+30     	; 0x66e <malloc+0x120>
     650:	ac 01       	movw	r20, r24
     652:	4e 5f       	subi	r20, 0xFE	; 254
     654:	5f 4f       	sbci	r21, 0xFF	; 255
     656:	24 17       	cp	r18, r20
     658:	35 07       	cpc	r19, r21
     65a:	48 f0       	brcs	.+18     	; 0x66e <malloc+0x120>
     65c:	4e 0f       	add	r20, r30
     65e:	5f 1f       	adc	r21, r31
     660:	50 93 b3 01 	sts	0x01B3, r21	; 0x8001b3 <__brkval+0x1>
     664:	40 93 b2 01 	sts	0x01B2, r20	; 0x8001b2 <__brkval>
     668:	81 93       	st	Z+, r24
     66a:	91 93       	st	Z+, r25
     66c:	02 c0       	rjmp	.+4      	; 0x672 <malloc+0x124>
     66e:	e0 e0       	ldi	r30, 0x00	; 0
     670:	f0 e0       	ldi	r31, 0x00	; 0
     672:	cf 01       	movw	r24, r30
     674:	df 91       	pop	r29
     676:	cf 91       	pop	r28
     678:	1f 91       	pop	r17
     67a:	0f 91       	pop	r16
     67c:	08 95       	ret

0000067e <free>:
     67e:	cf 93       	push	r28
     680:	df 93       	push	r29
     682:	00 97       	sbiw	r24, 0x00	; 0
     684:	09 f4       	brne	.+2      	; 0x688 <free+0xa>
     686:	81 c0       	rjmp	.+258    	; 0x78a <free+0x10c>
     688:	fc 01       	movw	r30, r24
     68a:	32 97       	sbiw	r30, 0x02	; 2
     68c:	13 82       	std	Z+3, r1	; 0x03
     68e:	12 82       	std	Z+2, r1	; 0x02
     690:	a0 91 b4 01 	lds	r26, 0x01B4	; 0x8001b4 <__flp>
     694:	b0 91 b5 01 	lds	r27, 0x01B5	; 0x8001b5 <__flp+0x1>
     698:	10 97       	sbiw	r26, 0x00	; 0
     69a:	81 f4       	brne	.+32     	; 0x6bc <free+0x3e>
     69c:	20 81       	ld	r18, Z
     69e:	31 81       	ldd	r19, Z+1	; 0x01
     6a0:	82 0f       	add	r24, r18
     6a2:	93 1f       	adc	r25, r19
     6a4:	20 91 b2 01 	lds	r18, 0x01B2	; 0x8001b2 <__brkval>
     6a8:	30 91 b3 01 	lds	r19, 0x01B3	; 0x8001b3 <__brkval+0x1>
     6ac:	28 17       	cp	r18, r24
     6ae:	39 07       	cpc	r19, r25
     6b0:	51 f5       	brne	.+84     	; 0x706 <free+0x88>
     6b2:	f0 93 b3 01 	sts	0x01B3, r31	; 0x8001b3 <__brkval+0x1>
     6b6:	e0 93 b2 01 	sts	0x01B2, r30	; 0x8001b2 <__brkval>
     6ba:	67 c0       	rjmp	.+206    	; 0x78a <free+0x10c>
     6bc:	ed 01       	movw	r28, r26
     6be:	20 e0       	ldi	r18, 0x00	; 0
     6c0:	30 e0       	ldi	r19, 0x00	; 0
     6c2:	ce 17       	cp	r28, r30
     6c4:	df 07       	cpc	r29, r31
     6c6:	40 f4       	brcc	.+16     	; 0x6d8 <free+0x5a>
     6c8:	4a 81       	ldd	r20, Y+2	; 0x02
     6ca:	5b 81       	ldd	r21, Y+3	; 0x03
     6cc:	9e 01       	movw	r18, r28
     6ce:	41 15       	cp	r20, r1
     6d0:	51 05       	cpc	r21, r1
     6d2:	f1 f0       	breq	.+60     	; 0x710 <free+0x92>
     6d4:	ea 01       	movw	r28, r20
     6d6:	f5 cf       	rjmp	.-22     	; 0x6c2 <free+0x44>
     6d8:	d3 83       	std	Z+3, r29	; 0x03
     6da:	c2 83       	std	Z+2, r28	; 0x02
     6dc:	40 81       	ld	r20, Z
     6de:	51 81       	ldd	r21, Z+1	; 0x01
     6e0:	84 0f       	add	r24, r20
     6e2:	95 1f       	adc	r25, r21
     6e4:	c8 17       	cp	r28, r24
     6e6:	d9 07       	cpc	r29, r25
     6e8:	59 f4       	brne	.+22     	; 0x700 <free+0x82>
     6ea:	88 81       	ld	r24, Y
     6ec:	99 81       	ldd	r25, Y+1	; 0x01
     6ee:	84 0f       	add	r24, r20
     6f0:	95 1f       	adc	r25, r21
     6f2:	02 96       	adiw	r24, 0x02	; 2
     6f4:	91 83       	std	Z+1, r25	; 0x01
     6f6:	80 83       	st	Z, r24
     6f8:	8a 81       	ldd	r24, Y+2	; 0x02
     6fa:	9b 81       	ldd	r25, Y+3	; 0x03
     6fc:	93 83       	std	Z+3, r25	; 0x03
     6fe:	82 83       	std	Z+2, r24	; 0x02
     700:	21 15       	cp	r18, r1
     702:	31 05       	cpc	r19, r1
     704:	29 f4       	brne	.+10     	; 0x710 <free+0x92>
     706:	f0 93 b5 01 	sts	0x01B5, r31	; 0x8001b5 <__flp+0x1>
     70a:	e0 93 b4 01 	sts	0x01B4, r30	; 0x8001b4 <__flp>
     70e:	3d c0       	rjmp	.+122    	; 0x78a <free+0x10c>
     710:	e9 01       	movw	r28, r18
     712:	fb 83       	std	Y+3, r31	; 0x03
     714:	ea 83       	std	Y+2, r30	; 0x02
     716:	49 91       	ld	r20, Y+
     718:	59 91       	ld	r21, Y+
     71a:	c4 0f       	add	r28, r20
     71c:	d5 1f       	adc	r29, r21
     71e:	ec 17       	cp	r30, r28
     720:	fd 07       	cpc	r31, r29
     722:	61 f4       	brne	.+24     	; 0x73c <free+0xbe>
     724:	80 81       	ld	r24, Z
     726:	91 81       	ldd	r25, Z+1	; 0x01
     728:	84 0f       	add	r24, r20
     72a:	95 1f       	adc	r25, r21
     72c:	02 96       	adiw	r24, 0x02	; 2
     72e:	e9 01       	movw	r28, r18
     730:	99 83       	std	Y+1, r25	; 0x01
     732:	88 83       	st	Y, r24
     734:	82 81       	ldd	r24, Z+2	; 0x02
     736:	93 81       	ldd	r25, Z+3	; 0x03
     738:	9b 83       	std	Y+3, r25	; 0x03
     73a:	8a 83       	std	Y+2, r24	; 0x02
     73c:	e0 e0       	ldi	r30, 0x00	; 0
     73e:	f0 e0       	ldi	r31, 0x00	; 0
     740:	12 96       	adiw	r26, 0x02	; 2
     742:	8d 91       	ld	r24, X+
     744:	9c 91       	ld	r25, X
     746:	13 97       	sbiw	r26, 0x03	; 3
     748:	00 97       	sbiw	r24, 0x00	; 0
     74a:	19 f0       	breq	.+6      	; 0x752 <free+0xd4>
     74c:	fd 01       	movw	r30, r26
     74e:	dc 01       	movw	r26, r24
     750:	f7 cf       	rjmp	.-18     	; 0x740 <free+0xc2>
     752:	8d 91       	ld	r24, X+
     754:	9c 91       	ld	r25, X
     756:	11 97       	sbiw	r26, 0x01	; 1
     758:	9d 01       	movw	r18, r26
     75a:	2e 5f       	subi	r18, 0xFE	; 254
     75c:	3f 4f       	sbci	r19, 0xFF	; 255
     75e:	82 0f       	add	r24, r18
     760:	93 1f       	adc	r25, r19
     762:	20 91 b2 01 	lds	r18, 0x01B2	; 0x8001b2 <__brkval>
     766:	30 91 b3 01 	lds	r19, 0x01B3	; 0x8001b3 <__brkval+0x1>
     76a:	28 17       	cp	r18, r24
     76c:	39 07       	cpc	r19, r25
     76e:	69 f4       	brne	.+26     	; 0x78a <free+0x10c>
     770:	30 97       	sbiw	r30, 0x00	; 0
     772:	29 f4       	brne	.+10     	; 0x77e <free+0x100>
     774:	10 92 b5 01 	sts	0x01B5, r1	; 0x8001b5 <__flp+0x1>
     778:	10 92 b4 01 	sts	0x01B4, r1	; 0x8001b4 <__flp>
     77c:	02 c0       	rjmp	.+4      	; 0x782 <free+0x104>
     77e:	13 82       	std	Z+3, r1	; 0x03
     780:	12 82       	std	Z+2, r1	; 0x02
     782:	b0 93 b3 01 	sts	0x01B3, r27	; 0x8001b3 <__brkval+0x1>
     786:	a0 93 b2 01 	sts	0x01B2, r26	; 0x8001b2 <__brkval>
     78a:	df 91       	pop	r29
     78c:	cf 91       	pop	r28
     78e:	08 95       	ret

00000790 <strcpy>:
     790:	fb 01       	movw	r30, r22
     792:	dc 01       	movw	r26, r24
     794:	01 90       	ld	r0, Z+
     796:	0d 92       	st	X+, r0
     798:	00 20       	and	r0, r0
     79a:	e1 f7       	brne	.-8      	; 0x794 <strcpy+0x4>
     79c:	08 95       	ret

0000079e <strstr>:
     79e:	fb 01       	movw	r30, r22
     7a0:	51 91       	ld	r21, Z+
     7a2:	55 23       	and	r21, r21
     7a4:	a9 f0       	breq	.+42     	; 0x7d0 <strstr+0x32>
     7a6:	bf 01       	movw	r22, r30
     7a8:	dc 01       	movw	r26, r24
     7aa:	4d 91       	ld	r20, X+
     7ac:	45 17       	cp	r20, r21
     7ae:	41 11       	cpse	r20, r1
     7b0:	e1 f7       	brne	.-8      	; 0x7aa <strstr+0xc>
     7b2:	59 f4       	brne	.+22     	; 0x7ca <strstr+0x2c>
     7b4:	cd 01       	movw	r24, r26
     7b6:	01 90       	ld	r0, Z+
     7b8:	00 20       	and	r0, r0
     7ba:	49 f0       	breq	.+18     	; 0x7ce <strstr+0x30>
     7bc:	4d 91       	ld	r20, X+
     7be:	40 15       	cp	r20, r0
     7c0:	41 11       	cpse	r20, r1
     7c2:	c9 f3       	breq	.-14     	; 0x7b6 <strstr+0x18>
     7c4:	fb 01       	movw	r30, r22
     7c6:	41 11       	cpse	r20, r1
     7c8:	ef cf       	rjmp	.-34     	; 0x7a8 <strstr+0xa>
     7ca:	81 e0       	ldi	r24, 0x01	; 1
     7cc:	90 e0       	ldi	r25, 0x00	; 0
     7ce:	01 97       	sbiw	r24, 0x01	; 1
     7d0:	08 95       	ret

000007d2 <puts>:
     7d2:	0f 93       	push	r16
     7d4:	1f 93       	push	r17
     7d6:	cf 93       	push	r28
     7d8:	df 93       	push	r29
     7da:	e0 91 b8 01 	lds	r30, 0x01B8	; 0x8001b8 <__iob+0x2>
     7de:	f0 91 b9 01 	lds	r31, 0x01B9	; 0x8001b9 <__iob+0x3>
     7e2:	23 81       	ldd	r18, Z+3	; 0x03
     7e4:	21 ff       	sbrs	r18, 1
     7e6:	1b c0       	rjmp	.+54     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
     7e8:	8c 01       	movw	r16, r24
     7ea:	d0 e0       	ldi	r29, 0x00	; 0
     7ec:	c0 e0       	ldi	r28, 0x00	; 0
     7ee:	f8 01       	movw	r30, r16
     7f0:	81 91       	ld	r24, Z+
     7f2:	8f 01       	movw	r16, r30
     7f4:	60 91 b8 01 	lds	r22, 0x01B8	; 0x8001b8 <__iob+0x2>
     7f8:	70 91 b9 01 	lds	r23, 0x01B9	; 0x8001b9 <__iob+0x3>
     7fc:	db 01       	movw	r26, r22
     7fe:	18 96       	adiw	r26, 0x08	; 8
     800:	ed 91       	ld	r30, X+
     802:	fc 91       	ld	r31, X
     804:	19 97       	sbiw	r26, 0x09	; 9
     806:	88 23       	and	r24, r24
     808:	31 f0       	breq	.+12     	; 0x816 <__DATA_REGION_LENGTH__+0x16>
     80a:	09 95       	icall
     80c:	89 2b       	or	r24, r25
     80e:	79 f3       	breq	.-34     	; 0x7ee <puts+0x1c>
     810:	df ef       	ldi	r29, 0xFF	; 255
     812:	cf ef       	ldi	r28, 0xFF	; 255
     814:	ec cf       	rjmp	.-40     	; 0x7ee <puts+0x1c>
     816:	8a e0       	ldi	r24, 0x0A	; 10
     818:	09 95       	icall
     81a:	89 2b       	or	r24, r25
     81c:	19 f0       	breq	.+6      	; 0x824 <__DATA_REGION_LENGTH__+0x24>
     81e:	8f ef       	ldi	r24, 0xFF	; 255
     820:	9f ef       	ldi	r25, 0xFF	; 255
     822:	02 c0       	rjmp	.+4      	; 0x828 <__DATA_REGION_LENGTH__+0x28>
     824:	8d 2f       	mov	r24, r29
     826:	9c 2f       	mov	r25, r28
     828:	df 91       	pop	r29
     82a:	cf 91       	pop	r28
     82c:	1f 91       	pop	r17
     82e:	0f 91       	pop	r16
     830:	08 95       	ret

00000832 <scanf>:
     832:	a0 e0       	ldi	r26, 0x00	; 0
     834:	b0 e0       	ldi	r27, 0x00	; 0
     836:	ef e1       	ldi	r30, 0x1F	; 31
     838:	f4 e0       	ldi	r31, 0x04	; 4
     83a:	0c 94 0d 0a 	jmp	0x141a	; 0x141a <__prologue_saves__+0x20>
     83e:	ae 01       	movw	r20, r28
     840:	4b 5f       	subi	r20, 0xFB	; 251
     842:	5f 4f       	sbci	r21, 0xFF	; 255
     844:	fa 01       	movw	r30, r20
     846:	61 91       	ld	r22, Z+
     848:	71 91       	ld	r23, Z+
     84a:	af 01       	movw	r20, r30
     84c:	80 91 b6 01 	lds	r24, 0x01B6	; 0x8001b6 <__iob>
     850:	90 91 b7 01 	lds	r25, 0x01B7	; 0x8001b7 <__iob+0x1>
     854:	0e 94 ce 07 	call	0xf9c	; 0xf9c <vfscanf>
     858:	e2 e0       	ldi	r30, 0x02	; 2
     85a:	0c 94 29 0a 	jmp	0x1452	; 0x1452 <__epilogue_restores__+0x20>

0000085e <sprintf>:
     85e:	ae e0       	ldi	r26, 0x0E	; 14
     860:	b0 e0       	ldi	r27, 0x00	; 0
     862:	e5 e3       	ldi	r30, 0x35	; 53
     864:	f4 e0       	ldi	r31, 0x04	; 4
     866:	0c 94 0b 0a 	jmp	0x1416	; 0x1416 <__prologue_saves__+0x1c>
     86a:	0d 89       	ldd	r16, Y+21	; 0x15
     86c:	1e 89       	ldd	r17, Y+22	; 0x16
     86e:	86 e0       	ldi	r24, 0x06	; 6
     870:	8c 83       	std	Y+4, r24	; 0x04
     872:	1a 83       	std	Y+2, r17	; 0x02
     874:	09 83       	std	Y+1, r16	; 0x01
     876:	8f ef       	ldi	r24, 0xFF	; 255
     878:	9f e7       	ldi	r25, 0x7F	; 127
     87a:	9e 83       	std	Y+6, r25	; 0x06
     87c:	8d 83       	std	Y+5, r24	; 0x05
     87e:	ae 01       	movw	r20, r28
     880:	47 5e       	subi	r20, 0xE7	; 231
     882:	5f 4f       	sbci	r21, 0xFF	; 255
     884:	6f 89       	ldd	r22, Y+23	; 0x17
     886:	78 8d       	ldd	r23, Y+24	; 0x18
     888:	ce 01       	movw	r24, r28
     88a:	01 96       	adiw	r24, 0x01	; 1
     88c:	0e 94 51 04 	call	0x8a2	; 0x8a2 <vfprintf>
     890:	ef 81       	ldd	r30, Y+7	; 0x07
     892:	f8 85       	ldd	r31, Y+8	; 0x08
     894:	e0 0f       	add	r30, r16
     896:	f1 1f       	adc	r31, r17
     898:	10 82       	st	Z, r1
     89a:	2e 96       	adiw	r28, 0x0e	; 14
     89c:	e4 e0       	ldi	r30, 0x04	; 4
     89e:	0c 94 27 0a 	jmp	0x144e	; 0x144e <__epilogue_restores__+0x1c>

000008a2 <vfprintf>:
     8a2:	ab e0       	ldi	r26, 0x0B	; 11
     8a4:	b0 e0       	ldi	r27, 0x00	; 0
     8a6:	e7 e5       	ldi	r30, 0x57	; 87
     8a8:	f4 e0       	ldi	r31, 0x04	; 4
     8aa:	0c 94 fd 09 	jmp	0x13fa	; 0x13fa <__prologue_saves__>
     8ae:	6c 01       	movw	r12, r24
     8b0:	7b 01       	movw	r14, r22
     8b2:	8a 01       	movw	r16, r20
     8b4:	fc 01       	movw	r30, r24
     8b6:	17 82       	std	Z+7, r1	; 0x07
     8b8:	16 82       	std	Z+6, r1	; 0x06
     8ba:	83 81       	ldd	r24, Z+3	; 0x03
     8bc:	81 ff       	sbrs	r24, 1
     8be:	cc c1       	rjmp	.+920    	; 0xc58 <__stack+0x359>
     8c0:	ce 01       	movw	r24, r28
     8c2:	01 96       	adiw	r24, 0x01	; 1
     8c4:	3c 01       	movw	r6, r24
     8c6:	f6 01       	movw	r30, r12
     8c8:	93 81       	ldd	r25, Z+3	; 0x03
     8ca:	f7 01       	movw	r30, r14
     8cc:	93 fd       	sbrc	r25, 3
     8ce:	85 91       	lpm	r24, Z+
     8d0:	93 ff       	sbrs	r25, 3
     8d2:	81 91       	ld	r24, Z+
     8d4:	7f 01       	movw	r14, r30
     8d6:	88 23       	and	r24, r24
     8d8:	09 f4       	brne	.+2      	; 0x8dc <vfprintf+0x3a>
     8da:	ba c1       	rjmp	.+884    	; 0xc50 <__stack+0x351>
     8dc:	85 32       	cpi	r24, 0x25	; 37
     8de:	39 f4       	brne	.+14     	; 0x8ee <vfprintf+0x4c>
     8e0:	93 fd       	sbrc	r25, 3
     8e2:	85 91       	lpm	r24, Z+
     8e4:	93 ff       	sbrs	r25, 3
     8e6:	81 91       	ld	r24, Z+
     8e8:	7f 01       	movw	r14, r30
     8ea:	85 32       	cpi	r24, 0x25	; 37
     8ec:	29 f4       	brne	.+10     	; 0x8f8 <vfprintf+0x56>
     8ee:	b6 01       	movw	r22, r12
     8f0:	90 e0       	ldi	r25, 0x00	; 0
     8f2:	0e 94 47 09 	call	0x128e	; 0x128e <fputc>
     8f6:	e7 cf       	rjmp	.-50     	; 0x8c6 <vfprintf+0x24>
     8f8:	91 2c       	mov	r9, r1
     8fa:	21 2c       	mov	r2, r1
     8fc:	31 2c       	mov	r3, r1
     8fe:	ff e1       	ldi	r31, 0x1F	; 31
     900:	f3 15       	cp	r31, r3
     902:	d8 f0       	brcs	.+54     	; 0x93a <__stack+0x3b>
     904:	8b 32       	cpi	r24, 0x2B	; 43
     906:	79 f0       	breq	.+30     	; 0x926 <__stack+0x27>
     908:	38 f4       	brcc	.+14     	; 0x918 <__stack+0x19>
     90a:	80 32       	cpi	r24, 0x20	; 32
     90c:	79 f0       	breq	.+30     	; 0x92c <__stack+0x2d>
     90e:	83 32       	cpi	r24, 0x23	; 35
     910:	a1 f4       	brne	.+40     	; 0x93a <__stack+0x3b>
     912:	23 2d       	mov	r18, r3
     914:	20 61       	ori	r18, 0x10	; 16
     916:	1d c0       	rjmp	.+58     	; 0x952 <__stack+0x53>
     918:	8d 32       	cpi	r24, 0x2D	; 45
     91a:	61 f0       	breq	.+24     	; 0x934 <__stack+0x35>
     91c:	80 33       	cpi	r24, 0x30	; 48
     91e:	69 f4       	brne	.+26     	; 0x93a <__stack+0x3b>
     920:	23 2d       	mov	r18, r3
     922:	21 60       	ori	r18, 0x01	; 1
     924:	16 c0       	rjmp	.+44     	; 0x952 <__stack+0x53>
     926:	83 2d       	mov	r24, r3
     928:	82 60       	ori	r24, 0x02	; 2
     92a:	38 2e       	mov	r3, r24
     92c:	e3 2d       	mov	r30, r3
     92e:	e4 60       	ori	r30, 0x04	; 4
     930:	3e 2e       	mov	r3, r30
     932:	2a c0       	rjmp	.+84     	; 0x988 <__stack+0x89>
     934:	f3 2d       	mov	r31, r3
     936:	f8 60       	ori	r31, 0x08	; 8
     938:	1d c0       	rjmp	.+58     	; 0x974 <__stack+0x75>
     93a:	37 fc       	sbrc	r3, 7
     93c:	2d c0       	rjmp	.+90     	; 0x998 <__stack+0x99>
     93e:	20 ed       	ldi	r18, 0xD0	; 208
     940:	28 0f       	add	r18, r24
     942:	2a 30       	cpi	r18, 0x0A	; 10
     944:	40 f0       	brcs	.+16     	; 0x956 <__stack+0x57>
     946:	8e 32       	cpi	r24, 0x2E	; 46
     948:	b9 f4       	brne	.+46     	; 0x978 <__stack+0x79>
     94a:	36 fc       	sbrc	r3, 6
     94c:	81 c1       	rjmp	.+770    	; 0xc50 <__stack+0x351>
     94e:	23 2d       	mov	r18, r3
     950:	20 64       	ori	r18, 0x40	; 64
     952:	32 2e       	mov	r3, r18
     954:	19 c0       	rjmp	.+50     	; 0x988 <__stack+0x89>
     956:	36 fe       	sbrs	r3, 6
     958:	06 c0       	rjmp	.+12     	; 0x966 <__stack+0x67>
     95a:	8a e0       	ldi	r24, 0x0A	; 10
     95c:	98 9e       	mul	r9, r24
     95e:	20 0d       	add	r18, r0
     960:	11 24       	eor	r1, r1
     962:	92 2e       	mov	r9, r18
     964:	11 c0       	rjmp	.+34     	; 0x988 <__stack+0x89>
     966:	ea e0       	ldi	r30, 0x0A	; 10
     968:	2e 9e       	mul	r2, r30
     96a:	20 0d       	add	r18, r0
     96c:	11 24       	eor	r1, r1
     96e:	22 2e       	mov	r2, r18
     970:	f3 2d       	mov	r31, r3
     972:	f0 62       	ori	r31, 0x20	; 32
     974:	3f 2e       	mov	r3, r31
     976:	08 c0       	rjmp	.+16     	; 0x988 <__stack+0x89>
     978:	8c 36       	cpi	r24, 0x6C	; 108
     97a:	21 f4       	brne	.+8      	; 0x984 <__stack+0x85>
     97c:	83 2d       	mov	r24, r3
     97e:	80 68       	ori	r24, 0x80	; 128
     980:	38 2e       	mov	r3, r24
     982:	02 c0       	rjmp	.+4      	; 0x988 <__stack+0x89>
     984:	88 36       	cpi	r24, 0x68	; 104
     986:	41 f4       	brne	.+16     	; 0x998 <__stack+0x99>
     988:	f7 01       	movw	r30, r14
     98a:	93 fd       	sbrc	r25, 3
     98c:	85 91       	lpm	r24, Z+
     98e:	93 ff       	sbrs	r25, 3
     990:	81 91       	ld	r24, Z+
     992:	7f 01       	movw	r14, r30
     994:	81 11       	cpse	r24, r1
     996:	b3 cf       	rjmp	.-154    	; 0x8fe <vfprintf+0x5c>
     998:	98 2f       	mov	r25, r24
     99a:	9f 7d       	andi	r25, 0xDF	; 223
     99c:	95 54       	subi	r25, 0x45	; 69
     99e:	93 30       	cpi	r25, 0x03	; 3
     9a0:	28 f4       	brcc	.+10     	; 0x9ac <__stack+0xad>
     9a2:	0c 5f       	subi	r16, 0xFC	; 252
     9a4:	1f 4f       	sbci	r17, 0xFF	; 255
     9a6:	9f e3       	ldi	r25, 0x3F	; 63
     9a8:	99 83       	std	Y+1, r25	; 0x01
     9aa:	0d c0       	rjmp	.+26     	; 0x9c6 <__stack+0xc7>
     9ac:	83 36       	cpi	r24, 0x63	; 99
     9ae:	31 f0       	breq	.+12     	; 0x9bc <__stack+0xbd>
     9b0:	83 37       	cpi	r24, 0x73	; 115
     9b2:	71 f0       	breq	.+28     	; 0x9d0 <__stack+0xd1>
     9b4:	83 35       	cpi	r24, 0x53	; 83
     9b6:	09 f0       	breq	.+2      	; 0x9ba <__stack+0xbb>
     9b8:	59 c0       	rjmp	.+178    	; 0xa6c <__stack+0x16d>
     9ba:	21 c0       	rjmp	.+66     	; 0x9fe <__stack+0xff>
     9bc:	f8 01       	movw	r30, r16
     9be:	80 81       	ld	r24, Z
     9c0:	89 83       	std	Y+1, r24	; 0x01
     9c2:	0e 5f       	subi	r16, 0xFE	; 254
     9c4:	1f 4f       	sbci	r17, 0xFF	; 255
     9c6:	88 24       	eor	r8, r8
     9c8:	83 94       	inc	r8
     9ca:	91 2c       	mov	r9, r1
     9cc:	53 01       	movw	r10, r6
     9ce:	13 c0       	rjmp	.+38     	; 0x9f6 <__stack+0xf7>
     9d0:	28 01       	movw	r4, r16
     9d2:	f2 e0       	ldi	r31, 0x02	; 2
     9d4:	4f 0e       	add	r4, r31
     9d6:	51 1c       	adc	r5, r1
     9d8:	f8 01       	movw	r30, r16
     9da:	a0 80       	ld	r10, Z
     9dc:	b1 80       	ldd	r11, Z+1	; 0x01
     9de:	36 fe       	sbrs	r3, 6
     9e0:	03 c0       	rjmp	.+6      	; 0x9e8 <__stack+0xe9>
     9e2:	69 2d       	mov	r22, r9
     9e4:	70 e0       	ldi	r23, 0x00	; 0
     9e6:	02 c0       	rjmp	.+4      	; 0x9ec <__stack+0xed>
     9e8:	6f ef       	ldi	r22, 0xFF	; 255
     9ea:	7f ef       	ldi	r23, 0xFF	; 255
     9ec:	c5 01       	movw	r24, r10
     9ee:	0e 94 fe 08 	call	0x11fc	; 0x11fc <strnlen>
     9f2:	4c 01       	movw	r8, r24
     9f4:	82 01       	movw	r16, r4
     9f6:	f3 2d       	mov	r31, r3
     9f8:	ff 77       	andi	r31, 0x7F	; 127
     9fa:	3f 2e       	mov	r3, r31
     9fc:	16 c0       	rjmp	.+44     	; 0xa2a <__stack+0x12b>
     9fe:	28 01       	movw	r4, r16
     a00:	22 e0       	ldi	r18, 0x02	; 2
     a02:	42 0e       	add	r4, r18
     a04:	51 1c       	adc	r5, r1
     a06:	f8 01       	movw	r30, r16
     a08:	a0 80       	ld	r10, Z
     a0a:	b1 80       	ldd	r11, Z+1	; 0x01
     a0c:	36 fe       	sbrs	r3, 6
     a0e:	03 c0       	rjmp	.+6      	; 0xa16 <__stack+0x117>
     a10:	69 2d       	mov	r22, r9
     a12:	70 e0       	ldi	r23, 0x00	; 0
     a14:	02 c0       	rjmp	.+4      	; 0xa1a <__stack+0x11b>
     a16:	6f ef       	ldi	r22, 0xFF	; 255
     a18:	7f ef       	ldi	r23, 0xFF	; 255
     a1a:	c5 01       	movw	r24, r10
     a1c:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <strnlen_P>
     a20:	4c 01       	movw	r8, r24
     a22:	f3 2d       	mov	r31, r3
     a24:	f0 68       	ori	r31, 0x80	; 128
     a26:	3f 2e       	mov	r3, r31
     a28:	82 01       	movw	r16, r4
     a2a:	33 fc       	sbrc	r3, 3
     a2c:	1b c0       	rjmp	.+54     	; 0xa64 <__stack+0x165>
     a2e:	82 2d       	mov	r24, r2
     a30:	90 e0       	ldi	r25, 0x00	; 0
     a32:	88 16       	cp	r8, r24
     a34:	99 06       	cpc	r9, r25
     a36:	b0 f4       	brcc	.+44     	; 0xa64 <__stack+0x165>
     a38:	b6 01       	movw	r22, r12
     a3a:	80 e2       	ldi	r24, 0x20	; 32
     a3c:	90 e0       	ldi	r25, 0x00	; 0
     a3e:	0e 94 47 09 	call	0x128e	; 0x128e <fputc>
     a42:	2a 94       	dec	r2
     a44:	f4 cf       	rjmp	.-24     	; 0xa2e <__stack+0x12f>
     a46:	f5 01       	movw	r30, r10
     a48:	37 fc       	sbrc	r3, 7
     a4a:	85 91       	lpm	r24, Z+
     a4c:	37 fe       	sbrs	r3, 7
     a4e:	81 91       	ld	r24, Z+
     a50:	5f 01       	movw	r10, r30
     a52:	b6 01       	movw	r22, r12
     a54:	90 e0       	ldi	r25, 0x00	; 0
     a56:	0e 94 47 09 	call	0x128e	; 0x128e <fputc>
     a5a:	21 10       	cpse	r2, r1
     a5c:	2a 94       	dec	r2
     a5e:	21 e0       	ldi	r18, 0x01	; 1
     a60:	82 1a       	sub	r8, r18
     a62:	91 08       	sbc	r9, r1
     a64:	81 14       	cp	r8, r1
     a66:	91 04       	cpc	r9, r1
     a68:	71 f7       	brne	.-36     	; 0xa46 <__stack+0x147>
     a6a:	e8 c0       	rjmp	.+464    	; 0xc3c <__stack+0x33d>
     a6c:	84 36       	cpi	r24, 0x64	; 100
     a6e:	11 f0       	breq	.+4      	; 0xa74 <__stack+0x175>
     a70:	89 36       	cpi	r24, 0x69	; 105
     a72:	41 f5       	brne	.+80     	; 0xac4 <__stack+0x1c5>
     a74:	f8 01       	movw	r30, r16
     a76:	37 fe       	sbrs	r3, 7
     a78:	07 c0       	rjmp	.+14     	; 0xa88 <__stack+0x189>
     a7a:	60 81       	ld	r22, Z
     a7c:	71 81       	ldd	r23, Z+1	; 0x01
     a7e:	82 81       	ldd	r24, Z+2	; 0x02
     a80:	93 81       	ldd	r25, Z+3	; 0x03
     a82:	0c 5f       	subi	r16, 0xFC	; 252
     a84:	1f 4f       	sbci	r17, 0xFF	; 255
     a86:	08 c0       	rjmp	.+16     	; 0xa98 <__stack+0x199>
     a88:	60 81       	ld	r22, Z
     a8a:	71 81       	ldd	r23, Z+1	; 0x01
     a8c:	07 2e       	mov	r0, r23
     a8e:	00 0c       	add	r0, r0
     a90:	88 0b       	sbc	r24, r24
     a92:	99 0b       	sbc	r25, r25
     a94:	0e 5f       	subi	r16, 0xFE	; 254
     a96:	1f 4f       	sbci	r17, 0xFF	; 255
     a98:	f3 2d       	mov	r31, r3
     a9a:	ff 76       	andi	r31, 0x6F	; 111
     a9c:	3f 2e       	mov	r3, r31
     a9e:	97 ff       	sbrs	r25, 7
     aa0:	09 c0       	rjmp	.+18     	; 0xab4 <__stack+0x1b5>
     aa2:	90 95       	com	r25
     aa4:	80 95       	com	r24
     aa6:	70 95       	com	r23
     aa8:	61 95       	neg	r22
     aaa:	7f 4f       	sbci	r23, 0xFF	; 255
     aac:	8f 4f       	sbci	r24, 0xFF	; 255
     aae:	9f 4f       	sbci	r25, 0xFF	; 255
     ab0:	f0 68       	ori	r31, 0x80	; 128
     ab2:	3f 2e       	mov	r3, r31
     ab4:	2a e0       	ldi	r18, 0x0A	; 10
     ab6:	30 e0       	ldi	r19, 0x00	; 0
     ab8:	a3 01       	movw	r20, r6
     aba:	0e 94 9c 09 	call	0x1338	; 0x1338 <__ultoa_invert>
     abe:	88 2e       	mov	r8, r24
     ac0:	86 18       	sub	r8, r6
     ac2:	45 c0       	rjmp	.+138    	; 0xb4e <__stack+0x24f>
     ac4:	85 37       	cpi	r24, 0x75	; 117
     ac6:	31 f4       	brne	.+12     	; 0xad4 <__stack+0x1d5>
     ac8:	23 2d       	mov	r18, r3
     aca:	2f 7e       	andi	r18, 0xEF	; 239
     acc:	b2 2e       	mov	r11, r18
     ace:	2a e0       	ldi	r18, 0x0A	; 10
     ad0:	30 e0       	ldi	r19, 0x00	; 0
     ad2:	25 c0       	rjmp	.+74     	; 0xb1e <__stack+0x21f>
     ad4:	93 2d       	mov	r25, r3
     ad6:	99 7f       	andi	r25, 0xF9	; 249
     ad8:	b9 2e       	mov	r11, r25
     ada:	8f 36       	cpi	r24, 0x6F	; 111
     adc:	c1 f0       	breq	.+48     	; 0xb0e <__stack+0x20f>
     ade:	18 f4       	brcc	.+6      	; 0xae6 <__stack+0x1e7>
     ae0:	88 35       	cpi	r24, 0x58	; 88
     ae2:	79 f0       	breq	.+30     	; 0xb02 <__stack+0x203>
     ae4:	b5 c0       	rjmp	.+362    	; 0xc50 <__stack+0x351>
     ae6:	80 37       	cpi	r24, 0x70	; 112
     ae8:	19 f0       	breq	.+6      	; 0xaf0 <__stack+0x1f1>
     aea:	88 37       	cpi	r24, 0x78	; 120
     aec:	21 f0       	breq	.+8      	; 0xaf6 <__stack+0x1f7>
     aee:	b0 c0       	rjmp	.+352    	; 0xc50 <__stack+0x351>
     af0:	e9 2f       	mov	r30, r25
     af2:	e0 61       	ori	r30, 0x10	; 16
     af4:	be 2e       	mov	r11, r30
     af6:	b4 fe       	sbrs	r11, 4
     af8:	0d c0       	rjmp	.+26     	; 0xb14 <__stack+0x215>
     afa:	fb 2d       	mov	r31, r11
     afc:	f4 60       	ori	r31, 0x04	; 4
     afe:	bf 2e       	mov	r11, r31
     b00:	09 c0       	rjmp	.+18     	; 0xb14 <__stack+0x215>
     b02:	34 fe       	sbrs	r3, 4
     b04:	0a c0       	rjmp	.+20     	; 0xb1a <__stack+0x21b>
     b06:	29 2f       	mov	r18, r25
     b08:	26 60       	ori	r18, 0x06	; 6
     b0a:	b2 2e       	mov	r11, r18
     b0c:	06 c0       	rjmp	.+12     	; 0xb1a <__stack+0x21b>
     b0e:	28 e0       	ldi	r18, 0x08	; 8
     b10:	30 e0       	ldi	r19, 0x00	; 0
     b12:	05 c0       	rjmp	.+10     	; 0xb1e <__stack+0x21f>
     b14:	20 e1       	ldi	r18, 0x10	; 16
     b16:	30 e0       	ldi	r19, 0x00	; 0
     b18:	02 c0       	rjmp	.+4      	; 0xb1e <__stack+0x21f>
     b1a:	20 e1       	ldi	r18, 0x10	; 16
     b1c:	32 e0       	ldi	r19, 0x02	; 2
     b1e:	f8 01       	movw	r30, r16
     b20:	b7 fe       	sbrs	r11, 7
     b22:	07 c0       	rjmp	.+14     	; 0xb32 <__stack+0x233>
     b24:	60 81       	ld	r22, Z
     b26:	71 81       	ldd	r23, Z+1	; 0x01
     b28:	82 81       	ldd	r24, Z+2	; 0x02
     b2a:	93 81       	ldd	r25, Z+3	; 0x03
     b2c:	0c 5f       	subi	r16, 0xFC	; 252
     b2e:	1f 4f       	sbci	r17, 0xFF	; 255
     b30:	06 c0       	rjmp	.+12     	; 0xb3e <__stack+0x23f>
     b32:	60 81       	ld	r22, Z
     b34:	71 81       	ldd	r23, Z+1	; 0x01
     b36:	80 e0       	ldi	r24, 0x00	; 0
     b38:	90 e0       	ldi	r25, 0x00	; 0
     b3a:	0e 5f       	subi	r16, 0xFE	; 254
     b3c:	1f 4f       	sbci	r17, 0xFF	; 255
     b3e:	a3 01       	movw	r20, r6
     b40:	0e 94 9c 09 	call	0x1338	; 0x1338 <__ultoa_invert>
     b44:	88 2e       	mov	r8, r24
     b46:	86 18       	sub	r8, r6
     b48:	fb 2d       	mov	r31, r11
     b4a:	ff 77       	andi	r31, 0x7F	; 127
     b4c:	3f 2e       	mov	r3, r31
     b4e:	36 fe       	sbrs	r3, 6
     b50:	0d c0       	rjmp	.+26     	; 0xb6c <__stack+0x26d>
     b52:	23 2d       	mov	r18, r3
     b54:	2e 7f       	andi	r18, 0xFE	; 254
     b56:	a2 2e       	mov	r10, r18
     b58:	89 14       	cp	r8, r9
     b5a:	58 f4       	brcc	.+22     	; 0xb72 <__stack+0x273>
     b5c:	34 fe       	sbrs	r3, 4
     b5e:	0b c0       	rjmp	.+22     	; 0xb76 <__stack+0x277>
     b60:	32 fc       	sbrc	r3, 2
     b62:	09 c0       	rjmp	.+18     	; 0xb76 <__stack+0x277>
     b64:	83 2d       	mov	r24, r3
     b66:	8e 7e       	andi	r24, 0xEE	; 238
     b68:	a8 2e       	mov	r10, r24
     b6a:	05 c0       	rjmp	.+10     	; 0xb76 <__stack+0x277>
     b6c:	b8 2c       	mov	r11, r8
     b6e:	a3 2c       	mov	r10, r3
     b70:	03 c0       	rjmp	.+6      	; 0xb78 <__stack+0x279>
     b72:	b8 2c       	mov	r11, r8
     b74:	01 c0       	rjmp	.+2      	; 0xb78 <__stack+0x279>
     b76:	b9 2c       	mov	r11, r9
     b78:	a4 fe       	sbrs	r10, 4
     b7a:	0f c0       	rjmp	.+30     	; 0xb9a <__stack+0x29b>
     b7c:	fe 01       	movw	r30, r28
     b7e:	e8 0d       	add	r30, r8
     b80:	f1 1d       	adc	r31, r1
     b82:	80 81       	ld	r24, Z
     b84:	80 33       	cpi	r24, 0x30	; 48
     b86:	21 f4       	brne	.+8      	; 0xb90 <__stack+0x291>
     b88:	9a 2d       	mov	r25, r10
     b8a:	99 7e       	andi	r25, 0xE9	; 233
     b8c:	a9 2e       	mov	r10, r25
     b8e:	09 c0       	rjmp	.+18     	; 0xba2 <__stack+0x2a3>
     b90:	a2 fe       	sbrs	r10, 2
     b92:	06 c0       	rjmp	.+12     	; 0xba0 <__stack+0x2a1>
     b94:	b3 94       	inc	r11
     b96:	b3 94       	inc	r11
     b98:	04 c0       	rjmp	.+8      	; 0xba2 <__stack+0x2a3>
     b9a:	8a 2d       	mov	r24, r10
     b9c:	86 78       	andi	r24, 0x86	; 134
     b9e:	09 f0       	breq	.+2      	; 0xba2 <__stack+0x2a3>
     ba0:	b3 94       	inc	r11
     ba2:	a3 fc       	sbrc	r10, 3
     ba4:	11 c0       	rjmp	.+34     	; 0xbc8 <__stack+0x2c9>
     ba6:	a0 fe       	sbrs	r10, 0
     ba8:	06 c0       	rjmp	.+12     	; 0xbb6 <__stack+0x2b7>
     baa:	b2 14       	cp	r11, r2
     bac:	88 f4       	brcc	.+34     	; 0xbd0 <__stack+0x2d1>
     bae:	28 0c       	add	r2, r8
     bb0:	92 2c       	mov	r9, r2
     bb2:	9b 18       	sub	r9, r11
     bb4:	0e c0       	rjmp	.+28     	; 0xbd2 <__stack+0x2d3>
     bb6:	b2 14       	cp	r11, r2
     bb8:	60 f4       	brcc	.+24     	; 0xbd2 <__stack+0x2d3>
     bba:	b6 01       	movw	r22, r12
     bbc:	80 e2       	ldi	r24, 0x20	; 32
     bbe:	90 e0       	ldi	r25, 0x00	; 0
     bc0:	0e 94 47 09 	call	0x128e	; 0x128e <fputc>
     bc4:	b3 94       	inc	r11
     bc6:	f7 cf       	rjmp	.-18     	; 0xbb6 <__stack+0x2b7>
     bc8:	b2 14       	cp	r11, r2
     bca:	18 f4       	brcc	.+6      	; 0xbd2 <__stack+0x2d3>
     bcc:	2b 18       	sub	r2, r11
     bce:	02 c0       	rjmp	.+4      	; 0xbd4 <__stack+0x2d5>
     bd0:	98 2c       	mov	r9, r8
     bd2:	21 2c       	mov	r2, r1
     bd4:	a4 fe       	sbrs	r10, 4
     bd6:	10 c0       	rjmp	.+32     	; 0xbf8 <__stack+0x2f9>
     bd8:	b6 01       	movw	r22, r12
     bda:	80 e3       	ldi	r24, 0x30	; 48
     bdc:	90 e0       	ldi	r25, 0x00	; 0
     bde:	0e 94 47 09 	call	0x128e	; 0x128e <fputc>
     be2:	a2 fe       	sbrs	r10, 2
     be4:	17 c0       	rjmp	.+46     	; 0xc14 <__stack+0x315>
     be6:	a1 fc       	sbrc	r10, 1
     be8:	03 c0       	rjmp	.+6      	; 0xbf0 <__stack+0x2f1>
     bea:	88 e7       	ldi	r24, 0x78	; 120
     bec:	90 e0       	ldi	r25, 0x00	; 0
     bee:	02 c0       	rjmp	.+4      	; 0xbf4 <__stack+0x2f5>
     bf0:	88 e5       	ldi	r24, 0x58	; 88
     bf2:	90 e0       	ldi	r25, 0x00	; 0
     bf4:	b6 01       	movw	r22, r12
     bf6:	0c c0       	rjmp	.+24     	; 0xc10 <__stack+0x311>
     bf8:	8a 2d       	mov	r24, r10
     bfa:	86 78       	andi	r24, 0x86	; 134
     bfc:	59 f0       	breq	.+22     	; 0xc14 <__stack+0x315>
     bfe:	a1 fe       	sbrs	r10, 1
     c00:	02 c0       	rjmp	.+4      	; 0xc06 <__stack+0x307>
     c02:	8b e2       	ldi	r24, 0x2B	; 43
     c04:	01 c0       	rjmp	.+2      	; 0xc08 <__stack+0x309>
     c06:	80 e2       	ldi	r24, 0x20	; 32
     c08:	a7 fc       	sbrc	r10, 7
     c0a:	8d e2       	ldi	r24, 0x2D	; 45
     c0c:	b6 01       	movw	r22, r12
     c0e:	90 e0       	ldi	r25, 0x00	; 0
     c10:	0e 94 47 09 	call	0x128e	; 0x128e <fputc>
     c14:	89 14       	cp	r8, r9
     c16:	38 f4       	brcc	.+14     	; 0xc26 <__stack+0x327>
     c18:	b6 01       	movw	r22, r12
     c1a:	80 e3       	ldi	r24, 0x30	; 48
     c1c:	90 e0       	ldi	r25, 0x00	; 0
     c1e:	0e 94 47 09 	call	0x128e	; 0x128e <fputc>
     c22:	9a 94       	dec	r9
     c24:	f7 cf       	rjmp	.-18     	; 0xc14 <__stack+0x315>
     c26:	8a 94       	dec	r8
     c28:	f3 01       	movw	r30, r6
     c2a:	e8 0d       	add	r30, r8
     c2c:	f1 1d       	adc	r31, r1
     c2e:	80 81       	ld	r24, Z
     c30:	b6 01       	movw	r22, r12
     c32:	90 e0       	ldi	r25, 0x00	; 0
     c34:	0e 94 47 09 	call	0x128e	; 0x128e <fputc>
     c38:	81 10       	cpse	r8, r1
     c3a:	f5 cf       	rjmp	.-22     	; 0xc26 <__stack+0x327>
     c3c:	22 20       	and	r2, r2
     c3e:	09 f4       	brne	.+2      	; 0xc42 <__stack+0x343>
     c40:	42 ce       	rjmp	.-892    	; 0x8c6 <vfprintf+0x24>
     c42:	b6 01       	movw	r22, r12
     c44:	80 e2       	ldi	r24, 0x20	; 32
     c46:	90 e0       	ldi	r25, 0x00	; 0
     c48:	0e 94 47 09 	call	0x128e	; 0x128e <fputc>
     c4c:	2a 94       	dec	r2
     c4e:	f6 cf       	rjmp	.-20     	; 0xc3c <__stack+0x33d>
     c50:	f6 01       	movw	r30, r12
     c52:	86 81       	ldd	r24, Z+6	; 0x06
     c54:	97 81       	ldd	r25, Z+7	; 0x07
     c56:	02 c0       	rjmp	.+4      	; 0xc5c <__stack+0x35d>
     c58:	8f ef       	ldi	r24, 0xFF	; 255
     c5a:	9f ef       	ldi	r25, 0xFF	; 255
     c5c:	2b 96       	adiw	r28, 0x0b	; 11
     c5e:	e2 e1       	ldi	r30, 0x12	; 18
     c60:	0c 94 19 0a 	jmp	0x1432	; 0x1432 <__epilogue_restores__>

00000c64 <putval>:
     c64:	20 fd       	sbrc	r18, 0
     c66:	09 c0       	rjmp	.+18     	; 0xc7a <putval+0x16>
     c68:	fc 01       	movw	r30, r24
     c6a:	23 fd       	sbrc	r18, 3
     c6c:	05 c0       	rjmp	.+10     	; 0xc78 <putval+0x14>
     c6e:	22 ff       	sbrs	r18, 2
     c70:	02 c0       	rjmp	.+4      	; 0xc76 <putval+0x12>
     c72:	73 83       	std	Z+3, r23	; 0x03
     c74:	62 83       	std	Z+2, r22	; 0x02
     c76:	51 83       	std	Z+1, r21	; 0x01
     c78:	40 83       	st	Z, r20
     c7a:	08 95       	ret

00000c7c <mulacc>:
     c7c:	44 fd       	sbrc	r20, 4
     c7e:	17 c0       	rjmp	.+46     	; 0xcae <mulacc+0x32>
     c80:	46 fd       	sbrc	r20, 6
     c82:	17 c0       	rjmp	.+46     	; 0xcb2 <mulacc+0x36>
     c84:	ab 01       	movw	r20, r22
     c86:	bc 01       	movw	r22, r24
     c88:	da 01       	movw	r26, r20
     c8a:	fb 01       	movw	r30, r22
     c8c:	aa 0f       	add	r26, r26
     c8e:	bb 1f       	adc	r27, r27
     c90:	ee 1f       	adc	r30, r30
     c92:	ff 1f       	adc	r31, r31
     c94:	10 94       	com	r1
     c96:	d1 f7       	brne	.-12     	; 0xc8c <mulacc+0x10>
     c98:	4a 0f       	add	r20, r26
     c9a:	5b 1f       	adc	r21, r27
     c9c:	6e 1f       	adc	r22, r30
     c9e:	7f 1f       	adc	r23, r31
     ca0:	cb 01       	movw	r24, r22
     ca2:	ba 01       	movw	r22, r20
     ca4:	66 0f       	add	r22, r22
     ca6:	77 1f       	adc	r23, r23
     ca8:	88 1f       	adc	r24, r24
     caa:	99 1f       	adc	r25, r25
     cac:	09 c0       	rjmp	.+18     	; 0xcc0 <mulacc+0x44>
     cae:	33 e0       	ldi	r19, 0x03	; 3
     cb0:	01 c0       	rjmp	.+2      	; 0xcb4 <mulacc+0x38>
     cb2:	34 e0       	ldi	r19, 0x04	; 4
     cb4:	66 0f       	add	r22, r22
     cb6:	77 1f       	adc	r23, r23
     cb8:	88 1f       	adc	r24, r24
     cba:	99 1f       	adc	r25, r25
     cbc:	31 50       	subi	r19, 0x01	; 1
     cbe:	d1 f7       	brne	.-12     	; 0xcb4 <mulacc+0x38>
     cc0:	62 0f       	add	r22, r18
     cc2:	71 1d       	adc	r23, r1
     cc4:	81 1d       	adc	r24, r1
     cc6:	91 1d       	adc	r25, r1
     cc8:	08 95       	ret

00000cca <skip_spaces>:
     cca:	0f 93       	push	r16
     ccc:	1f 93       	push	r17
     cce:	cf 93       	push	r28
     cd0:	df 93       	push	r29
     cd2:	8c 01       	movw	r16, r24
     cd4:	c8 01       	movw	r24, r16
     cd6:	0e 94 09 09 	call	0x1212	; 0x1212 <fgetc>
     cda:	ec 01       	movw	r28, r24
     cdc:	97 fd       	sbrc	r25, 7
     cde:	08 c0       	rjmp	.+16     	; 0xcf0 <skip_spaces+0x26>
     ce0:	0e 94 df 08 	call	0x11be	; 0x11be <isspace>
     ce4:	89 2b       	or	r24, r25
     ce6:	b1 f7       	brne	.-20     	; 0xcd4 <skip_spaces+0xa>
     ce8:	b8 01       	movw	r22, r16
     cea:	ce 01       	movw	r24, r28
     cec:	0e 94 83 09 	call	0x1306	; 0x1306 <ungetc>
     cf0:	ce 01       	movw	r24, r28
     cf2:	df 91       	pop	r29
     cf4:	cf 91       	pop	r28
     cf6:	1f 91       	pop	r17
     cf8:	0f 91       	pop	r16
     cfa:	08 95       	ret

00000cfc <conv_int>:
     cfc:	8f 92       	push	r8
     cfe:	9f 92       	push	r9
     d00:	af 92       	push	r10
     d02:	bf 92       	push	r11
     d04:	ef 92       	push	r14
     d06:	ff 92       	push	r15
     d08:	0f 93       	push	r16
     d0a:	1f 93       	push	r17
     d0c:	cf 93       	push	r28
     d0e:	df 93       	push	r29
     d10:	8c 01       	movw	r16, r24
     d12:	d6 2f       	mov	r29, r22
     d14:	7a 01       	movw	r14, r20
     d16:	b2 2e       	mov	r11, r18
     d18:	0e 94 09 09 	call	0x1212	; 0x1212 <fgetc>
     d1c:	9c 01       	movw	r18, r24
     d1e:	33 27       	eor	r19, r19
     d20:	2b 32       	cpi	r18, 0x2B	; 43
     d22:	31 05       	cpc	r19, r1
     d24:	31 f0       	breq	.+12     	; 0xd32 <conv_int+0x36>
     d26:	2d 32       	cpi	r18, 0x2D	; 45
     d28:	31 05       	cpc	r19, r1
     d2a:	61 f4       	brne	.+24     	; 0xd44 <conv_int+0x48>
     d2c:	8b 2d       	mov	r24, r11
     d2e:	80 68       	ori	r24, 0x80	; 128
     d30:	b8 2e       	mov	r11, r24
     d32:	d1 50       	subi	r29, 0x01	; 1
     d34:	11 f4       	brne	.+4      	; 0xd3a <conv_int+0x3e>
     d36:	80 e0       	ldi	r24, 0x00	; 0
     d38:	68 c0       	rjmp	.+208    	; 0xe0a <conv_int+0x10e>
     d3a:	c8 01       	movw	r24, r16
     d3c:	0e 94 09 09 	call	0x1212	; 0x1212 <fgetc>
     d40:	97 fd       	sbrc	r25, 7
     d42:	f9 cf       	rjmp	.-14     	; 0xd36 <conv_int+0x3a>
     d44:	cb 2d       	mov	r28, r11
     d46:	cd 7f       	andi	r28, 0xFD	; 253
     d48:	2b 2d       	mov	r18, r11
     d4a:	20 73       	andi	r18, 0x30	; 48
     d4c:	09 f5       	brne	.+66     	; 0xd90 <conv_int+0x94>
     d4e:	80 33       	cpi	r24, 0x30	; 48
     d50:	f9 f4       	brne	.+62     	; 0xd90 <conv_int+0x94>
     d52:	aa 24       	eor	r10, r10
     d54:	aa 94       	dec	r10
     d56:	ad 0e       	add	r10, r29
     d58:	09 f4       	brne	.+2      	; 0xd5c <conv_int+0x60>
     d5a:	43 c0       	rjmp	.+134    	; 0xde2 <conv_int+0xe6>
     d5c:	c8 01       	movw	r24, r16
     d5e:	0e 94 09 09 	call	0x1212	; 0x1212 <fgetc>
     d62:	97 fd       	sbrc	r25, 7
     d64:	3e c0       	rjmp	.+124    	; 0xde2 <conv_int+0xe6>
     d66:	9c 01       	movw	r18, r24
     d68:	2f 7d       	andi	r18, 0xDF	; 223
     d6a:	33 27       	eor	r19, r19
     d6c:	28 35       	cpi	r18, 0x58	; 88
     d6e:	31 05       	cpc	r19, r1
     d70:	49 f4       	brne	.+18     	; 0xd84 <conv_int+0x88>
     d72:	c2 64       	ori	r28, 0x42	; 66
     d74:	d2 50       	subi	r29, 0x02	; 2
     d76:	a9 f1       	breq	.+106    	; 0xde2 <conv_int+0xe6>
     d78:	c8 01       	movw	r24, r16
     d7a:	0e 94 09 09 	call	0x1212	; 0x1212 <fgetc>
     d7e:	97 ff       	sbrs	r25, 7
     d80:	07 c0       	rjmp	.+14     	; 0xd90 <conv_int+0x94>
     d82:	2f c0       	rjmp	.+94     	; 0xde2 <conv_int+0xe6>
     d84:	b6 fe       	sbrs	r11, 6
     d86:	02 c0       	rjmp	.+4      	; 0xd8c <conv_int+0x90>
     d88:	c2 60       	ori	r28, 0x02	; 2
     d8a:	01 c0       	rjmp	.+2      	; 0xd8e <conv_int+0x92>
     d8c:	c2 61       	ori	r28, 0x12	; 18
     d8e:	da 2d       	mov	r29, r10
     d90:	81 2c       	mov	r8, r1
     d92:	91 2c       	mov	r9, r1
     d94:	54 01       	movw	r10, r8
     d96:	20 ed       	ldi	r18, 0xD0	; 208
     d98:	28 0f       	add	r18, r24
     d9a:	28 30       	cpi	r18, 0x08	; 8
     d9c:	80 f0       	brcs	.+32     	; 0xdbe <conv_int+0xc2>
     d9e:	c4 ff       	sbrs	r28, 4
     da0:	04 c0       	rjmp	.+8      	; 0xdaa <conv_int+0xae>
     da2:	b8 01       	movw	r22, r16
     da4:	0e 94 83 09 	call	0x1306	; 0x1306 <ungetc>
     da8:	19 c0       	rjmp	.+50     	; 0xddc <conv_int+0xe0>
     daa:	2a 30       	cpi	r18, 0x0A	; 10
     dac:	40 f0       	brcs	.+16     	; 0xdbe <conv_int+0xc2>
     dae:	c6 ff       	sbrs	r28, 6
     db0:	f8 cf       	rjmp	.-16     	; 0xda2 <conv_int+0xa6>
     db2:	2f 7d       	andi	r18, 0xDF	; 223
     db4:	3f ee       	ldi	r19, 0xEF	; 239
     db6:	32 0f       	add	r19, r18
     db8:	36 30       	cpi	r19, 0x06	; 6
     dba:	98 f7       	brcc	.-26     	; 0xda2 <conv_int+0xa6>
     dbc:	27 50       	subi	r18, 0x07	; 7
     dbe:	4c 2f       	mov	r20, r28
     dc0:	c5 01       	movw	r24, r10
     dc2:	b4 01       	movw	r22, r8
     dc4:	0e 94 3e 06 	call	0xc7c	; 0xc7c <mulacc>
     dc8:	4b 01       	movw	r8, r22
     dca:	5c 01       	movw	r10, r24
     dcc:	c2 60       	ori	r28, 0x02	; 2
     dce:	d1 50       	subi	r29, 0x01	; 1
     dd0:	59 f0       	breq	.+22     	; 0xde8 <conv_int+0xec>
     dd2:	c8 01       	movw	r24, r16
     dd4:	0e 94 09 09 	call	0x1212	; 0x1212 <fgetc>
     dd8:	97 ff       	sbrs	r25, 7
     dda:	dd cf       	rjmp	.-70     	; 0xd96 <conv_int+0x9a>
     ddc:	c1 fd       	sbrc	r28, 1
     dde:	04 c0       	rjmp	.+8      	; 0xde8 <conv_int+0xec>
     de0:	aa cf       	rjmp	.-172    	; 0xd36 <conv_int+0x3a>
     de2:	81 2c       	mov	r8, r1
     de4:	91 2c       	mov	r9, r1
     de6:	54 01       	movw	r10, r8
     de8:	c7 ff       	sbrs	r28, 7
     dea:	08 c0       	rjmp	.+16     	; 0xdfc <conv_int+0x100>
     dec:	b0 94       	com	r11
     dee:	a0 94       	com	r10
     df0:	90 94       	com	r9
     df2:	80 94       	com	r8
     df4:	81 1c       	adc	r8, r1
     df6:	91 1c       	adc	r9, r1
     df8:	a1 1c       	adc	r10, r1
     dfa:	b1 1c       	adc	r11, r1
     dfc:	2c 2f       	mov	r18, r28
     dfe:	b5 01       	movw	r22, r10
     e00:	a4 01       	movw	r20, r8
     e02:	c7 01       	movw	r24, r14
     e04:	0e 94 32 06 	call	0xc64	; 0xc64 <putval>
     e08:	81 e0       	ldi	r24, 0x01	; 1
     e0a:	df 91       	pop	r29
     e0c:	cf 91       	pop	r28
     e0e:	1f 91       	pop	r17
     e10:	0f 91       	pop	r16
     e12:	ff 90       	pop	r15
     e14:	ef 90       	pop	r14
     e16:	bf 90       	pop	r11
     e18:	af 90       	pop	r10
     e1a:	9f 90       	pop	r9
     e1c:	8f 90       	pop	r8
     e1e:	08 95       	ret

00000e20 <conv_brk>:
     e20:	a0 e2       	ldi	r26, 0x20	; 32
     e22:	b0 e0       	ldi	r27, 0x00	; 0
     e24:	e6 e1       	ldi	r30, 0x16	; 22
     e26:	f7 e0       	ldi	r31, 0x07	; 7
     e28:	0c 94 00 0a 	jmp	0x1400	; 0x1400 <__prologue_saves__+0x6>
     e2c:	5c 01       	movw	r10, r24
     e2e:	96 2e       	mov	r9, r22
     e30:	7a 01       	movw	r14, r20
     e32:	f9 01       	movw	r30, r18
     e34:	8e 01       	movw	r16, r28
     e36:	0f 5f       	subi	r16, 0xFF	; 255
     e38:	1f 4f       	sbci	r17, 0xFF	; 255
     e3a:	68 01       	movw	r12, r16
     e3c:	80 e2       	ldi	r24, 0x20	; 32
     e3e:	d8 01       	movw	r26, r16
     e40:	1d 92       	st	X+, r1
     e42:	8a 95       	dec	r24
     e44:	e9 f7       	brne	.-6      	; 0xe40 <conv_brk+0x20>
     e46:	d5 01       	movw	r26, r10
     e48:	13 96       	adiw	r26, 0x03	; 3
     e4a:	8c 90       	ld	r8, X
     e4c:	80 e0       	ldi	r24, 0x00	; 0
     e4e:	90 e0       	ldi	r25, 0x00	; 0
     e50:	61 2c       	mov	r6, r1
     e52:	71 2c       	mov	r7, r1
     e54:	30 e0       	ldi	r19, 0x00	; 0
     e56:	61 e0       	ldi	r22, 0x01	; 1
     e58:	70 e0       	ldi	r23, 0x00	; 0
     e5a:	83 fc       	sbrc	r8, 3
     e5c:	25 91       	lpm	r18, Z+
     e5e:	83 fe       	sbrs	r8, 3
     e60:	21 91       	ld	r18, Z+
     e62:	8f 01       	movw	r16, r30
     e64:	52 2e       	mov	r5, r18
     e66:	21 11       	cpse	r18, r1
     e68:	03 c0       	rjmp	.+6      	; 0xe70 <conv_brk+0x50>
     e6a:	80 e0       	ldi	r24, 0x00	; 0
     e6c:	90 e0       	ldi	r25, 0x00	; 0
     e6e:	92 c0       	rjmp	.+292    	; 0xf94 <conv_brk+0x174>
     e70:	2e 35       	cpi	r18, 0x5E	; 94
     e72:	11 f4       	brne	.+4      	; 0xe78 <conv_brk+0x58>
     e74:	00 97       	sbiw	r24, 0x00	; 0
     e76:	51 f1       	breq	.+84     	; 0xecc <conv_brk+0xac>
     e78:	43 2f       	mov	r20, r19
     e7a:	50 e0       	ldi	r21, 0x00	; 0
     e7c:	48 17       	cp	r20, r24
     e7e:	59 07       	cpc	r21, r25
     e80:	3c f4       	brge	.+14     	; 0xe90 <conv_brk+0x70>
     e82:	2d 35       	cpi	r18, 0x5D	; 93
     e84:	59 f1       	breq	.+86     	; 0xedc <conv_brk+0xbc>
     e86:	2d 32       	cpi	r18, 0x2D	; 45
     e88:	19 f4       	brne	.+6      	; 0xe90 <conv_brk+0x70>
     e8a:	77 20       	and	r7, r7
     e8c:	09 f1       	breq	.+66     	; 0xed0 <conv_brk+0xb0>
     e8e:	03 c0       	rjmp	.+6      	; 0xe96 <conv_brk+0x76>
     e90:	77 20       	and	r7, r7
     e92:	09 f4       	brne	.+2      	; 0xe96 <conv_brk+0x76>
     e94:	6a c0       	rjmp	.+212    	; 0xf6a <conv_brk+0x14a>
     e96:	45 2d       	mov	r20, r5
     e98:	46 95       	lsr	r20
     e9a:	46 95       	lsr	r20
     e9c:	46 95       	lsr	r20
     e9e:	d6 01       	movw	r26, r12
     ea0:	a4 0f       	add	r26, r20
     ea2:	b1 1d       	adc	r27, r1
     ea4:	45 2d       	mov	r20, r5
     ea6:	47 70       	andi	r20, 0x07	; 7
     ea8:	8b 01       	movw	r16, r22
     eaa:	02 c0       	rjmp	.+4      	; 0xeb0 <conv_brk+0x90>
     eac:	00 0f       	add	r16, r16
     eae:	11 1f       	adc	r17, r17
     eb0:	4a 95       	dec	r20
     eb2:	e2 f7       	brpl	.-8      	; 0xeac <conv_brk+0x8c>
     eb4:	a8 01       	movw	r20, r16
     eb6:	5c 91       	ld	r21, X
     eb8:	45 2b       	or	r20, r21
     eba:	4c 93       	st	X, r20
     ebc:	65 14       	cp	r6, r5
     ebe:	59 f0       	breq	.+22     	; 0xed6 <conv_brk+0xb6>
     ec0:	56 14       	cp	r5, r6
     ec2:	10 f4       	brcc	.+4      	; 0xec8 <conv_brk+0xa8>
     ec4:	53 94       	inc	r5
     ec6:	e7 cf       	rjmp	.-50     	; 0xe96 <conv_brk+0x76>
     ec8:	5a 94       	dec	r5
     eca:	e5 cf       	rjmp	.-54     	; 0xe96 <conv_brk+0x76>
     ecc:	31 e0       	ldi	r19, 0x01	; 1
     ece:	04 c0       	rjmp	.+8      	; 0xed8 <conv_brk+0xb8>
     ed0:	77 24       	eor	r7, r7
     ed2:	73 94       	inc	r7
     ed4:	01 c0       	rjmp	.+2      	; 0xed8 <conv_brk+0xb8>
     ed6:	71 2c       	mov	r7, r1
     ed8:	01 96       	adiw	r24, 0x01	; 1
     eda:	bf cf       	rjmp	.-130    	; 0xe5a <conv_brk+0x3a>
     edc:	77 20       	and	r7, r7
     ede:	19 f0       	breq	.+6      	; 0xee6 <conv_brk+0xc6>
     ee0:	8e 81       	ldd	r24, Y+6	; 0x06
     ee2:	80 62       	ori	r24, 0x20	; 32
     ee4:	8e 83       	std	Y+6, r24	; 0x06
     ee6:	31 11       	cpse	r19, r1
     ee8:	03 c0       	rjmp	.+6      	; 0xef0 <conv_brk+0xd0>
     eea:	88 24       	eor	r8, r8
     eec:	83 94       	inc	r8
     eee:	17 c0       	rjmp	.+46     	; 0xf1e <conv_brk+0xfe>
     ef0:	f6 01       	movw	r30, r12
     ef2:	9e 01       	movw	r18, r28
     ef4:	2f 5d       	subi	r18, 0xDF	; 223
     ef6:	3f 4f       	sbci	r19, 0xFF	; 255
     ef8:	80 81       	ld	r24, Z
     efa:	80 95       	com	r24
     efc:	81 93       	st	Z+, r24
     efe:	2e 17       	cp	r18, r30
     f00:	3f 07       	cpc	r19, r31
     f02:	d1 f7       	brne	.-12     	; 0xef8 <conv_brk+0xd8>
     f04:	f2 cf       	rjmp	.-28     	; 0xeea <conv_brk+0xca>
     f06:	e1 14       	cp	r14, r1
     f08:	f1 04       	cpc	r15, r1
     f0a:	29 f0       	breq	.+10     	; 0xf16 <conv_brk+0xf6>
     f0c:	d7 01       	movw	r26, r14
     f0e:	8c 93       	st	X, r24
     f10:	f7 01       	movw	r30, r14
     f12:	31 96       	adiw	r30, 0x01	; 1
     f14:	7f 01       	movw	r14, r30
     f16:	9a 94       	dec	r9
     f18:	81 2c       	mov	r8, r1
     f1a:	99 20       	and	r9, r9
     f1c:	f9 f0       	breq	.+62     	; 0xf5c <conv_brk+0x13c>
     f1e:	c5 01       	movw	r24, r10
     f20:	0e 94 09 09 	call	0x1212	; 0x1212 <fgetc>
     f24:	97 fd       	sbrc	r25, 7
     f26:	18 c0       	rjmp	.+48     	; 0xf58 <conv_brk+0x138>
     f28:	fc 01       	movw	r30, r24
     f2a:	ff 27       	eor	r31, r31
     f2c:	23 e0       	ldi	r18, 0x03	; 3
     f2e:	f5 95       	asr	r31
     f30:	e7 95       	ror	r30
     f32:	2a 95       	dec	r18
     f34:	e1 f7       	brne	.-8      	; 0xf2e <conv_brk+0x10e>
     f36:	ec 0d       	add	r30, r12
     f38:	fd 1d       	adc	r31, r13
     f3a:	20 81       	ld	r18, Z
     f3c:	30 e0       	ldi	r19, 0x00	; 0
     f3e:	ac 01       	movw	r20, r24
     f40:	47 70       	andi	r20, 0x07	; 7
     f42:	55 27       	eor	r21, r21
     f44:	02 c0       	rjmp	.+4      	; 0xf4a <conv_brk+0x12a>
     f46:	35 95       	asr	r19
     f48:	27 95       	ror	r18
     f4a:	4a 95       	dec	r20
     f4c:	e2 f7       	brpl	.-8      	; 0xf46 <conv_brk+0x126>
     f4e:	20 fd       	sbrc	r18, 0
     f50:	da cf       	rjmp	.-76     	; 0xf06 <conv_brk+0xe6>
     f52:	b5 01       	movw	r22, r10
     f54:	0e 94 83 09 	call	0x1306	; 0x1306 <ungetc>
     f58:	81 10       	cpse	r8, r1
     f5a:	87 cf       	rjmp	.-242    	; 0xe6a <conv_brk+0x4a>
     f5c:	e1 14       	cp	r14, r1
     f5e:	f1 04       	cpc	r15, r1
     f60:	11 f0       	breq	.+4      	; 0xf66 <conv_brk+0x146>
     f62:	d7 01       	movw	r26, r14
     f64:	1c 92       	st	X, r1
     f66:	c8 01       	movw	r24, r16
     f68:	15 c0       	rjmp	.+42     	; 0xf94 <conv_brk+0x174>
     f6a:	42 2f       	mov	r20, r18
     f6c:	46 95       	lsr	r20
     f6e:	46 95       	lsr	r20
     f70:	46 95       	lsr	r20
     f72:	d6 01       	movw	r26, r12
     f74:	a4 0f       	add	r26, r20
     f76:	b1 1d       	adc	r27, r1
     f78:	42 2f       	mov	r20, r18
     f7a:	47 70       	andi	r20, 0x07	; 7
     f7c:	8b 01       	movw	r16, r22
     f7e:	02 c0       	rjmp	.+4      	; 0xf84 <conv_brk+0x164>
     f80:	00 0f       	add	r16, r16
     f82:	11 1f       	adc	r17, r17
     f84:	4a 95       	dec	r20
     f86:	e2 f7       	brpl	.-8      	; 0xf80 <conv_brk+0x160>
     f88:	a8 01       	movw	r20, r16
     f8a:	5c 91       	ld	r21, X
     f8c:	45 2b       	or	r20, r21
     f8e:	4c 93       	st	X, r20
     f90:	62 2e       	mov	r6, r18
     f92:	a2 cf       	rjmp	.-188    	; 0xed8 <conv_brk+0xb8>
     f94:	a0 96       	adiw	r28, 0x20	; 32
     f96:	ef e0       	ldi	r30, 0x0F	; 15
     f98:	0c 94 1c 0a 	jmp	0x1438	; 0x1438 <__epilogue_restores__+0x6>

00000f9c <vfscanf>:
     f9c:	a0 e0       	ldi	r26, 0x00	; 0
     f9e:	b0 e0       	ldi	r27, 0x00	; 0
     fa0:	e4 ed       	ldi	r30, 0xD4	; 212
     fa2:	f7 e0       	ldi	r31, 0x07	; 7
     fa4:	0c 94 00 0a 	jmp	0x1400	; 0x1400 <__prologue_saves__+0x6>
     fa8:	6c 01       	movw	r12, r24
     faa:	eb 01       	movw	r28, r22
     fac:	5a 01       	movw	r10, r20
     fae:	fc 01       	movw	r30, r24
     fb0:	17 82       	std	Z+7, r1	; 0x07
     fb2:	16 82       	std	Z+6, r1	; 0x06
     fb4:	51 2c       	mov	r5, r1
     fb6:	f6 01       	movw	r30, r12
     fb8:	e3 80       	ldd	r14, Z+3	; 0x03
     fba:	fe 01       	movw	r30, r28
     fbc:	e3 fc       	sbrc	r14, 3
     fbe:	85 91       	lpm	r24, Z+
     fc0:	e3 fe       	sbrs	r14, 3
     fc2:	81 91       	ld	r24, Z+
     fc4:	18 2f       	mov	r17, r24
     fc6:	ef 01       	movw	r28, r30
     fc8:	88 23       	and	r24, r24
     fca:	09 f4       	brne	.+2      	; 0xfce <vfscanf+0x32>
     fcc:	ee c0       	rjmp	.+476    	; 0x11aa <vfscanf+0x20e>
     fce:	90 e0       	ldi	r25, 0x00	; 0
     fd0:	0e 94 df 08 	call	0x11be	; 0x11be <isspace>
     fd4:	89 2b       	or	r24, r25
     fd6:	21 f0       	breq	.+8      	; 0xfe0 <vfscanf+0x44>
     fd8:	c6 01       	movw	r24, r12
     fda:	0e 94 65 06 	call	0xcca	; 0xcca <skip_spaces>
     fde:	eb cf       	rjmp	.-42     	; 0xfb6 <vfscanf+0x1a>
     fe0:	15 32       	cpi	r17, 0x25	; 37
     fe2:	41 f4       	brne	.+16     	; 0xff4 <vfscanf+0x58>
     fe4:	fe 01       	movw	r30, r28
     fe6:	e3 fc       	sbrc	r14, 3
     fe8:	15 91       	lpm	r17, Z+
     fea:	e3 fe       	sbrs	r14, 3
     fec:	11 91       	ld	r17, Z+
     fee:	ef 01       	movw	r28, r30
     ff0:	15 32       	cpi	r17, 0x25	; 37
     ff2:	81 f4       	brne	.+32     	; 0x1014 <vfscanf+0x78>
     ff4:	c6 01       	movw	r24, r12
     ff6:	0e 94 09 09 	call	0x1212	; 0x1212 <fgetc>
     ffa:	97 fd       	sbrc	r25, 7
     ffc:	d4 c0       	rjmp	.+424    	; 0x11a6 <vfscanf+0x20a>
     ffe:	41 2f       	mov	r20, r17
    1000:	50 e0       	ldi	r21, 0x00	; 0
    1002:	9c 01       	movw	r18, r24
    1004:	33 27       	eor	r19, r19
    1006:	24 17       	cp	r18, r20
    1008:	35 07       	cpc	r19, r21
    100a:	a9 f2       	breq	.-86     	; 0xfb6 <vfscanf+0x1a>
    100c:	b6 01       	movw	r22, r12
    100e:	0e 94 83 09 	call	0x1306	; 0x1306 <ungetc>
    1012:	cb c0       	rjmp	.+406    	; 0x11aa <vfscanf+0x20e>
    1014:	1a 32       	cpi	r17, 0x2A	; 42
    1016:	39 f4       	brne	.+14     	; 0x1026 <vfscanf+0x8a>
    1018:	e3 fc       	sbrc	r14, 3
    101a:	15 91       	lpm	r17, Z+
    101c:	e3 fe       	sbrs	r14, 3
    101e:	11 91       	ld	r17, Z+
    1020:	ef 01       	movw	r28, r30
    1022:	01 e0       	ldi	r16, 0x01	; 1
    1024:	01 c0       	rjmp	.+2      	; 0x1028 <vfscanf+0x8c>
    1026:	00 e0       	ldi	r16, 0x00	; 0
    1028:	f1 2c       	mov	r15, r1
    102a:	20 ed       	ldi	r18, 0xD0	; 208
    102c:	21 0f       	add	r18, r17
    102e:	2a 30       	cpi	r18, 0x0A	; 10
    1030:	80 f4       	brcc	.+32     	; 0x1052 <vfscanf+0xb6>
    1032:	02 60       	ori	r16, 0x02	; 2
    1034:	6f 2d       	mov	r22, r15
    1036:	70 e0       	ldi	r23, 0x00	; 0
    1038:	80 e0       	ldi	r24, 0x00	; 0
    103a:	90 e0       	ldi	r25, 0x00	; 0
    103c:	40 e2       	ldi	r20, 0x20	; 32
    103e:	0e 94 3e 06 	call	0xc7c	; 0xc7c <mulacc>
    1042:	f6 2e       	mov	r15, r22
    1044:	fe 01       	movw	r30, r28
    1046:	e3 fc       	sbrc	r14, 3
    1048:	15 91       	lpm	r17, Z+
    104a:	e3 fe       	sbrs	r14, 3
    104c:	11 91       	ld	r17, Z+
    104e:	ef 01       	movw	r28, r30
    1050:	ec cf       	rjmp	.-40     	; 0x102a <vfscanf+0x8e>
    1052:	01 ff       	sbrs	r16, 1
    1054:	03 c0       	rjmp	.+6      	; 0x105c <vfscanf+0xc0>
    1056:	f1 10       	cpse	r15, r1
    1058:	03 c0       	rjmp	.+6      	; 0x1060 <vfscanf+0xc4>
    105a:	a7 c0       	rjmp	.+334    	; 0x11aa <vfscanf+0x20e>
    105c:	ff 24       	eor	r15, r15
    105e:	fa 94       	dec	r15
    1060:	18 36       	cpi	r17, 0x68	; 104
    1062:	19 f0       	breq	.+6      	; 0x106a <vfscanf+0xce>
    1064:	1c 36       	cpi	r17, 0x6C	; 108
    1066:	51 f0       	breq	.+20     	; 0x107c <vfscanf+0xe0>
    1068:	10 c0       	rjmp	.+32     	; 0x108a <vfscanf+0xee>
    106a:	fe 01       	movw	r30, r28
    106c:	e3 fc       	sbrc	r14, 3
    106e:	15 91       	lpm	r17, Z+
    1070:	e3 fe       	sbrs	r14, 3
    1072:	11 91       	ld	r17, Z+
    1074:	ef 01       	movw	r28, r30
    1076:	18 36       	cpi	r17, 0x68	; 104
    1078:	41 f4       	brne	.+16     	; 0x108a <vfscanf+0xee>
    107a:	08 60       	ori	r16, 0x08	; 8
    107c:	04 60       	ori	r16, 0x04	; 4
    107e:	fe 01       	movw	r30, r28
    1080:	e3 fc       	sbrc	r14, 3
    1082:	15 91       	lpm	r17, Z+
    1084:	e3 fe       	sbrs	r14, 3
    1086:	11 91       	ld	r17, Z+
    1088:	ef 01       	movw	r28, r30
    108a:	11 23       	and	r17, r17
    108c:	09 f4       	brne	.+2      	; 0x1090 <vfscanf+0xf4>
    108e:	8d c0       	rjmp	.+282    	; 0x11aa <vfscanf+0x20e>
    1090:	61 2f       	mov	r22, r17
    1092:	70 e0       	ldi	r23, 0x00	; 0
    1094:	84 eb       	ldi	r24, 0xB4	; 180
    1096:	90 e0       	ldi	r25, 0x00	; 0
    1098:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <strchr_P>
    109c:	89 2b       	or	r24, r25
    109e:	09 f4       	brne	.+2      	; 0x10a2 <vfscanf+0x106>
    10a0:	84 c0       	rjmp	.+264    	; 0x11aa <vfscanf+0x20e>
    10a2:	00 fd       	sbrc	r16, 0
    10a4:	07 c0       	rjmp	.+14     	; 0x10b4 <vfscanf+0x118>
    10a6:	f5 01       	movw	r30, r10
    10a8:	80 80       	ld	r8, Z
    10aa:	91 80       	ldd	r9, Z+1	; 0x01
    10ac:	c5 01       	movw	r24, r10
    10ae:	02 96       	adiw	r24, 0x02	; 2
    10b0:	5c 01       	movw	r10, r24
    10b2:	02 c0       	rjmp	.+4      	; 0x10b8 <vfscanf+0x11c>
    10b4:	81 2c       	mov	r8, r1
    10b6:	91 2c       	mov	r9, r1
    10b8:	1e 36       	cpi	r17, 0x6E	; 110
    10ba:	51 f4       	brne	.+20     	; 0x10d0 <vfscanf+0x134>
    10bc:	f6 01       	movw	r30, r12
    10be:	46 81       	ldd	r20, Z+6	; 0x06
    10c0:	57 81       	ldd	r21, Z+7	; 0x07
    10c2:	60 e0       	ldi	r22, 0x00	; 0
    10c4:	70 e0       	ldi	r23, 0x00	; 0
    10c6:	20 2f       	mov	r18, r16
    10c8:	c4 01       	movw	r24, r8
    10ca:	0e 94 32 06 	call	0xc64	; 0xc64 <putval>
    10ce:	73 cf       	rjmp	.-282    	; 0xfb6 <vfscanf+0x1a>
    10d0:	13 36       	cpi	r17, 0x63	; 99
    10d2:	a9 f4       	brne	.+42     	; 0x10fe <vfscanf+0x162>
    10d4:	01 fd       	sbrc	r16, 1
    10d6:	02 c0       	rjmp	.+4      	; 0x10dc <vfscanf+0x140>
    10d8:	ff 24       	eor	r15, r15
    10da:	f3 94       	inc	r15
    10dc:	c6 01       	movw	r24, r12
    10de:	0e 94 09 09 	call	0x1212	; 0x1212 <fgetc>
    10e2:	97 fd       	sbrc	r25, 7
    10e4:	60 c0       	rjmp	.+192    	; 0x11a6 <vfscanf+0x20a>
    10e6:	81 14       	cp	r8, r1
    10e8:	91 04       	cpc	r9, r1
    10ea:	29 f0       	breq	.+10     	; 0x10f6 <vfscanf+0x15a>
    10ec:	f4 01       	movw	r30, r8
    10ee:	80 83       	st	Z, r24
    10f0:	c4 01       	movw	r24, r8
    10f2:	01 96       	adiw	r24, 0x01	; 1
    10f4:	4c 01       	movw	r8, r24
    10f6:	fa 94       	dec	r15
    10f8:	f1 10       	cpse	r15, r1
    10fa:	f0 cf       	rjmp	.-32     	; 0x10dc <vfscanf+0x140>
    10fc:	50 c0       	rjmp	.+160    	; 0x119e <vfscanf+0x202>
    10fe:	1b 35       	cpi	r17, 0x5B	; 91
    1100:	59 f4       	brne	.+22     	; 0x1118 <vfscanf+0x17c>
    1102:	9e 01       	movw	r18, r28
    1104:	a4 01       	movw	r20, r8
    1106:	6f 2d       	mov	r22, r15
    1108:	c6 01       	movw	r24, r12
    110a:	0e 94 10 07 	call	0xe20	; 0xe20 <conv_brk>
    110e:	ec 01       	movw	r28, r24
    1110:	89 2b       	or	r24, r25
    1112:	09 f0       	breq	.+2      	; 0x1116 <vfscanf+0x17a>
    1114:	44 c0       	rjmp	.+136    	; 0x119e <vfscanf+0x202>
    1116:	3e c0       	rjmp	.+124    	; 0x1194 <vfscanf+0x1f8>
    1118:	c6 01       	movw	r24, r12
    111a:	0e 94 65 06 	call	0xcca	; 0xcca <skip_spaces>
    111e:	97 fd       	sbrc	r25, 7
    1120:	42 c0       	rjmp	.+132    	; 0x11a6 <vfscanf+0x20a>
    1122:	1f 36       	cpi	r17, 0x6F	; 111
    1124:	61 f1       	breq	.+88     	; 0x117e <vfscanf+0x1e2>
    1126:	28 f4       	brcc	.+10     	; 0x1132 <vfscanf+0x196>
    1128:	14 36       	cpi	r17, 0x64	; 100
    112a:	39 f1       	breq	.+78     	; 0x117a <vfscanf+0x1de>
    112c:	19 36       	cpi	r17, 0x69	; 105
    112e:	51 f1       	breq	.+84     	; 0x1184 <vfscanf+0x1e8>
    1130:	28 c0       	rjmp	.+80     	; 0x1182 <vfscanf+0x1e6>
    1132:	13 37       	cpi	r17, 0x73	; 115
    1134:	71 f0       	breq	.+28     	; 0x1152 <vfscanf+0x1b6>
    1136:	15 37       	cpi	r17, 0x75	; 117
    1138:	01 f1       	breq	.+64     	; 0x117a <vfscanf+0x1de>
    113a:	23 c0       	rjmp	.+70     	; 0x1182 <vfscanf+0x1e6>
    113c:	81 14       	cp	r8, r1
    113e:	91 04       	cpc	r9, r1
    1140:	29 f0       	breq	.+10     	; 0x114c <vfscanf+0x1b0>
    1142:	f4 01       	movw	r30, r8
    1144:	60 82       	st	Z, r6
    1146:	c4 01       	movw	r24, r8
    1148:	01 96       	adiw	r24, 0x01	; 1
    114a:	4c 01       	movw	r8, r24
    114c:	fa 94       	dec	r15
    114e:	ff 20       	and	r15, r15
    1150:	71 f0       	breq	.+28     	; 0x116e <vfscanf+0x1d2>
    1152:	c6 01       	movw	r24, r12
    1154:	0e 94 09 09 	call	0x1212	; 0x1212 <fgetc>
    1158:	3c 01       	movw	r6, r24
    115a:	97 fd       	sbrc	r25, 7
    115c:	08 c0       	rjmp	.+16     	; 0x116e <vfscanf+0x1d2>
    115e:	0e 94 df 08 	call	0x11be	; 0x11be <isspace>
    1162:	89 2b       	or	r24, r25
    1164:	59 f3       	breq	.-42     	; 0x113c <vfscanf+0x1a0>
    1166:	b6 01       	movw	r22, r12
    1168:	c3 01       	movw	r24, r6
    116a:	0e 94 83 09 	call	0x1306	; 0x1306 <ungetc>
    116e:	81 14       	cp	r8, r1
    1170:	91 04       	cpc	r9, r1
    1172:	a9 f0       	breq	.+42     	; 0x119e <vfscanf+0x202>
    1174:	f4 01       	movw	r30, r8
    1176:	10 82       	st	Z, r1
    1178:	12 c0       	rjmp	.+36     	; 0x119e <vfscanf+0x202>
    117a:	00 62       	ori	r16, 0x20	; 32
    117c:	03 c0       	rjmp	.+6      	; 0x1184 <vfscanf+0x1e8>
    117e:	00 61       	ori	r16, 0x10	; 16
    1180:	01 c0       	rjmp	.+2      	; 0x1184 <vfscanf+0x1e8>
    1182:	00 64       	ori	r16, 0x40	; 64
    1184:	20 2f       	mov	r18, r16
    1186:	a4 01       	movw	r20, r8
    1188:	6f 2d       	mov	r22, r15
    118a:	c6 01       	movw	r24, r12
    118c:	0e 94 7e 06 	call	0xcfc	; 0xcfc <conv_int>
    1190:	81 11       	cpse	r24, r1
    1192:	05 c0       	rjmp	.+10     	; 0x119e <vfscanf+0x202>
    1194:	f6 01       	movw	r30, r12
    1196:	83 81       	ldd	r24, Z+3	; 0x03
    1198:	80 73       	andi	r24, 0x30	; 48
    119a:	29 f4       	brne	.+10     	; 0x11a6 <vfscanf+0x20a>
    119c:	06 c0       	rjmp	.+12     	; 0x11aa <vfscanf+0x20e>
    119e:	00 fd       	sbrc	r16, 0
    11a0:	0a cf       	rjmp	.-492    	; 0xfb6 <vfscanf+0x1a>
    11a2:	53 94       	inc	r5
    11a4:	08 cf       	rjmp	.-496    	; 0xfb6 <vfscanf+0x1a>
    11a6:	55 20       	and	r5, r5
    11a8:	19 f0       	breq	.+6      	; 0x11b0 <vfscanf+0x214>
    11aa:	85 2d       	mov	r24, r5
    11ac:	90 e0       	ldi	r25, 0x00	; 0
    11ae:	02 c0       	rjmp	.+4      	; 0x11b4 <vfscanf+0x218>
    11b0:	8f ef       	ldi	r24, 0xFF	; 255
    11b2:	9f ef       	ldi	r25, 0xFF	; 255
    11b4:	cd b7       	in	r28, 0x3d	; 61
    11b6:	de b7       	in	r29, 0x3e	; 62
    11b8:	ef e0       	ldi	r30, 0x0F	; 15
    11ba:	0c 94 1c 0a 	jmp	0x1438	; 0x1438 <__epilogue_restores__+0x6>

000011be <isspace>:
    11be:	91 11       	cpse	r25, r1
    11c0:	0c 94 fa 09 	jmp	0x13f4	; 0x13f4 <__ctype_isfalse>
    11c4:	80 32       	cpi	r24, 0x20	; 32
    11c6:	19 f0       	breq	.+6      	; 0x11ce <isspace+0x10>
    11c8:	89 50       	subi	r24, 0x09	; 9
    11ca:	85 50       	subi	r24, 0x05	; 5
    11cc:	c8 f7       	brcc	.-14     	; 0x11c0 <isspace+0x2>
    11ce:	08 95       	ret

000011d0 <strchr_P>:
    11d0:	fc 01       	movw	r30, r24
    11d2:	05 90       	lpm	r0, Z+
    11d4:	06 16       	cp	r0, r22
    11d6:	21 f0       	breq	.+8      	; 0x11e0 <strchr_P+0x10>
    11d8:	00 20       	and	r0, r0
    11da:	d9 f7       	brne	.-10     	; 0x11d2 <strchr_P+0x2>
    11dc:	c0 01       	movw	r24, r0
    11de:	08 95       	ret
    11e0:	31 97       	sbiw	r30, 0x01	; 1
    11e2:	cf 01       	movw	r24, r30
    11e4:	08 95       	ret

000011e6 <strnlen_P>:
    11e6:	fc 01       	movw	r30, r24
    11e8:	05 90       	lpm	r0, Z+
    11ea:	61 50       	subi	r22, 0x01	; 1
    11ec:	70 40       	sbci	r23, 0x00	; 0
    11ee:	01 10       	cpse	r0, r1
    11f0:	d8 f7       	brcc	.-10     	; 0x11e8 <strnlen_P+0x2>
    11f2:	80 95       	com	r24
    11f4:	90 95       	com	r25
    11f6:	8e 0f       	add	r24, r30
    11f8:	9f 1f       	adc	r25, r31
    11fa:	08 95       	ret

000011fc <strnlen>:
    11fc:	fc 01       	movw	r30, r24
    11fe:	61 50       	subi	r22, 0x01	; 1
    1200:	70 40       	sbci	r23, 0x00	; 0
    1202:	01 90       	ld	r0, Z+
    1204:	01 10       	cpse	r0, r1
    1206:	d8 f7       	brcc	.-10     	; 0x11fe <strnlen+0x2>
    1208:	80 95       	com	r24
    120a:	90 95       	com	r25
    120c:	8e 0f       	add	r24, r30
    120e:	9f 1f       	adc	r25, r31
    1210:	08 95       	ret

00001212 <fgetc>:
    1212:	cf 93       	push	r28
    1214:	df 93       	push	r29
    1216:	ec 01       	movw	r28, r24
    1218:	2b 81       	ldd	r18, Y+3	; 0x03
    121a:	20 ff       	sbrs	r18, 0
    121c:	33 c0       	rjmp	.+102    	; 0x1284 <fgetc+0x72>
    121e:	26 ff       	sbrs	r18, 6
    1220:	0a c0       	rjmp	.+20     	; 0x1236 <fgetc+0x24>
    1222:	2f 7b       	andi	r18, 0xBF	; 191
    1224:	2b 83       	std	Y+3, r18	; 0x03
    1226:	8e 81       	ldd	r24, Y+6	; 0x06
    1228:	9f 81       	ldd	r25, Y+7	; 0x07
    122a:	01 96       	adiw	r24, 0x01	; 1
    122c:	9f 83       	std	Y+7, r25	; 0x07
    122e:	8e 83       	std	Y+6, r24	; 0x06
    1230:	8a 81       	ldd	r24, Y+2	; 0x02
    1232:	90 e0       	ldi	r25, 0x00	; 0
    1234:	29 c0       	rjmp	.+82     	; 0x1288 <fgetc+0x76>
    1236:	22 ff       	sbrs	r18, 2
    1238:	0f c0       	rjmp	.+30     	; 0x1258 <fgetc+0x46>
    123a:	e8 81       	ld	r30, Y
    123c:	f9 81       	ldd	r31, Y+1	; 0x01
    123e:	80 81       	ld	r24, Z
    1240:	08 2e       	mov	r0, r24
    1242:	00 0c       	add	r0, r0
    1244:	99 0b       	sbc	r25, r25
    1246:	00 97       	sbiw	r24, 0x00	; 0
    1248:	19 f4       	brne	.+6      	; 0x1250 <fgetc+0x3e>
    124a:	20 62       	ori	r18, 0x20	; 32
    124c:	2b 83       	std	Y+3, r18	; 0x03
    124e:	1a c0       	rjmp	.+52     	; 0x1284 <fgetc+0x72>
    1250:	31 96       	adiw	r30, 0x01	; 1
    1252:	f9 83       	std	Y+1, r31	; 0x01
    1254:	e8 83       	st	Y, r30
    1256:	0e c0       	rjmp	.+28     	; 0x1274 <fgetc+0x62>
    1258:	ea 85       	ldd	r30, Y+10	; 0x0a
    125a:	fb 85       	ldd	r31, Y+11	; 0x0b
    125c:	09 95       	icall
    125e:	97 ff       	sbrs	r25, 7
    1260:	09 c0       	rjmp	.+18     	; 0x1274 <fgetc+0x62>
    1262:	2b 81       	ldd	r18, Y+3	; 0x03
    1264:	01 96       	adiw	r24, 0x01	; 1
    1266:	11 f0       	breq	.+4      	; 0x126c <fgetc+0x5a>
    1268:	80 e2       	ldi	r24, 0x20	; 32
    126a:	01 c0       	rjmp	.+2      	; 0x126e <fgetc+0x5c>
    126c:	80 e1       	ldi	r24, 0x10	; 16
    126e:	82 2b       	or	r24, r18
    1270:	8b 83       	std	Y+3, r24	; 0x03
    1272:	08 c0       	rjmp	.+16     	; 0x1284 <fgetc+0x72>
    1274:	2e 81       	ldd	r18, Y+6	; 0x06
    1276:	3f 81       	ldd	r19, Y+7	; 0x07
    1278:	2f 5f       	subi	r18, 0xFF	; 255
    127a:	3f 4f       	sbci	r19, 0xFF	; 255
    127c:	3f 83       	std	Y+7, r19	; 0x07
    127e:	2e 83       	std	Y+6, r18	; 0x06
    1280:	99 27       	eor	r25, r25
    1282:	02 c0       	rjmp	.+4      	; 0x1288 <fgetc+0x76>
    1284:	8f ef       	ldi	r24, 0xFF	; 255
    1286:	9f ef       	ldi	r25, 0xFF	; 255
    1288:	df 91       	pop	r29
    128a:	cf 91       	pop	r28
    128c:	08 95       	ret

0000128e <fputc>:
    128e:	0f 93       	push	r16
    1290:	1f 93       	push	r17
    1292:	cf 93       	push	r28
    1294:	df 93       	push	r29
    1296:	fb 01       	movw	r30, r22
    1298:	23 81       	ldd	r18, Z+3	; 0x03
    129a:	21 fd       	sbrc	r18, 1
    129c:	03 c0       	rjmp	.+6      	; 0x12a4 <fputc+0x16>
    129e:	8f ef       	ldi	r24, 0xFF	; 255
    12a0:	9f ef       	ldi	r25, 0xFF	; 255
    12a2:	2c c0       	rjmp	.+88     	; 0x12fc <fputc+0x6e>
    12a4:	22 ff       	sbrs	r18, 2
    12a6:	16 c0       	rjmp	.+44     	; 0x12d4 <fputc+0x46>
    12a8:	46 81       	ldd	r20, Z+6	; 0x06
    12aa:	57 81       	ldd	r21, Z+7	; 0x07
    12ac:	24 81       	ldd	r18, Z+4	; 0x04
    12ae:	35 81       	ldd	r19, Z+5	; 0x05
    12b0:	42 17       	cp	r20, r18
    12b2:	53 07       	cpc	r21, r19
    12b4:	44 f4       	brge	.+16     	; 0x12c6 <fputc+0x38>
    12b6:	a0 81       	ld	r26, Z
    12b8:	b1 81       	ldd	r27, Z+1	; 0x01
    12ba:	9d 01       	movw	r18, r26
    12bc:	2f 5f       	subi	r18, 0xFF	; 255
    12be:	3f 4f       	sbci	r19, 0xFF	; 255
    12c0:	31 83       	std	Z+1, r19	; 0x01
    12c2:	20 83       	st	Z, r18
    12c4:	8c 93       	st	X, r24
    12c6:	26 81       	ldd	r18, Z+6	; 0x06
    12c8:	37 81       	ldd	r19, Z+7	; 0x07
    12ca:	2f 5f       	subi	r18, 0xFF	; 255
    12cc:	3f 4f       	sbci	r19, 0xFF	; 255
    12ce:	37 83       	std	Z+7, r19	; 0x07
    12d0:	26 83       	std	Z+6, r18	; 0x06
    12d2:	14 c0       	rjmp	.+40     	; 0x12fc <fputc+0x6e>
    12d4:	8b 01       	movw	r16, r22
    12d6:	ec 01       	movw	r28, r24
    12d8:	fb 01       	movw	r30, r22
    12da:	00 84       	ldd	r0, Z+8	; 0x08
    12dc:	f1 85       	ldd	r31, Z+9	; 0x09
    12de:	e0 2d       	mov	r30, r0
    12e0:	09 95       	icall
    12e2:	89 2b       	or	r24, r25
    12e4:	e1 f6       	brne	.-72     	; 0x129e <fputc+0x10>
    12e6:	d8 01       	movw	r26, r16
    12e8:	16 96       	adiw	r26, 0x06	; 6
    12ea:	8d 91       	ld	r24, X+
    12ec:	9c 91       	ld	r25, X
    12ee:	17 97       	sbiw	r26, 0x07	; 7
    12f0:	01 96       	adiw	r24, 0x01	; 1
    12f2:	17 96       	adiw	r26, 0x07	; 7
    12f4:	9c 93       	st	X, r25
    12f6:	8e 93       	st	-X, r24
    12f8:	16 97       	sbiw	r26, 0x06	; 6
    12fa:	ce 01       	movw	r24, r28
    12fc:	df 91       	pop	r29
    12fe:	cf 91       	pop	r28
    1300:	1f 91       	pop	r17
    1302:	0f 91       	pop	r16
    1304:	08 95       	ret

00001306 <ungetc>:
    1306:	fb 01       	movw	r30, r22
    1308:	23 81       	ldd	r18, Z+3	; 0x03
    130a:	20 ff       	sbrs	r18, 0
    130c:	12 c0       	rjmp	.+36     	; 0x1332 <ungetc+0x2c>
    130e:	26 fd       	sbrc	r18, 6
    1310:	10 c0       	rjmp	.+32     	; 0x1332 <ungetc+0x2c>
    1312:	8f 3f       	cpi	r24, 0xFF	; 255
    1314:	3f ef       	ldi	r19, 0xFF	; 255
    1316:	93 07       	cpc	r25, r19
    1318:	61 f0       	breq	.+24     	; 0x1332 <ungetc+0x2c>
    131a:	82 83       	std	Z+2, r24	; 0x02
    131c:	2f 7d       	andi	r18, 0xDF	; 223
    131e:	20 64       	ori	r18, 0x40	; 64
    1320:	23 83       	std	Z+3, r18	; 0x03
    1322:	26 81       	ldd	r18, Z+6	; 0x06
    1324:	37 81       	ldd	r19, Z+7	; 0x07
    1326:	21 50       	subi	r18, 0x01	; 1
    1328:	31 09       	sbc	r19, r1
    132a:	37 83       	std	Z+7, r19	; 0x07
    132c:	26 83       	std	Z+6, r18	; 0x06
    132e:	99 27       	eor	r25, r25
    1330:	08 95       	ret
    1332:	8f ef       	ldi	r24, 0xFF	; 255
    1334:	9f ef       	ldi	r25, 0xFF	; 255
    1336:	08 95       	ret

00001338 <__ultoa_invert>:
    1338:	fa 01       	movw	r30, r20
    133a:	aa 27       	eor	r26, r26
    133c:	28 30       	cpi	r18, 0x08	; 8
    133e:	51 f1       	breq	.+84     	; 0x1394 <__ultoa_invert+0x5c>
    1340:	20 31       	cpi	r18, 0x10	; 16
    1342:	81 f1       	breq	.+96     	; 0x13a4 <__ultoa_invert+0x6c>
    1344:	e8 94       	clt
    1346:	6f 93       	push	r22
    1348:	6e 7f       	andi	r22, 0xFE	; 254
    134a:	6e 5f       	subi	r22, 0xFE	; 254
    134c:	7f 4f       	sbci	r23, 0xFF	; 255
    134e:	8f 4f       	sbci	r24, 0xFF	; 255
    1350:	9f 4f       	sbci	r25, 0xFF	; 255
    1352:	af 4f       	sbci	r26, 0xFF	; 255
    1354:	b1 e0       	ldi	r27, 0x01	; 1
    1356:	3e d0       	rcall	.+124    	; 0x13d4 <__ultoa_invert+0x9c>
    1358:	b4 e0       	ldi	r27, 0x04	; 4
    135a:	3c d0       	rcall	.+120    	; 0x13d4 <__ultoa_invert+0x9c>
    135c:	67 0f       	add	r22, r23
    135e:	78 1f       	adc	r23, r24
    1360:	89 1f       	adc	r24, r25
    1362:	9a 1f       	adc	r25, r26
    1364:	a1 1d       	adc	r26, r1
    1366:	68 0f       	add	r22, r24
    1368:	79 1f       	adc	r23, r25
    136a:	8a 1f       	adc	r24, r26
    136c:	91 1d       	adc	r25, r1
    136e:	a1 1d       	adc	r26, r1
    1370:	6a 0f       	add	r22, r26
    1372:	71 1d       	adc	r23, r1
    1374:	81 1d       	adc	r24, r1
    1376:	91 1d       	adc	r25, r1
    1378:	a1 1d       	adc	r26, r1
    137a:	20 d0       	rcall	.+64     	; 0x13bc <__ultoa_invert+0x84>
    137c:	09 f4       	brne	.+2      	; 0x1380 <__ultoa_invert+0x48>
    137e:	68 94       	set
    1380:	3f 91       	pop	r19
    1382:	2a e0       	ldi	r18, 0x0A	; 10
    1384:	26 9f       	mul	r18, r22
    1386:	11 24       	eor	r1, r1
    1388:	30 19       	sub	r19, r0
    138a:	30 5d       	subi	r19, 0xD0	; 208
    138c:	31 93       	st	Z+, r19
    138e:	de f6       	brtc	.-74     	; 0x1346 <__ultoa_invert+0xe>
    1390:	cf 01       	movw	r24, r30
    1392:	08 95       	ret
    1394:	46 2f       	mov	r20, r22
    1396:	47 70       	andi	r20, 0x07	; 7
    1398:	40 5d       	subi	r20, 0xD0	; 208
    139a:	41 93       	st	Z+, r20
    139c:	b3 e0       	ldi	r27, 0x03	; 3
    139e:	0f d0       	rcall	.+30     	; 0x13be <__ultoa_invert+0x86>
    13a0:	c9 f7       	brne	.-14     	; 0x1394 <__ultoa_invert+0x5c>
    13a2:	f6 cf       	rjmp	.-20     	; 0x1390 <__ultoa_invert+0x58>
    13a4:	46 2f       	mov	r20, r22
    13a6:	4f 70       	andi	r20, 0x0F	; 15
    13a8:	40 5d       	subi	r20, 0xD0	; 208
    13aa:	4a 33       	cpi	r20, 0x3A	; 58
    13ac:	18 f0       	brcs	.+6      	; 0x13b4 <__ultoa_invert+0x7c>
    13ae:	49 5d       	subi	r20, 0xD9	; 217
    13b0:	31 fd       	sbrc	r19, 1
    13b2:	40 52       	subi	r20, 0x20	; 32
    13b4:	41 93       	st	Z+, r20
    13b6:	02 d0       	rcall	.+4      	; 0x13bc <__ultoa_invert+0x84>
    13b8:	a9 f7       	brne	.-22     	; 0x13a4 <__ultoa_invert+0x6c>
    13ba:	ea cf       	rjmp	.-44     	; 0x1390 <__ultoa_invert+0x58>
    13bc:	b4 e0       	ldi	r27, 0x04	; 4
    13be:	a6 95       	lsr	r26
    13c0:	97 95       	ror	r25
    13c2:	87 95       	ror	r24
    13c4:	77 95       	ror	r23
    13c6:	67 95       	ror	r22
    13c8:	ba 95       	dec	r27
    13ca:	c9 f7       	brne	.-14     	; 0x13be <__ultoa_invert+0x86>
    13cc:	00 97       	sbiw	r24, 0x00	; 0
    13ce:	61 05       	cpc	r22, r1
    13d0:	71 05       	cpc	r23, r1
    13d2:	08 95       	ret
    13d4:	9b 01       	movw	r18, r22
    13d6:	ac 01       	movw	r20, r24
    13d8:	0a 2e       	mov	r0, r26
    13da:	06 94       	lsr	r0
    13dc:	57 95       	ror	r21
    13de:	47 95       	ror	r20
    13e0:	37 95       	ror	r19
    13e2:	27 95       	ror	r18
    13e4:	ba 95       	dec	r27
    13e6:	c9 f7       	brne	.-14     	; 0x13da <__ultoa_invert+0xa2>
    13e8:	62 0f       	add	r22, r18
    13ea:	73 1f       	adc	r23, r19
    13ec:	84 1f       	adc	r24, r20
    13ee:	95 1f       	adc	r25, r21
    13f0:	a0 1d       	adc	r26, r0
    13f2:	08 95       	ret

000013f4 <__ctype_isfalse>:
    13f4:	99 27       	eor	r25, r25
    13f6:	88 27       	eor	r24, r24

000013f8 <__ctype_istrue>:
    13f8:	08 95       	ret

000013fa <__prologue_saves__>:
    13fa:	2f 92       	push	r2
    13fc:	3f 92       	push	r3
    13fe:	4f 92       	push	r4
    1400:	5f 92       	push	r5
    1402:	6f 92       	push	r6
    1404:	7f 92       	push	r7
    1406:	8f 92       	push	r8
    1408:	9f 92       	push	r9
    140a:	af 92       	push	r10
    140c:	bf 92       	push	r11
    140e:	cf 92       	push	r12
    1410:	df 92       	push	r13
    1412:	ef 92       	push	r14
    1414:	ff 92       	push	r15
    1416:	0f 93       	push	r16
    1418:	1f 93       	push	r17
    141a:	cf 93       	push	r28
    141c:	df 93       	push	r29
    141e:	cd b7       	in	r28, 0x3d	; 61
    1420:	de b7       	in	r29, 0x3e	; 62
    1422:	ca 1b       	sub	r28, r26
    1424:	db 0b       	sbc	r29, r27
    1426:	0f b6       	in	r0, 0x3f	; 63
    1428:	f8 94       	cli
    142a:	de bf       	out	0x3e, r29	; 62
    142c:	0f be       	out	0x3f, r0	; 63
    142e:	cd bf       	out	0x3d, r28	; 61
    1430:	09 94       	ijmp

00001432 <__epilogue_restores__>:
    1432:	2a 88       	ldd	r2, Y+18	; 0x12
    1434:	39 88       	ldd	r3, Y+17	; 0x11
    1436:	48 88       	ldd	r4, Y+16	; 0x10
    1438:	5f 84       	ldd	r5, Y+15	; 0x0f
    143a:	6e 84       	ldd	r6, Y+14	; 0x0e
    143c:	7d 84       	ldd	r7, Y+13	; 0x0d
    143e:	8c 84       	ldd	r8, Y+12	; 0x0c
    1440:	9b 84       	ldd	r9, Y+11	; 0x0b
    1442:	aa 84       	ldd	r10, Y+10	; 0x0a
    1444:	b9 84       	ldd	r11, Y+9	; 0x09
    1446:	c8 84       	ldd	r12, Y+8	; 0x08
    1448:	df 80       	ldd	r13, Y+7	; 0x07
    144a:	ee 80       	ldd	r14, Y+6	; 0x06
    144c:	fd 80       	ldd	r15, Y+5	; 0x05
    144e:	0c 81       	ldd	r16, Y+4	; 0x04
    1450:	1b 81       	ldd	r17, Y+3	; 0x03
    1452:	aa 81       	ldd	r26, Y+2	; 0x02
    1454:	b9 81       	ldd	r27, Y+1	; 0x01
    1456:	ce 0f       	add	r28, r30
    1458:	d1 1d       	adc	r29, r1
    145a:	0f b6       	in	r0, 0x3f	; 63
    145c:	f8 94       	cli
    145e:	de bf       	out	0x3e, r29	; 62
    1460:	0f be       	out	0x3f, r0	; 63
    1462:	cd bf       	out	0x3d, r28	; 61
    1464:	ed 01       	movw	r28, r26
    1466:	08 95       	ret

00001468 <_exit>:
    1468:	f8 94       	cli

0000146a <__stop_program>:
    146a:	ff cf       	rjmp	.-2      	; 0x146a <__stop_program>
