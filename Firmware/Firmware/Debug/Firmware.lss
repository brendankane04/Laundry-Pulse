
Firmware.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000bc  00800100  00001448  000014dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001448  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000e  008001bc  008001bc  00001598  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001598  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000015f4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f0  00000000  00000000  00001634  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000014d7  00000000  00000000  00001724  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e74  00000000  00000000  00002bfb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008cc  00000000  00000000  00003a6f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000204  00000000  00000000  0000433c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000064d  00000000  00000000  00004540  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000070c  00000000  00000000  00004b8d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a0  00000000  00000000  00005299  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__ctors_end>
       4:	0c 94 16 02 	jmp	0x42c	; 0x42c <__vector_1>
       8:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
       c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      10:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      14:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      18:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      1c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      20:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      24:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      28:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      2c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      30:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      34:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      38:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      3c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      40:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      44:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      48:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      4c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      50:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      54:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      58:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      5c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      60:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      64:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      68:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      6c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      70:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      74:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      78:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      7c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      80:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      84:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      88:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      8c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      90:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      94:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      98:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      9c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      a0:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      a4:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      a8:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      ac:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      b0:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>

000000b4 <__trampolines_end>:
      b4:	63 64       	ori	r22, 0x43	; 67
      b6:	69 6e       	ori	r22, 0xE9	; 233
      b8:	6f 70       	andi	r22, 0x0F	; 15
      ba:	73 75       	andi	r23, 0x53	; 83
      bc:	78 58       	subi	r23, 0x88	; 136
      be:	5b 00       	.word	0x005b	; ????

000000c0 <__ctors_end>:
      c0:	11 24       	eor	r1, r1
      c2:	1f be       	out	0x3f, r1	; 63
      c4:	cf ef       	ldi	r28, 0xFF	; 255
      c6:	d8 e0       	ldi	r29, 0x08	; 8
      c8:	de bf       	out	0x3e, r29	; 62
      ca:	cd bf       	out	0x3d, r28	; 61

000000cc <__do_copy_data>:
      cc:	11 e0       	ldi	r17, 0x01	; 1
      ce:	a0 e0       	ldi	r26, 0x00	; 0
      d0:	b1 e0       	ldi	r27, 0x01	; 1
      d2:	e8 e4       	ldi	r30, 0x48	; 72
      d4:	f4 e1       	ldi	r31, 0x14	; 20
      d6:	02 c0       	rjmp	.+4      	; 0xdc <__do_copy_data+0x10>
      d8:	05 90       	lpm	r0, Z+
      da:	0d 92       	st	X+, r0
      dc:	ac 3b       	cpi	r26, 0xBC	; 188
      de:	b1 07       	cpc	r27, r17
      e0:	d9 f7       	brne	.-10     	; 0xd8 <__do_copy_data+0xc>

000000e2 <__do_clear_bss>:
      e2:	21 e0       	ldi	r18, 0x01	; 1
      e4:	ac eb       	ldi	r26, 0xBC	; 188
      e6:	b1 e0       	ldi	r27, 0x01	; 1
      e8:	01 c0       	rjmp	.+2      	; 0xec <.do_clear_bss_start>

000000ea <.do_clear_bss_loop>:
      ea:	1d 92       	st	X+, r1

000000ec <.do_clear_bss_start>:
      ec:	aa 3c       	cpi	r26, 0xCA	; 202
      ee:	b2 07       	cpc	r27, r18
      f0:	e1 f7       	brne	.-8      	; 0xea <.do_clear_bss_loop>
      f2:	0e 94 49 02 	call	0x492	; 0x492 <main>
      f6:	0c 94 22 0a 	jmp	0x1444	; 0x1444 <_exit>

000000fa <__bad_interrupt>:
      fa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000fe <blink_init>:

//Init function for the blinking functionality 
void blink_init()
{
	//Set the necessary outputs on the DDRD port & set them up as high since the LED is active-low
	DDRD = RED | BLUE | GREEN;
      fe:	80 ee       	ldi	r24, 0xE0	; 224
     100:	8a b9       	out	0x0a, r24	; 10
	PORTD |= RED | BLUE | GREEN;
     102:	8b b1       	in	r24, 0x0b	; 11
     104:	80 6e       	ori	r24, 0xE0	; 224
     106:	8b b9       	out	0x0b, r24	; 11
     108:	08 95       	ret

0000010a <blink>:
}

//Blink any color LED for a brief moment
void blink(int color)
{
	PORTD &= ~color;
     10a:	9b b1       	in	r25, 0x0b	; 11
     10c:	28 2f       	mov	r18, r24
     10e:	20 95       	com	r18
     110:	92 23       	and	r25, r18
     112:	9b b9       	out	0x0b, r25	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     114:	2f ef       	ldi	r18, 0xFF	; 255
     116:	31 ee       	ldi	r19, 0xE1	; 225
     118:	94 e0       	ldi	r25, 0x04	; 4
     11a:	21 50       	subi	r18, 0x01	; 1
     11c:	30 40       	sbci	r19, 0x00	; 0
     11e:	90 40       	sbci	r25, 0x00	; 0
     120:	e1 f7       	brne	.-8      	; 0x11a <blink+0x10>
     122:	00 c0       	rjmp	.+0      	; 0x124 <blink+0x1a>
     124:	00 00       	nop
	_delay_ms(100);
	PORTD |= color;
     126:	9b b1       	in	r25, 0x0b	; 11
     128:	89 2b       	or	r24, r25
     12a:	8b b9       	out	0x0b, r24	; 11
     12c:	2f ef       	ldi	r18, 0xFF	; 255
     12e:	31 ee       	ldi	r19, 0xE1	; 225
     130:	84 e0       	ldi	r24, 0x04	; 4
     132:	21 50       	subi	r18, 0x01	; 1
     134:	30 40       	sbci	r19, 0x00	; 0
     136:	80 40       	sbci	r24, 0x00	; 0
     138:	e1 f7       	brne	.-8      	; 0x132 <blink+0x28>
     13a:	00 c0       	rjmp	.+0      	; 0x13c <blink+0x32>
     13c:	00 00       	nop
     13e:	08 95       	ret

00000140 <terminal_error>:

//Indicate to user that there's an error which ended the program with a blinking red light
void terminal_error()
{
	//initalize blinking again, just in case
	blink_init();
     140:	0e 94 7f 00 	call	0xfe	; 0xfe <blink_init>
	while(1)
	{
		blink(RED);		
     144:	80 e8       	ldi	r24, 0x80	; 128
     146:	90 e0       	ldi	r25, 0x00	; 0
     148:	0e 94 85 00 	call	0x10a	; 0x10a <blink>
     14c:	fb cf       	rjmp	.-10     	; 0x144 <terminal_error+0x4>

0000014e <ESP01_init>:
char *password;

//Init for the ESP8266 interface
//TODO: initialize the WIFI parameters here. It's intuitive
void ESP01_init(char *_network_name, char *_password)
{
     14e:	0f 93       	push	r16
     150:	1f 93       	push	r17
     152:	cf 93       	push	r28
     154:	df 93       	push	r29
     156:	8c 01       	movw	r16, r24
     158:	eb 01       	movw	r28, r22
	//Copy over the login information
	network_name = malloc(strlen(_network_name) + 1);
     15a:	fc 01       	movw	r30, r24
     15c:	01 90       	ld	r0, Z+
     15e:	00 20       	and	r0, r0
     160:	e9 f7       	brne	.-6      	; 0x15c <ESP01_init+0xe>
     162:	31 97       	sbiw	r30, 0x01	; 1
     164:	cf 01       	movw	r24, r30
     166:	80 1b       	sub	r24, r16
     168:	91 0b       	sbc	r25, r17
     16a:	01 96       	adiw	r24, 0x01	; 1
     16c:	0e 94 95 02 	call	0x52a	; 0x52a <malloc>
     170:	90 93 bf 01 	sts	0x01BF, r25	; 0x8001bf <network_name+0x1>
     174:	80 93 be 01 	sts	0x01BE, r24	; 0x8001be <network_name>
	strcpy(network_name, _network_name);
     178:	b8 01       	movw	r22, r16
     17a:	0e 94 b6 03 	call	0x76c	; 0x76c <strcpy>
	password = malloc(strlen(_password) + 1);
     17e:	fe 01       	movw	r30, r28
     180:	01 90       	ld	r0, Z+
     182:	00 20       	and	r0, r0
     184:	e9 f7       	brne	.-6      	; 0x180 <ESP01_init+0x32>
     186:	31 97       	sbiw	r30, 0x01	; 1
     188:	cf 01       	movw	r24, r30
     18a:	8c 1b       	sub	r24, r28
     18c:	9d 0b       	sbc	r25, r29
     18e:	01 96       	adiw	r24, 0x01	; 1
     190:	0e 94 95 02 	call	0x52a	; 0x52a <malloc>
     194:	90 93 bd 01 	sts	0x01BD, r25	; 0x8001bd <__data_end+0x1>
     198:	80 93 bc 01 	sts	0x01BC, r24	; 0x8001bc <__data_end>
	strcpy(password, _password);
     19c:	be 01       	movw	r22, r28
     19e:	0e 94 b6 03 	call	0x76c	; 0x76c <strcpy>

	//Configure the pins connected to reset & chip_en for output
	DDRD |= _BV(3) | _BV(4);
     1a2:	8a b1       	in	r24, 0x0a	; 10
     1a4:	88 61       	ori	r24, 0x18	; 24
     1a6:	8a b9       	out	0x0a, r24	; 10
	//Set the RESET pin to high to reset it later
	PORTD |= _BV(4);
     1a8:	8b b1       	in	r24, 0x0b	; 11
     1aa:	80 61       	ori	r24, 0x10	; 16
     1ac:	8b b9       	out	0x0b, r24	; 11
}
     1ae:	df 91       	pop	r29
     1b0:	cf 91       	pop	r28
     1b2:	1f 91       	pop	r17
     1b4:	0f 91       	pop	r16
     1b6:	08 95       	ret

000001b8 <ESP01_Loop_Until_OK>:

//halt the device's operation until an "OK" is received on the UART bus.
//"OK" is the ESP8266's acknowledgment message of a successful command.
void ESP01_Loop_Until_OK()
{
     1b8:	0f 93       	push	r16
     1ba:	1f 93       	push	r17
     1bc:	cf 93       	push	r28
     1be:	df 93       	push	r29
     1c0:	cd b7       	in	r28, 0x3d	; 61
     1c2:	de b7       	in	r29, 0x3e	; 62
     1c4:	c0 54       	subi	r28, 0x40	; 64
     1c6:	d1 09       	sbc	r29, r1
     1c8:	0f b6       	in	r0, 0x3f	; 63
     1ca:	f8 94       	cli
     1cc:	de bf       	out	0x3e, r29	; 62
     1ce:	0f be       	out	0x3f, r0	; 63
     1d0:	cd bf       	out	0x3d, r28	; 61
	char esp_resp[64];
	int res;
	do 
	{
		//Read in a word from the ESP
		scanf("%s", esp_resp);	
     1d2:	8e 01       	movw	r16, r28
     1d4:	0f 5f       	subi	r16, 0xFF	; 255
     1d6:	1f 4f       	sbci	r17, 0xFF	; 255
     1d8:	1f 93       	push	r17
     1da:	0f 93       	push	r16
     1dc:	82 e2       	ldi	r24, 0x22	; 34
     1de:	91 e0       	ldi	r25, 0x01	; 1
     1e0:	9f 93       	push	r25
     1e2:	8f 93       	push	r24
     1e4:	0e 94 07 04 	call	0x80e	; 0x80e <scanf>

		//If the word is or contains "OK", return 0
		res = (int) strstr(esp_resp, "OK");
     1e8:	65 e2       	ldi	r22, 0x25	; 37
     1ea:	71 e0       	ldi	r23, 0x01	; 1
     1ec:	c8 01       	movw	r24, r16
     1ee:	0e 94 bd 03 	call	0x77a	; 0x77a <strstr>
	} while (!res);
     1f2:	0f 90       	pop	r0
     1f4:	0f 90       	pop	r0
     1f6:	0f 90       	pop	r0
     1f8:	0f 90       	pop	r0
     1fa:	89 2b       	or	r24, r25
     1fc:	51 f3       	breq	.-44     	; 0x1d2 <ESP01_Loop_Until_OK+0x1a>
}
     1fe:	c0 5c       	subi	r28, 0xC0	; 192
     200:	df 4f       	sbci	r29, 0xFF	; 255
     202:	0f b6       	in	r0, 0x3f	; 63
     204:	f8 94       	cli
     206:	de bf       	out	0x3e, r29	; 62
     208:	0f be       	out	0x3f, r0	; 63
     20a:	cd bf       	out	0x3d, r28	; 61
     20c:	df 91       	pop	r29
     20e:	cf 91       	pop	r28
     210:	1f 91       	pop	r17
     212:	0f 91       	pop	r16
     214:	08 95       	ret

00000216 <ESP01_Set_EN>:

//Turn the ESP8266 on & reset it to avoid conflicts
void ESP01_Set_EN(char status)
{
	if(status)
     216:	88 23       	and	r24, r24
     218:	e1 f0       	breq	.+56     	; 0x252 <ESP01_Set_EN+0x3c>
	{//Activate the device
		PORTD |= _BV(3);
     21a:	8b b1       	in	r24, 0x0b	; 11
     21c:	88 60       	ori	r24, 0x08	; 8
     21e:	8b b9       	out	0x0b, r24	; 11

		//Reset the device
		PORTD &= ~_BV(4);
     220:	8b b1       	in	r24, 0x0b	; 11
     222:	8f 7e       	andi	r24, 0xEF	; 239
     224:	8b b9       	out	0x0b, r24	; 11
     226:	2f ef       	ldi	r18, 0xFF	; 255
     228:	83 ed       	ldi	r24, 0xD3	; 211
     22a:	90 e3       	ldi	r25, 0x30	; 48
     22c:	21 50       	subi	r18, 0x01	; 1
     22e:	80 40       	sbci	r24, 0x00	; 0
     230:	90 40       	sbci	r25, 0x00	; 0
     232:	e1 f7       	brne	.-8      	; 0x22c <ESP01_Set_EN+0x16>
     234:	00 c0       	rjmp	.+0      	; 0x236 <ESP01_Set_EN+0x20>
     236:	00 00       	nop
		_delay_ms(1000);
		PORTD |= _BV(4);
     238:	8b b1       	in	r24, 0x0b	; 11
     23a:	80 61       	ori	r24, 0x10	; 16
     23c:	8b b9       	out	0x0b, r24	; 11
     23e:	2f ef       	ldi	r18, 0xFF	; 255
     240:	83 ed       	ldi	r24, 0xD3	; 211
     242:	90 e3       	ldi	r25, 0x30	; 48
     244:	21 50       	subi	r18, 0x01	; 1
     246:	80 40       	sbci	r24, 0x00	; 0
     248:	90 40       	sbci	r25, 0x00	; 0
     24a:	e1 f7       	brne	.-8      	; 0x244 <ESP01_Set_EN+0x2e>
     24c:	00 c0       	rjmp	.+0      	; 0x24e <ESP01_Set_EN+0x38>
     24e:	00 00       	nop
     250:	03 c0       	rjmp	.+6      	; 0x258 <ESP01_Set_EN+0x42>
		_delay_ms(1000);
	}
	else
	{//Deactivate the device
		PORTD &= ~_BV(3);
     252:	8b b1       	in	r24, 0x0b	; 11
     254:	87 7f       	andi	r24, 0xF7	; 247
     256:	8b b9       	out	0x0b, r24	; 11
     258:	2f ef       	ldi	r18, 0xFF	; 255
     25a:	87 ea       	ldi	r24, 0xA7	; 167
     25c:	91 e6       	ldi	r25, 0x61	; 97
     25e:	21 50       	subi	r18, 0x01	; 1
     260:	80 40       	sbci	r24, 0x00	; 0
     262:	90 40       	sbci	r25, 0x00	; 0
     264:	e1 f7       	brne	.-8      	; 0x25e <ESP01_Set_EN+0x48>
     266:	00 c0       	rjmp	.+0      	; 0x268 <ESP01_Set_EN+0x52>
     268:	00 00       	nop
     26a:	08 95       	ret

0000026c <ESP01_Send_CMD>:
}

//Send a command to the ESP01 & move on when it's OK'd the operation
void ESP01_Send_CMD(char *cmd)
{
	puts(cmd);
     26c:	0e 94 d7 03 	call	0x7ae	; 0x7ae <puts>
	ESP01_Loop_Until_OK();
     270:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <ESP01_Loop_Until_OK>
     274:	08 95       	ret

00000276 <ESP01_Send_CMD_Args>:
}

//Send a command with 'num' number of arguments
void ESP01_Send_CMD_Args(char *cmd, char **args, int num)
{
     276:	cf 93       	push	r28
     278:	df 93       	push	r29
     27a:	cd b7       	in	r28, 0x3d	; 61
     27c:	de b7       	in	r29, 0x3e	; 62
     27e:	c0 58       	subi	r28, 0x80	; 128
     280:	d1 09       	sbc	r29, r1
     282:	0f b6       	in	r0, 0x3f	; 63
     284:	f8 94       	cli
     286:	de bf       	out	0x3e, r29	; 62
     288:	0f be       	out	0x3f, r0	; 63
     28a:	cd bf       	out	0x3d, r28	; 61
     28c:	fb 01       	movw	r30, r22
	char cmd_w_args[128] = "";
     28e:	1a 82       	std	Y+2, r1	; 0x02
     290:	19 82       	std	Y+1, r1	; 0x01
     292:	be 01       	movw	r22, r28
     294:	6d 5f       	subi	r22, 0xFD	; 253
     296:	7f 4f       	sbci	r23, 0xFF	; 255
     298:	2e e7       	ldi	r18, 0x7E	; 126
     29a:	db 01       	movw	r26, r22
     29c:	1d 92       	st	X+, r1
     29e:	2a 95       	dec	r18
     2a0:	e9 f7       	brne	.-6      	; 0x29c <ESP01_Send_CMD_Args+0x26>

	//Input a variable number of arguments
	switch(num)
     2a2:	42 30       	cpi	r20, 0x02	; 2
     2a4:	51 05       	cpc	r21, r1
     2a6:	01 f1       	breq	.+64     	; 0x2e8 <ESP01_Send_CMD_Args+0x72>
     2a8:	24 f4       	brge	.+8      	; 0x2b2 <ESP01_Send_CMD_Args+0x3c>
     2aa:	41 30       	cpi	r20, 0x01	; 1
     2ac:	51 05       	cpc	r21, r1
     2ae:	49 f0       	breq	.+18     	; 0x2c2 <ESP01_Send_CMD_Args+0x4c>
     2b0:	69 c0       	rjmp	.+210    	; 0x384 <ESP01_Send_CMD_Args+0x10e>
     2b2:	43 30       	cpi	r20, 0x03	; 3
     2b4:	51 05       	cpc	r21, r1
     2b6:	71 f1       	breq	.+92     	; 0x314 <ESP01_Send_CMD_Args+0x9e>
     2b8:	44 30       	cpi	r20, 0x04	; 4
     2ba:	51 05       	cpc	r21, r1
     2bc:	09 f4       	brne	.+2      	; 0x2c0 <ESP01_Send_CMD_Args+0x4a>
     2be:	44 c0       	rjmp	.+136    	; 0x348 <ESP01_Send_CMD_Args+0xd2>
     2c0:	61 c0       	rjmp	.+194    	; 0x384 <ESP01_Send_CMD_Args+0x10e>
	{
		case 1:
			sprintf(cmd_w_args, cmd, args[0]);	
     2c2:	21 81       	ldd	r18, Z+1	; 0x01
     2c4:	2f 93       	push	r18
     2c6:	20 81       	ld	r18, Z
     2c8:	2f 93       	push	r18
     2ca:	9f 93       	push	r25
     2cc:	8f 93       	push	r24
     2ce:	ce 01       	movw	r24, r28
     2d0:	01 96       	adiw	r24, 0x01	; 1
     2d2:	9f 93       	push	r25
     2d4:	8f 93       	push	r24
     2d6:	0e 94 1d 04 	call	0x83a	; 0x83a <sprintf>
			break;
     2da:	0f 90       	pop	r0
     2dc:	0f 90       	pop	r0
     2de:	0f 90       	pop	r0
     2e0:	0f 90       	pop	r0
     2e2:	0f 90       	pop	r0
     2e4:	0f 90       	pop	r0
     2e6:	50 c0       	rjmp	.+160    	; 0x388 <ESP01_Send_CMD_Args+0x112>
		case 2:
			sprintf(cmd_w_args, cmd, args[0], args[1]);	
     2e8:	23 81       	ldd	r18, Z+3	; 0x03
     2ea:	2f 93       	push	r18
     2ec:	22 81       	ldd	r18, Z+2	; 0x02
     2ee:	2f 93       	push	r18
     2f0:	21 81       	ldd	r18, Z+1	; 0x01
     2f2:	2f 93       	push	r18
     2f4:	20 81       	ld	r18, Z
     2f6:	2f 93       	push	r18
     2f8:	9f 93       	push	r25
     2fa:	8f 93       	push	r24
     2fc:	ce 01       	movw	r24, r28
     2fe:	01 96       	adiw	r24, 0x01	; 1
     300:	9f 93       	push	r25
     302:	8f 93       	push	r24
     304:	0e 94 1d 04 	call	0x83a	; 0x83a <sprintf>
			break;
     308:	0f b6       	in	r0, 0x3f	; 63
     30a:	f8 94       	cli
     30c:	de bf       	out	0x3e, r29	; 62
     30e:	0f be       	out	0x3f, r0	; 63
     310:	cd bf       	out	0x3d, r28	; 61
     312:	3a c0       	rjmp	.+116    	; 0x388 <ESP01_Send_CMD_Args+0x112>
		case 3:
			sprintf(cmd_w_args, cmd, args[0], args[1], args[2]);	
     314:	25 81       	ldd	r18, Z+5	; 0x05
     316:	2f 93       	push	r18
     318:	24 81       	ldd	r18, Z+4	; 0x04
     31a:	2f 93       	push	r18
     31c:	23 81       	ldd	r18, Z+3	; 0x03
     31e:	2f 93       	push	r18
     320:	22 81       	ldd	r18, Z+2	; 0x02
     322:	2f 93       	push	r18
     324:	21 81       	ldd	r18, Z+1	; 0x01
     326:	2f 93       	push	r18
     328:	20 81       	ld	r18, Z
     32a:	2f 93       	push	r18
     32c:	9f 93       	push	r25
     32e:	8f 93       	push	r24
     330:	ce 01       	movw	r24, r28
     332:	01 96       	adiw	r24, 0x01	; 1
     334:	9f 93       	push	r25
     336:	8f 93       	push	r24
     338:	0e 94 1d 04 	call	0x83a	; 0x83a <sprintf>
			break;
     33c:	0f b6       	in	r0, 0x3f	; 63
     33e:	f8 94       	cli
     340:	de bf       	out	0x3e, r29	; 62
     342:	0f be       	out	0x3f, r0	; 63
     344:	cd bf       	out	0x3d, r28	; 61
     346:	20 c0       	rjmp	.+64     	; 0x388 <ESP01_Send_CMD_Args+0x112>
		case 4:
			sprintf(cmd_w_args, cmd, args[0], args[1], args[2], args[3]);	
     348:	27 81       	ldd	r18, Z+7	; 0x07
     34a:	2f 93       	push	r18
     34c:	26 81       	ldd	r18, Z+6	; 0x06
     34e:	2f 93       	push	r18
     350:	25 81       	ldd	r18, Z+5	; 0x05
     352:	2f 93       	push	r18
     354:	24 81       	ldd	r18, Z+4	; 0x04
     356:	2f 93       	push	r18
     358:	23 81       	ldd	r18, Z+3	; 0x03
     35a:	2f 93       	push	r18
     35c:	22 81       	ldd	r18, Z+2	; 0x02
     35e:	2f 93       	push	r18
     360:	21 81       	ldd	r18, Z+1	; 0x01
     362:	2f 93       	push	r18
     364:	20 81       	ld	r18, Z
     366:	2f 93       	push	r18
     368:	9f 93       	push	r25
     36a:	8f 93       	push	r24
     36c:	ce 01       	movw	r24, r28
     36e:	01 96       	adiw	r24, 0x01	; 1
     370:	9f 93       	push	r25
     372:	8f 93       	push	r24
     374:	0e 94 1d 04 	call	0x83a	; 0x83a <sprintf>
			break;
     378:	0f b6       	in	r0, 0x3f	; 63
     37a:	f8 94       	cli
     37c:	de bf       	out	0x3e, r29	; 62
     37e:	0f be       	out	0x3f, r0	; 63
     380:	cd bf       	out	0x3d, r28	; 61
     382:	02 c0       	rjmp	.+4      	; 0x388 <ESP01_Send_CMD_Args+0x112>
		default:
			terminal_error();
     384:	0e 94 a0 00 	call	0x140	; 0x140 <terminal_error>
			break;
	}

	//Send the altered command to the ESP
	ESP01_Send_CMD(cmd_w_args);
     388:	ce 01       	movw	r24, r28
     38a:	01 96       	adiw	r24, 0x01	; 1
     38c:	0e 94 36 01 	call	0x26c	; 0x26c <ESP01_Send_CMD>
}
     390:	c0 58       	subi	r28, 0x80	; 128
     392:	df 4f       	sbci	r29, 0xFF	; 255
     394:	0f b6       	in	r0, 0x3f	; 63
     396:	f8 94       	cli
     398:	de bf       	out	0x3e, r29	; 62
     39a:	0f be       	out	0x3f, r0	; 63
     39c:	cd bf       	out	0x3d, r28	; 61
     39e:	df 91       	pop	r29
     3a0:	cf 91       	pop	r28
     3a2:	08 95       	ret

000003a4 <ESP01_Send_Data>:

//Complete a basic sequence of commands to send a TCP message through the ESP8266 to a specified server.
//TODO:: Make the size of the data sent variable
void ESP01_Send_Data(char *mssg)
{
     3a4:	0f 93       	push	r16
     3a6:	1f 93       	push	r17
     3a8:	cf 93       	push	r28
     3aa:	df 93       	push	r29
     3ac:	00 d0       	rcall	.+0      	; 0x3ae <ESP01_Send_Data+0xa>
     3ae:	00 d0       	rcall	.+0      	; 0x3b0 <ESP01_Send_Data+0xc>
     3b0:	cd b7       	in	r28, 0x3d	; 61
     3b2:	de b7       	in	r29, 0x3e	; 62
     3b4:	8c 01       	movw	r16, r24
	//Initialize the args array for the login data
	char *args[2];
	args[0] = network_name;
     3b6:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <network_name>
     3ba:	90 91 bf 01 	lds	r25, 0x01BF	; 0x8001bf <network_name+0x1>
     3be:	9a 83       	std	Y+2, r25	; 0x02
     3c0:	89 83       	std	Y+1, r24	; 0x01
	args[1] = password;
     3c2:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <__data_end>
     3c6:	90 91 bd 01 	lds	r25, 0x01BD	; 0x8001bd <__data_end+0x1>
     3ca:	9c 83       	std	Y+4, r25	; 0x04
     3cc:	8b 83       	std	Y+3, r24	; 0x03
	
	ESP01_Set_EN(1);
     3ce:	81 e0       	ldi	r24, 0x01	; 1
     3d0:	0e 94 0b 01 	call	0x216	; 0x216 <ESP01_Set_EN>
	ESP01_Send_CMD(AT_CLIENT_MODE);
     3d4:	88 e2       	ldi	r24, 0x28	; 40
     3d6:	91 e0       	ldi	r25, 0x01	; 1
     3d8:	0e 94 36 01 	call	0x26c	; 0x26c <ESP01_Send_CMD>
	ESP01_Send_CMD_Args(AT_JOIN_NETWORK, args, 2);
     3dc:	42 e0       	ldi	r20, 0x02	; 2
     3de:	50 e0       	ldi	r21, 0x00	; 0
     3e0:	be 01       	movw	r22, r28
     3e2:	6f 5f       	subi	r22, 0xFF	; 255
     3e4:	7f 4f       	sbci	r23, 0xFF	; 255
     3e6:	84 e3       	ldi	r24, 0x34	; 52
     3e8:	91 e0       	ldi	r25, 0x01	; 1
     3ea:	0e 94 3b 01 	call	0x276	; 0x276 <ESP01_Send_CMD_Args>
	ESP01_Send_CMD(AT_START_TCP);
     3ee:	87 e4       	ldi	r24, 0x47	; 71
     3f0:	91 e0       	ldi	r25, 0x01	; 1
     3f2:	0e 94 36 01 	call	0x26c	; 0x26c <ESP01_Send_CMD>
	ESP01_Send_CMD(AT_INIT_SEND);
     3f6:	89 e6       	ldi	r24, 0x69	; 105
     3f8:	91 e0       	ldi	r25, 0x01	; 1
     3fa:	0e 94 36 01 	call	0x26c	; 0x26c <ESP01_Send_CMD>
	ESP01_Send_CMD(mssg);
     3fe:	c8 01       	movw	r24, r16
     400:	0e 94 36 01 	call	0x26c	; 0x26c <ESP01_Send_CMD>
	ESP01_Send_CMD(AT_END_SEND);
     404:	87 e7       	ldi	r24, 0x77	; 119
     406:	91 e0       	ldi	r25, 0x01	; 1
     408:	0e 94 36 01 	call	0x26c	; 0x26c <ESP01_Send_CMD>
	ESP01_Send_CMD(AT_QUIT_NETWORK);
     40c:	83 e8       	ldi	r24, 0x83	; 131
     40e:	91 e0       	ldi	r25, 0x01	; 1
     410:	0e 94 36 01 	call	0x26c	; 0x26c <ESP01_Send_CMD>
	ESP01_Set_EN(0);
     414:	80 e0       	ldi	r24, 0x00	; 0
     416:	0e 94 0b 01 	call	0x216	; 0x216 <ESP01_Set_EN>
}
     41a:	0f 90       	pop	r0
     41c:	0f 90       	pop	r0
     41e:	0f 90       	pop	r0
     420:	0f 90       	pop	r0
     422:	df 91       	pop	r29
     424:	cf 91       	pop	r28
     426:	1f 91       	pop	r17
     428:	0f 91       	pop	r16
     42a:	08 95       	ret

0000042c <__vector_1>:
#include "Error.h"
#include "ESP82_Drv.h"

//This interrupt activates when the button is pressed
ISR(INT0_vect)
{
     42c:	1f 92       	push	r1
     42e:	0f 92       	push	r0
     430:	0f b6       	in	r0, 0x3f	; 63
     432:	0f 92       	push	r0
     434:	11 24       	eor	r1, r1
     436:	2f 93       	push	r18
     438:	3f 93       	push	r19
     43a:	4f 93       	push	r20
     43c:	5f 93       	push	r21
     43e:	6f 93       	push	r22
     440:	7f 93       	push	r23
     442:	8f 93       	push	r24
     444:	9f 93       	push	r25
     446:	af 93       	push	r26
     448:	bf 93       	push	r27
     44a:	ef 93       	push	r30
     44c:	ff 93       	push	r31
	//Send the message when the button is pressed
	ESP01_Send_Data("$LAUNDRY\n");
     44e:	8c e8       	ldi	r24, 0x8C	; 140
     450:	91 e0       	ldi	r25, 0x01	; 1
     452:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <ESP01_Send_Data>

	//Blink once to confirm completion of transmission
	blink(RED | BLUE);
     456:	80 ec       	ldi	r24, 0xC0	; 192
     458:	90 e0       	ldi	r25, 0x00	; 0
     45a:	0e 94 85 00 	call	0x10a	; 0x10a <blink>
}
     45e:	ff 91       	pop	r31
     460:	ef 91       	pop	r30
     462:	bf 91       	pop	r27
     464:	af 91       	pop	r26
     466:	9f 91       	pop	r25
     468:	8f 91       	pop	r24
     46a:	7f 91       	pop	r23
     46c:	6f 91       	pop	r22
     46e:	5f 91       	pop	r21
     470:	4f 91       	pop	r20
     472:	3f 91       	pop	r19
     474:	2f 91       	pop	r18
     476:	0f 90       	pop	r0
     478:	0f be       	out	0x3f, r0	; 63
     47a:	0f 90       	pop	r0
     47c:	1f 90       	pop	r1
     47e:	18 95       	reti

00000480 <int_init>:

//Activate the necessary flags for the interrupt to activate
void int_init()
{
	sei();
     480:	78 94       	sei
	EICRA |= 0x00;
     482:	e9 e6       	ldi	r30, 0x69	; 105
     484:	f0 e0       	ldi	r31, 0x00	; 0
     486:	80 81       	ld	r24, Z
     488:	80 83       	st	Z, r24
	EIMSK |= 0x01;
     48a:	8d b3       	in	r24, 0x1d	; 29
     48c:	81 60       	ori	r24, 0x01	; 1
     48e:	8d bb       	out	0x1d, r24	; 29
     490:	08 95       	ret

00000492 <main>:


int main(void) 
{
	//call the init functions
    uart_init();
     492:	0e 94 6e 02 	call	0x4dc	; 0x4dc <uart_init>
	blink_init();
     496:	0e 94 7f 00 	call	0xfe	; 0xfe <blink_init>
	ESP01_init("name of network", "password for network");
     49a:	66 e9       	ldi	r22, 0x96	; 150
     49c:	71 e0       	ldi	r23, 0x01	; 1
     49e:	8b ea       	ldi	r24, 0xAB	; 171
     4a0:	91 e0       	ldi	r25, 0x01	; 1
     4a2:	0e 94 a7 00 	call	0x14e	; 0x14e <ESP01_init>
	int_init();
     4a6:	0e 94 40 02 	call	0x480	; 0x480 <int_init>

	//Set up uart signals to be set up through default stdio functions
    stdout = &uart_output;
     4aa:	e4 ec       	ldi	r30, 0xC4	; 196
     4ac:	f1 e0       	ldi	r31, 0x01	; 1
     4ae:	84 e1       	ldi	r24, 0x14	; 20
     4b0:	91 e0       	ldi	r25, 0x01	; 1
     4b2:	93 83       	std	Z+3, r25	; 0x03
     4b4:	82 83       	std	Z+2, r24	; 0x02
    stdin  = &uart_input;
     4b6:	86 e0       	ldi	r24, 0x06	; 6
     4b8:	91 e0       	ldi	r25, 0x01	; 1
     4ba:	91 83       	std	Z+1, r25	; 0x01
     4bc:	80 83       	st	Z, r24

	//Indicate end of set up by blinking light
	blink(BLUE | GREEN);
     4be:	80 e6       	ldi	r24, 0x60	; 96
     4c0:	90 e0       	ldi	r25, 0x00	; 0
     4c2:	0e 94 85 00 	call	0x10a	; 0x10a <blink>

	//Enter idle mode to conserve power
	set_sleep_mode(0x0); //Set sleep mode to 'idle'
     4c6:	83 b7       	in	r24, 0x33	; 51
     4c8:	81 7f       	andi	r24, 0xF1	; 241
     4ca:	83 bf       	out	0x33, r24	; 51
	while(1) sleep_mode();
     4cc:	83 b7       	in	r24, 0x33	; 51
     4ce:	81 60       	ori	r24, 0x01	; 1
     4d0:	83 bf       	out	0x33, r24	; 51
     4d2:	88 95       	sleep
     4d4:	83 b7       	in	r24, 0x33	; 51
     4d6:	8e 7f       	andi	r24, 0xFE	; 254
     4d8:	83 bf       	out	0x33, r24	; 51
     4da:	f8 cf       	rjmp	.-16     	; 0x4cc <main+0x3a>

000004dc <uart_init>:

//Init for UART
void uart_init(void) 
{
	//Set the baud rate's high & low registers
	UBRR0H = UBRRH_VALUE;
     4dc:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = UBRRL_VALUE;
     4e0:	80 e1       	ldi	r24, 0x10	; 16
     4e2:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	
	//Run this code if device is in 2x baud mode
	#if USE_2X
	UCSR0A |= _BV(U2X0);
     4e6:	e0 ec       	ldi	r30, 0xC0	; 192
     4e8:	f0 e0       	ldi	r31, 0x00	; 0
     4ea:	80 81       	ld	r24, Z
     4ec:	82 60       	ori	r24, 0x02	; 2
     4ee:	80 83       	st	Z, r24
	#else
	UCSR0A &= ~(_BV(U2X0));
	#endif

	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00); /* 8-bit data */
     4f0:	86 e0       	ldi	r24, 0x06	; 6
     4f2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
	UCSR0B = _BV(RXEN0) | _BV(TXEN0);   /* Enable RX and TX */
     4f6:	88 e1       	ldi	r24, 0x18	; 24
     4f8:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
     4fc:	08 95       	ret

000004fe <uart_putchar>:
}

//Send a character to the UART bus
void uart_putchar(char c, FILE *stream) 
{
     4fe:	cf 93       	push	r28
     500:	c8 2f       	mov	r28, r24
	if (c == '\n') {
     502:	8a 30       	cpi	r24, 0x0A	; 10
     504:	19 f4       	brne	.+6      	; 0x50c <uart_putchar+0xe>
		uart_putchar('\r', stream);
     506:	8d e0       	ldi	r24, 0x0D	; 13
     508:	0e 94 7f 02 	call	0x4fe	; 0x4fe <uart_putchar>
	}
	//Halt operation until the character has been sent
	loop_until_bit_is_set(UCSR0A, UDRE0);
     50c:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     510:	85 ff       	sbrs	r24, 5
     512:	fc cf       	rjmp	.-8      	; 0x50c <uart_putchar+0xe>
	UDR0 = c;
     514:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
     518:	cf 91       	pop	r28
     51a:	08 95       	ret

0000051c <uart_getchar>:

//Receive a character from the UART bus
char uart_getchar(FILE *stream) 
{
	//Halt operation until the buffer is free
	loop_until_bit_is_set(UCSR0A, RXC0);
     51c:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     520:	88 23       	and	r24, r24
     522:	e4 f7       	brge	.-8      	; 0x51c <uart_getchar>
	return UDR0;
     524:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
     528:	08 95       	ret

0000052a <malloc>:
     52a:	0f 93       	push	r16
     52c:	1f 93       	push	r17
     52e:	cf 93       	push	r28
     530:	df 93       	push	r29
     532:	82 30       	cpi	r24, 0x02	; 2
     534:	91 05       	cpc	r25, r1
     536:	10 f4       	brcc	.+4      	; 0x53c <malloc+0x12>
     538:	82 e0       	ldi	r24, 0x02	; 2
     53a:	90 e0       	ldi	r25, 0x00	; 0
     53c:	e0 91 c2 01 	lds	r30, 0x01C2	; 0x8001c2 <__flp>
     540:	f0 91 c3 01 	lds	r31, 0x01C3	; 0x8001c3 <__flp+0x1>
     544:	20 e0       	ldi	r18, 0x00	; 0
     546:	30 e0       	ldi	r19, 0x00	; 0
     548:	a0 e0       	ldi	r26, 0x00	; 0
     54a:	b0 e0       	ldi	r27, 0x00	; 0
     54c:	30 97       	sbiw	r30, 0x00	; 0
     54e:	19 f1       	breq	.+70     	; 0x596 <malloc+0x6c>
     550:	40 81       	ld	r20, Z
     552:	51 81       	ldd	r21, Z+1	; 0x01
     554:	02 81       	ldd	r16, Z+2	; 0x02
     556:	13 81       	ldd	r17, Z+3	; 0x03
     558:	48 17       	cp	r20, r24
     55a:	59 07       	cpc	r21, r25
     55c:	c8 f0       	brcs	.+50     	; 0x590 <malloc+0x66>
     55e:	84 17       	cp	r24, r20
     560:	95 07       	cpc	r25, r21
     562:	69 f4       	brne	.+26     	; 0x57e <malloc+0x54>
     564:	10 97       	sbiw	r26, 0x00	; 0
     566:	31 f0       	breq	.+12     	; 0x574 <malloc+0x4a>
     568:	12 96       	adiw	r26, 0x02	; 2
     56a:	0c 93       	st	X, r16
     56c:	12 97       	sbiw	r26, 0x02	; 2
     56e:	13 96       	adiw	r26, 0x03	; 3
     570:	1c 93       	st	X, r17
     572:	27 c0       	rjmp	.+78     	; 0x5c2 <malloc+0x98>
     574:	00 93 c2 01 	sts	0x01C2, r16	; 0x8001c2 <__flp>
     578:	10 93 c3 01 	sts	0x01C3, r17	; 0x8001c3 <__flp+0x1>
     57c:	22 c0       	rjmp	.+68     	; 0x5c2 <malloc+0x98>
     57e:	21 15       	cp	r18, r1
     580:	31 05       	cpc	r19, r1
     582:	19 f0       	breq	.+6      	; 0x58a <malloc+0x60>
     584:	42 17       	cp	r20, r18
     586:	53 07       	cpc	r21, r19
     588:	18 f4       	brcc	.+6      	; 0x590 <malloc+0x66>
     58a:	9a 01       	movw	r18, r20
     58c:	bd 01       	movw	r22, r26
     58e:	ef 01       	movw	r28, r30
     590:	df 01       	movw	r26, r30
     592:	f8 01       	movw	r30, r16
     594:	db cf       	rjmp	.-74     	; 0x54c <malloc+0x22>
     596:	21 15       	cp	r18, r1
     598:	31 05       	cpc	r19, r1
     59a:	f9 f0       	breq	.+62     	; 0x5da <malloc+0xb0>
     59c:	28 1b       	sub	r18, r24
     59e:	39 0b       	sbc	r19, r25
     5a0:	24 30       	cpi	r18, 0x04	; 4
     5a2:	31 05       	cpc	r19, r1
     5a4:	80 f4       	brcc	.+32     	; 0x5c6 <malloc+0x9c>
     5a6:	8a 81       	ldd	r24, Y+2	; 0x02
     5a8:	9b 81       	ldd	r25, Y+3	; 0x03
     5aa:	61 15       	cp	r22, r1
     5ac:	71 05       	cpc	r23, r1
     5ae:	21 f0       	breq	.+8      	; 0x5b8 <malloc+0x8e>
     5b0:	fb 01       	movw	r30, r22
     5b2:	93 83       	std	Z+3, r25	; 0x03
     5b4:	82 83       	std	Z+2, r24	; 0x02
     5b6:	04 c0       	rjmp	.+8      	; 0x5c0 <malloc+0x96>
     5b8:	90 93 c3 01 	sts	0x01C3, r25	; 0x8001c3 <__flp+0x1>
     5bc:	80 93 c2 01 	sts	0x01C2, r24	; 0x8001c2 <__flp>
     5c0:	fe 01       	movw	r30, r28
     5c2:	32 96       	adiw	r30, 0x02	; 2
     5c4:	44 c0       	rjmp	.+136    	; 0x64e <malloc+0x124>
     5c6:	fe 01       	movw	r30, r28
     5c8:	e2 0f       	add	r30, r18
     5ca:	f3 1f       	adc	r31, r19
     5cc:	81 93       	st	Z+, r24
     5ce:	91 93       	st	Z+, r25
     5d0:	22 50       	subi	r18, 0x02	; 2
     5d2:	31 09       	sbc	r19, r1
     5d4:	39 83       	std	Y+1, r19	; 0x01
     5d6:	28 83       	st	Y, r18
     5d8:	3a c0       	rjmp	.+116    	; 0x64e <malloc+0x124>
     5da:	20 91 c0 01 	lds	r18, 0x01C0	; 0x8001c0 <__brkval>
     5de:	30 91 c1 01 	lds	r19, 0x01C1	; 0x8001c1 <__brkval+0x1>
     5e2:	23 2b       	or	r18, r19
     5e4:	41 f4       	brne	.+16     	; 0x5f6 <malloc+0xcc>
     5e6:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
     5ea:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
     5ee:	30 93 c1 01 	sts	0x01C1, r19	; 0x8001c1 <__brkval+0x1>
     5f2:	20 93 c0 01 	sts	0x01C0, r18	; 0x8001c0 <__brkval>
     5f6:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     5fa:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     5fe:	21 15       	cp	r18, r1
     600:	31 05       	cpc	r19, r1
     602:	41 f4       	brne	.+16     	; 0x614 <malloc+0xea>
     604:	2d b7       	in	r18, 0x3d	; 61
     606:	3e b7       	in	r19, 0x3e	; 62
     608:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
     60c:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
     610:	24 1b       	sub	r18, r20
     612:	35 0b       	sbc	r19, r21
     614:	e0 91 c0 01 	lds	r30, 0x01C0	; 0x8001c0 <__brkval>
     618:	f0 91 c1 01 	lds	r31, 0x01C1	; 0x8001c1 <__brkval+0x1>
     61c:	e2 17       	cp	r30, r18
     61e:	f3 07       	cpc	r31, r19
     620:	a0 f4       	brcc	.+40     	; 0x64a <malloc+0x120>
     622:	2e 1b       	sub	r18, r30
     624:	3f 0b       	sbc	r19, r31
     626:	28 17       	cp	r18, r24
     628:	39 07       	cpc	r19, r25
     62a:	78 f0       	brcs	.+30     	; 0x64a <malloc+0x120>
     62c:	ac 01       	movw	r20, r24
     62e:	4e 5f       	subi	r20, 0xFE	; 254
     630:	5f 4f       	sbci	r21, 0xFF	; 255
     632:	24 17       	cp	r18, r20
     634:	35 07       	cpc	r19, r21
     636:	48 f0       	brcs	.+18     	; 0x64a <malloc+0x120>
     638:	4e 0f       	add	r20, r30
     63a:	5f 1f       	adc	r21, r31
     63c:	50 93 c1 01 	sts	0x01C1, r21	; 0x8001c1 <__brkval+0x1>
     640:	40 93 c0 01 	sts	0x01C0, r20	; 0x8001c0 <__brkval>
     644:	81 93       	st	Z+, r24
     646:	91 93       	st	Z+, r25
     648:	02 c0       	rjmp	.+4      	; 0x64e <malloc+0x124>
     64a:	e0 e0       	ldi	r30, 0x00	; 0
     64c:	f0 e0       	ldi	r31, 0x00	; 0
     64e:	cf 01       	movw	r24, r30
     650:	df 91       	pop	r29
     652:	cf 91       	pop	r28
     654:	1f 91       	pop	r17
     656:	0f 91       	pop	r16
     658:	08 95       	ret

0000065a <free>:
     65a:	cf 93       	push	r28
     65c:	df 93       	push	r29
     65e:	00 97       	sbiw	r24, 0x00	; 0
     660:	09 f4       	brne	.+2      	; 0x664 <free+0xa>
     662:	81 c0       	rjmp	.+258    	; 0x766 <free+0x10c>
     664:	fc 01       	movw	r30, r24
     666:	32 97       	sbiw	r30, 0x02	; 2
     668:	13 82       	std	Z+3, r1	; 0x03
     66a:	12 82       	std	Z+2, r1	; 0x02
     66c:	a0 91 c2 01 	lds	r26, 0x01C2	; 0x8001c2 <__flp>
     670:	b0 91 c3 01 	lds	r27, 0x01C3	; 0x8001c3 <__flp+0x1>
     674:	10 97       	sbiw	r26, 0x00	; 0
     676:	81 f4       	brne	.+32     	; 0x698 <free+0x3e>
     678:	20 81       	ld	r18, Z
     67a:	31 81       	ldd	r19, Z+1	; 0x01
     67c:	82 0f       	add	r24, r18
     67e:	93 1f       	adc	r25, r19
     680:	20 91 c0 01 	lds	r18, 0x01C0	; 0x8001c0 <__brkval>
     684:	30 91 c1 01 	lds	r19, 0x01C1	; 0x8001c1 <__brkval+0x1>
     688:	28 17       	cp	r18, r24
     68a:	39 07       	cpc	r19, r25
     68c:	51 f5       	brne	.+84     	; 0x6e2 <free+0x88>
     68e:	f0 93 c1 01 	sts	0x01C1, r31	; 0x8001c1 <__brkval+0x1>
     692:	e0 93 c0 01 	sts	0x01C0, r30	; 0x8001c0 <__brkval>
     696:	67 c0       	rjmp	.+206    	; 0x766 <free+0x10c>
     698:	ed 01       	movw	r28, r26
     69a:	20 e0       	ldi	r18, 0x00	; 0
     69c:	30 e0       	ldi	r19, 0x00	; 0
     69e:	ce 17       	cp	r28, r30
     6a0:	df 07       	cpc	r29, r31
     6a2:	40 f4       	brcc	.+16     	; 0x6b4 <free+0x5a>
     6a4:	4a 81       	ldd	r20, Y+2	; 0x02
     6a6:	5b 81       	ldd	r21, Y+3	; 0x03
     6a8:	9e 01       	movw	r18, r28
     6aa:	41 15       	cp	r20, r1
     6ac:	51 05       	cpc	r21, r1
     6ae:	f1 f0       	breq	.+60     	; 0x6ec <free+0x92>
     6b0:	ea 01       	movw	r28, r20
     6b2:	f5 cf       	rjmp	.-22     	; 0x69e <free+0x44>
     6b4:	d3 83       	std	Z+3, r29	; 0x03
     6b6:	c2 83       	std	Z+2, r28	; 0x02
     6b8:	40 81       	ld	r20, Z
     6ba:	51 81       	ldd	r21, Z+1	; 0x01
     6bc:	84 0f       	add	r24, r20
     6be:	95 1f       	adc	r25, r21
     6c0:	c8 17       	cp	r28, r24
     6c2:	d9 07       	cpc	r29, r25
     6c4:	59 f4       	brne	.+22     	; 0x6dc <free+0x82>
     6c6:	88 81       	ld	r24, Y
     6c8:	99 81       	ldd	r25, Y+1	; 0x01
     6ca:	84 0f       	add	r24, r20
     6cc:	95 1f       	adc	r25, r21
     6ce:	02 96       	adiw	r24, 0x02	; 2
     6d0:	91 83       	std	Z+1, r25	; 0x01
     6d2:	80 83       	st	Z, r24
     6d4:	8a 81       	ldd	r24, Y+2	; 0x02
     6d6:	9b 81       	ldd	r25, Y+3	; 0x03
     6d8:	93 83       	std	Z+3, r25	; 0x03
     6da:	82 83       	std	Z+2, r24	; 0x02
     6dc:	21 15       	cp	r18, r1
     6de:	31 05       	cpc	r19, r1
     6e0:	29 f4       	brne	.+10     	; 0x6ec <free+0x92>
     6e2:	f0 93 c3 01 	sts	0x01C3, r31	; 0x8001c3 <__flp+0x1>
     6e6:	e0 93 c2 01 	sts	0x01C2, r30	; 0x8001c2 <__flp>
     6ea:	3d c0       	rjmp	.+122    	; 0x766 <free+0x10c>
     6ec:	e9 01       	movw	r28, r18
     6ee:	fb 83       	std	Y+3, r31	; 0x03
     6f0:	ea 83       	std	Y+2, r30	; 0x02
     6f2:	49 91       	ld	r20, Y+
     6f4:	59 91       	ld	r21, Y+
     6f6:	c4 0f       	add	r28, r20
     6f8:	d5 1f       	adc	r29, r21
     6fa:	ec 17       	cp	r30, r28
     6fc:	fd 07       	cpc	r31, r29
     6fe:	61 f4       	brne	.+24     	; 0x718 <free+0xbe>
     700:	80 81       	ld	r24, Z
     702:	91 81       	ldd	r25, Z+1	; 0x01
     704:	84 0f       	add	r24, r20
     706:	95 1f       	adc	r25, r21
     708:	02 96       	adiw	r24, 0x02	; 2
     70a:	e9 01       	movw	r28, r18
     70c:	99 83       	std	Y+1, r25	; 0x01
     70e:	88 83       	st	Y, r24
     710:	82 81       	ldd	r24, Z+2	; 0x02
     712:	93 81       	ldd	r25, Z+3	; 0x03
     714:	9b 83       	std	Y+3, r25	; 0x03
     716:	8a 83       	std	Y+2, r24	; 0x02
     718:	e0 e0       	ldi	r30, 0x00	; 0
     71a:	f0 e0       	ldi	r31, 0x00	; 0
     71c:	12 96       	adiw	r26, 0x02	; 2
     71e:	8d 91       	ld	r24, X+
     720:	9c 91       	ld	r25, X
     722:	13 97       	sbiw	r26, 0x03	; 3
     724:	00 97       	sbiw	r24, 0x00	; 0
     726:	19 f0       	breq	.+6      	; 0x72e <free+0xd4>
     728:	fd 01       	movw	r30, r26
     72a:	dc 01       	movw	r26, r24
     72c:	f7 cf       	rjmp	.-18     	; 0x71c <free+0xc2>
     72e:	8d 91       	ld	r24, X+
     730:	9c 91       	ld	r25, X
     732:	11 97       	sbiw	r26, 0x01	; 1
     734:	9d 01       	movw	r18, r26
     736:	2e 5f       	subi	r18, 0xFE	; 254
     738:	3f 4f       	sbci	r19, 0xFF	; 255
     73a:	82 0f       	add	r24, r18
     73c:	93 1f       	adc	r25, r19
     73e:	20 91 c0 01 	lds	r18, 0x01C0	; 0x8001c0 <__brkval>
     742:	30 91 c1 01 	lds	r19, 0x01C1	; 0x8001c1 <__brkval+0x1>
     746:	28 17       	cp	r18, r24
     748:	39 07       	cpc	r19, r25
     74a:	69 f4       	brne	.+26     	; 0x766 <free+0x10c>
     74c:	30 97       	sbiw	r30, 0x00	; 0
     74e:	29 f4       	brne	.+10     	; 0x75a <free+0x100>
     750:	10 92 c3 01 	sts	0x01C3, r1	; 0x8001c3 <__flp+0x1>
     754:	10 92 c2 01 	sts	0x01C2, r1	; 0x8001c2 <__flp>
     758:	02 c0       	rjmp	.+4      	; 0x75e <free+0x104>
     75a:	13 82       	std	Z+3, r1	; 0x03
     75c:	12 82       	std	Z+2, r1	; 0x02
     75e:	b0 93 c1 01 	sts	0x01C1, r27	; 0x8001c1 <__brkval+0x1>
     762:	a0 93 c0 01 	sts	0x01C0, r26	; 0x8001c0 <__brkval>
     766:	df 91       	pop	r29
     768:	cf 91       	pop	r28
     76a:	08 95       	ret

0000076c <strcpy>:
     76c:	fb 01       	movw	r30, r22
     76e:	dc 01       	movw	r26, r24
     770:	01 90       	ld	r0, Z+
     772:	0d 92       	st	X+, r0
     774:	00 20       	and	r0, r0
     776:	e1 f7       	brne	.-8      	; 0x770 <strcpy+0x4>
     778:	08 95       	ret

0000077a <strstr>:
     77a:	fb 01       	movw	r30, r22
     77c:	51 91       	ld	r21, Z+
     77e:	55 23       	and	r21, r21
     780:	a9 f0       	breq	.+42     	; 0x7ac <strstr+0x32>
     782:	bf 01       	movw	r22, r30
     784:	dc 01       	movw	r26, r24
     786:	4d 91       	ld	r20, X+
     788:	45 17       	cp	r20, r21
     78a:	41 11       	cpse	r20, r1
     78c:	e1 f7       	brne	.-8      	; 0x786 <strstr+0xc>
     78e:	59 f4       	brne	.+22     	; 0x7a6 <strstr+0x2c>
     790:	cd 01       	movw	r24, r26
     792:	01 90       	ld	r0, Z+
     794:	00 20       	and	r0, r0
     796:	49 f0       	breq	.+18     	; 0x7aa <strstr+0x30>
     798:	4d 91       	ld	r20, X+
     79a:	40 15       	cp	r20, r0
     79c:	41 11       	cpse	r20, r1
     79e:	c9 f3       	breq	.-14     	; 0x792 <strstr+0x18>
     7a0:	fb 01       	movw	r30, r22
     7a2:	41 11       	cpse	r20, r1
     7a4:	ef cf       	rjmp	.-34     	; 0x784 <strstr+0xa>
     7a6:	81 e0       	ldi	r24, 0x01	; 1
     7a8:	90 e0       	ldi	r25, 0x00	; 0
     7aa:	01 97       	sbiw	r24, 0x01	; 1
     7ac:	08 95       	ret

000007ae <puts>:
     7ae:	0f 93       	push	r16
     7b0:	1f 93       	push	r17
     7b2:	cf 93       	push	r28
     7b4:	df 93       	push	r29
     7b6:	e0 91 c6 01 	lds	r30, 0x01C6	; 0x8001c6 <__iob+0x2>
     7ba:	f0 91 c7 01 	lds	r31, 0x01C7	; 0x8001c7 <__iob+0x3>
     7be:	23 81       	ldd	r18, Z+3	; 0x03
     7c0:	21 ff       	sbrs	r18, 1
     7c2:	1b c0       	rjmp	.+54     	; 0x7fa <puts+0x4c>
     7c4:	8c 01       	movw	r16, r24
     7c6:	d0 e0       	ldi	r29, 0x00	; 0
     7c8:	c0 e0       	ldi	r28, 0x00	; 0
     7ca:	f8 01       	movw	r30, r16
     7cc:	81 91       	ld	r24, Z+
     7ce:	8f 01       	movw	r16, r30
     7d0:	60 91 c6 01 	lds	r22, 0x01C6	; 0x8001c6 <__iob+0x2>
     7d4:	70 91 c7 01 	lds	r23, 0x01C7	; 0x8001c7 <__iob+0x3>
     7d8:	db 01       	movw	r26, r22
     7da:	18 96       	adiw	r26, 0x08	; 8
     7dc:	ed 91       	ld	r30, X+
     7de:	fc 91       	ld	r31, X
     7e0:	19 97       	sbiw	r26, 0x09	; 9
     7e2:	88 23       	and	r24, r24
     7e4:	31 f0       	breq	.+12     	; 0x7f2 <puts+0x44>
     7e6:	09 95       	icall
     7e8:	89 2b       	or	r24, r25
     7ea:	79 f3       	breq	.-34     	; 0x7ca <puts+0x1c>
     7ec:	df ef       	ldi	r29, 0xFF	; 255
     7ee:	cf ef       	ldi	r28, 0xFF	; 255
     7f0:	ec cf       	rjmp	.-40     	; 0x7ca <puts+0x1c>
     7f2:	8a e0       	ldi	r24, 0x0A	; 10
     7f4:	09 95       	icall
     7f6:	89 2b       	or	r24, r25
     7f8:	19 f0       	breq	.+6      	; 0x800 <__DATA_REGION_LENGTH__>
     7fa:	8f ef       	ldi	r24, 0xFF	; 255
     7fc:	9f ef       	ldi	r25, 0xFF	; 255
     7fe:	02 c0       	rjmp	.+4      	; 0x804 <__DATA_REGION_LENGTH__+0x4>
     800:	8d 2f       	mov	r24, r29
     802:	9c 2f       	mov	r25, r28
     804:	df 91       	pop	r29
     806:	cf 91       	pop	r28
     808:	1f 91       	pop	r17
     80a:	0f 91       	pop	r16
     80c:	08 95       	ret

0000080e <scanf>:
     80e:	a0 e0       	ldi	r26, 0x00	; 0
     810:	b0 e0       	ldi	r27, 0x00	; 0
     812:	ed e0       	ldi	r30, 0x0D	; 13
     814:	f4 e0       	ldi	r31, 0x04	; 4
     816:	0c 94 fb 09 	jmp	0x13f6	; 0x13f6 <__prologue_saves__+0x20>
     81a:	ae 01       	movw	r20, r28
     81c:	4b 5f       	subi	r20, 0xFB	; 251
     81e:	5f 4f       	sbci	r21, 0xFF	; 255
     820:	fa 01       	movw	r30, r20
     822:	61 91       	ld	r22, Z+
     824:	71 91       	ld	r23, Z+
     826:	af 01       	movw	r20, r30
     828:	80 91 c4 01 	lds	r24, 0x01C4	; 0x8001c4 <__iob>
     82c:	90 91 c5 01 	lds	r25, 0x01C5	; 0x8001c5 <__iob+0x1>
     830:	0e 94 bc 07 	call	0xf78	; 0xf78 <vfscanf>
     834:	e2 e0       	ldi	r30, 0x02	; 2
     836:	0c 94 17 0a 	jmp	0x142e	; 0x142e <__epilogue_restores__+0x20>

0000083a <sprintf>:
     83a:	ae e0       	ldi	r26, 0x0E	; 14
     83c:	b0 e0       	ldi	r27, 0x00	; 0
     83e:	e3 e2       	ldi	r30, 0x23	; 35
     840:	f4 e0       	ldi	r31, 0x04	; 4
     842:	0c 94 f9 09 	jmp	0x13f2	; 0x13f2 <__prologue_saves__+0x1c>
     846:	0d 89       	ldd	r16, Y+21	; 0x15
     848:	1e 89       	ldd	r17, Y+22	; 0x16
     84a:	86 e0       	ldi	r24, 0x06	; 6
     84c:	8c 83       	std	Y+4, r24	; 0x04
     84e:	1a 83       	std	Y+2, r17	; 0x02
     850:	09 83       	std	Y+1, r16	; 0x01
     852:	8f ef       	ldi	r24, 0xFF	; 255
     854:	9f e7       	ldi	r25, 0x7F	; 127
     856:	9e 83       	std	Y+6, r25	; 0x06
     858:	8d 83       	std	Y+5, r24	; 0x05
     85a:	ae 01       	movw	r20, r28
     85c:	47 5e       	subi	r20, 0xE7	; 231
     85e:	5f 4f       	sbci	r21, 0xFF	; 255
     860:	6f 89       	ldd	r22, Y+23	; 0x17
     862:	78 8d       	ldd	r23, Y+24	; 0x18
     864:	ce 01       	movw	r24, r28
     866:	01 96       	adiw	r24, 0x01	; 1
     868:	0e 94 3f 04 	call	0x87e	; 0x87e <vfprintf>
     86c:	ef 81       	ldd	r30, Y+7	; 0x07
     86e:	f8 85       	ldd	r31, Y+8	; 0x08
     870:	e0 0f       	add	r30, r16
     872:	f1 1f       	adc	r31, r17
     874:	10 82       	st	Z, r1
     876:	2e 96       	adiw	r28, 0x0e	; 14
     878:	e4 e0       	ldi	r30, 0x04	; 4
     87a:	0c 94 15 0a 	jmp	0x142a	; 0x142a <__epilogue_restores__+0x1c>

0000087e <vfprintf>:
     87e:	ab e0       	ldi	r26, 0x0B	; 11
     880:	b0 e0       	ldi	r27, 0x00	; 0
     882:	e5 e4       	ldi	r30, 0x45	; 69
     884:	f4 e0       	ldi	r31, 0x04	; 4
     886:	0c 94 eb 09 	jmp	0x13d6	; 0x13d6 <__prologue_saves__>
     88a:	6c 01       	movw	r12, r24
     88c:	7b 01       	movw	r14, r22
     88e:	8a 01       	movw	r16, r20
     890:	fc 01       	movw	r30, r24
     892:	17 82       	std	Z+7, r1	; 0x07
     894:	16 82       	std	Z+6, r1	; 0x06
     896:	83 81       	ldd	r24, Z+3	; 0x03
     898:	81 ff       	sbrs	r24, 1
     89a:	cc c1       	rjmp	.+920    	; 0xc34 <__stack+0x335>
     89c:	ce 01       	movw	r24, r28
     89e:	01 96       	adiw	r24, 0x01	; 1
     8a0:	3c 01       	movw	r6, r24
     8a2:	f6 01       	movw	r30, r12
     8a4:	93 81       	ldd	r25, Z+3	; 0x03
     8a6:	f7 01       	movw	r30, r14
     8a8:	93 fd       	sbrc	r25, 3
     8aa:	85 91       	lpm	r24, Z+
     8ac:	93 ff       	sbrs	r25, 3
     8ae:	81 91       	ld	r24, Z+
     8b0:	7f 01       	movw	r14, r30
     8b2:	88 23       	and	r24, r24
     8b4:	09 f4       	brne	.+2      	; 0x8b8 <vfprintf+0x3a>
     8b6:	ba c1       	rjmp	.+884    	; 0xc2c <__stack+0x32d>
     8b8:	85 32       	cpi	r24, 0x25	; 37
     8ba:	39 f4       	brne	.+14     	; 0x8ca <vfprintf+0x4c>
     8bc:	93 fd       	sbrc	r25, 3
     8be:	85 91       	lpm	r24, Z+
     8c0:	93 ff       	sbrs	r25, 3
     8c2:	81 91       	ld	r24, Z+
     8c4:	7f 01       	movw	r14, r30
     8c6:	85 32       	cpi	r24, 0x25	; 37
     8c8:	29 f4       	brne	.+10     	; 0x8d4 <vfprintf+0x56>
     8ca:	b6 01       	movw	r22, r12
     8cc:	90 e0       	ldi	r25, 0x00	; 0
     8ce:	0e 94 35 09 	call	0x126a	; 0x126a <fputc>
     8d2:	e7 cf       	rjmp	.-50     	; 0x8a2 <vfprintf+0x24>
     8d4:	91 2c       	mov	r9, r1
     8d6:	21 2c       	mov	r2, r1
     8d8:	31 2c       	mov	r3, r1
     8da:	ff e1       	ldi	r31, 0x1F	; 31
     8dc:	f3 15       	cp	r31, r3
     8de:	d8 f0       	brcs	.+54     	; 0x916 <__stack+0x17>
     8e0:	8b 32       	cpi	r24, 0x2B	; 43
     8e2:	79 f0       	breq	.+30     	; 0x902 <__stack+0x3>
     8e4:	38 f4       	brcc	.+14     	; 0x8f4 <vfprintf+0x76>
     8e6:	80 32       	cpi	r24, 0x20	; 32
     8e8:	79 f0       	breq	.+30     	; 0x908 <__stack+0x9>
     8ea:	83 32       	cpi	r24, 0x23	; 35
     8ec:	a1 f4       	brne	.+40     	; 0x916 <__stack+0x17>
     8ee:	23 2d       	mov	r18, r3
     8f0:	20 61       	ori	r18, 0x10	; 16
     8f2:	1d c0       	rjmp	.+58     	; 0x92e <__stack+0x2f>
     8f4:	8d 32       	cpi	r24, 0x2D	; 45
     8f6:	61 f0       	breq	.+24     	; 0x910 <__stack+0x11>
     8f8:	80 33       	cpi	r24, 0x30	; 48
     8fa:	69 f4       	brne	.+26     	; 0x916 <__stack+0x17>
     8fc:	23 2d       	mov	r18, r3
     8fe:	21 60       	ori	r18, 0x01	; 1
     900:	16 c0       	rjmp	.+44     	; 0x92e <__stack+0x2f>
     902:	83 2d       	mov	r24, r3
     904:	82 60       	ori	r24, 0x02	; 2
     906:	38 2e       	mov	r3, r24
     908:	e3 2d       	mov	r30, r3
     90a:	e4 60       	ori	r30, 0x04	; 4
     90c:	3e 2e       	mov	r3, r30
     90e:	2a c0       	rjmp	.+84     	; 0x964 <__stack+0x65>
     910:	f3 2d       	mov	r31, r3
     912:	f8 60       	ori	r31, 0x08	; 8
     914:	1d c0       	rjmp	.+58     	; 0x950 <__stack+0x51>
     916:	37 fc       	sbrc	r3, 7
     918:	2d c0       	rjmp	.+90     	; 0x974 <__stack+0x75>
     91a:	20 ed       	ldi	r18, 0xD0	; 208
     91c:	28 0f       	add	r18, r24
     91e:	2a 30       	cpi	r18, 0x0A	; 10
     920:	40 f0       	brcs	.+16     	; 0x932 <__stack+0x33>
     922:	8e 32       	cpi	r24, 0x2E	; 46
     924:	b9 f4       	brne	.+46     	; 0x954 <__stack+0x55>
     926:	36 fc       	sbrc	r3, 6
     928:	81 c1       	rjmp	.+770    	; 0xc2c <__stack+0x32d>
     92a:	23 2d       	mov	r18, r3
     92c:	20 64       	ori	r18, 0x40	; 64
     92e:	32 2e       	mov	r3, r18
     930:	19 c0       	rjmp	.+50     	; 0x964 <__stack+0x65>
     932:	36 fe       	sbrs	r3, 6
     934:	06 c0       	rjmp	.+12     	; 0x942 <__stack+0x43>
     936:	8a e0       	ldi	r24, 0x0A	; 10
     938:	98 9e       	mul	r9, r24
     93a:	20 0d       	add	r18, r0
     93c:	11 24       	eor	r1, r1
     93e:	92 2e       	mov	r9, r18
     940:	11 c0       	rjmp	.+34     	; 0x964 <__stack+0x65>
     942:	ea e0       	ldi	r30, 0x0A	; 10
     944:	2e 9e       	mul	r2, r30
     946:	20 0d       	add	r18, r0
     948:	11 24       	eor	r1, r1
     94a:	22 2e       	mov	r2, r18
     94c:	f3 2d       	mov	r31, r3
     94e:	f0 62       	ori	r31, 0x20	; 32
     950:	3f 2e       	mov	r3, r31
     952:	08 c0       	rjmp	.+16     	; 0x964 <__stack+0x65>
     954:	8c 36       	cpi	r24, 0x6C	; 108
     956:	21 f4       	brne	.+8      	; 0x960 <__stack+0x61>
     958:	83 2d       	mov	r24, r3
     95a:	80 68       	ori	r24, 0x80	; 128
     95c:	38 2e       	mov	r3, r24
     95e:	02 c0       	rjmp	.+4      	; 0x964 <__stack+0x65>
     960:	88 36       	cpi	r24, 0x68	; 104
     962:	41 f4       	brne	.+16     	; 0x974 <__stack+0x75>
     964:	f7 01       	movw	r30, r14
     966:	93 fd       	sbrc	r25, 3
     968:	85 91       	lpm	r24, Z+
     96a:	93 ff       	sbrs	r25, 3
     96c:	81 91       	ld	r24, Z+
     96e:	7f 01       	movw	r14, r30
     970:	81 11       	cpse	r24, r1
     972:	b3 cf       	rjmp	.-154    	; 0x8da <vfprintf+0x5c>
     974:	98 2f       	mov	r25, r24
     976:	9f 7d       	andi	r25, 0xDF	; 223
     978:	95 54       	subi	r25, 0x45	; 69
     97a:	93 30       	cpi	r25, 0x03	; 3
     97c:	28 f4       	brcc	.+10     	; 0x988 <__stack+0x89>
     97e:	0c 5f       	subi	r16, 0xFC	; 252
     980:	1f 4f       	sbci	r17, 0xFF	; 255
     982:	9f e3       	ldi	r25, 0x3F	; 63
     984:	99 83       	std	Y+1, r25	; 0x01
     986:	0d c0       	rjmp	.+26     	; 0x9a2 <__stack+0xa3>
     988:	83 36       	cpi	r24, 0x63	; 99
     98a:	31 f0       	breq	.+12     	; 0x998 <__stack+0x99>
     98c:	83 37       	cpi	r24, 0x73	; 115
     98e:	71 f0       	breq	.+28     	; 0x9ac <__stack+0xad>
     990:	83 35       	cpi	r24, 0x53	; 83
     992:	09 f0       	breq	.+2      	; 0x996 <__stack+0x97>
     994:	59 c0       	rjmp	.+178    	; 0xa48 <__stack+0x149>
     996:	21 c0       	rjmp	.+66     	; 0x9da <__stack+0xdb>
     998:	f8 01       	movw	r30, r16
     99a:	80 81       	ld	r24, Z
     99c:	89 83       	std	Y+1, r24	; 0x01
     99e:	0e 5f       	subi	r16, 0xFE	; 254
     9a0:	1f 4f       	sbci	r17, 0xFF	; 255
     9a2:	88 24       	eor	r8, r8
     9a4:	83 94       	inc	r8
     9a6:	91 2c       	mov	r9, r1
     9a8:	53 01       	movw	r10, r6
     9aa:	13 c0       	rjmp	.+38     	; 0x9d2 <__stack+0xd3>
     9ac:	28 01       	movw	r4, r16
     9ae:	f2 e0       	ldi	r31, 0x02	; 2
     9b0:	4f 0e       	add	r4, r31
     9b2:	51 1c       	adc	r5, r1
     9b4:	f8 01       	movw	r30, r16
     9b6:	a0 80       	ld	r10, Z
     9b8:	b1 80       	ldd	r11, Z+1	; 0x01
     9ba:	36 fe       	sbrs	r3, 6
     9bc:	03 c0       	rjmp	.+6      	; 0x9c4 <__stack+0xc5>
     9be:	69 2d       	mov	r22, r9
     9c0:	70 e0       	ldi	r23, 0x00	; 0
     9c2:	02 c0       	rjmp	.+4      	; 0x9c8 <__stack+0xc9>
     9c4:	6f ef       	ldi	r22, 0xFF	; 255
     9c6:	7f ef       	ldi	r23, 0xFF	; 255
     9c8:	c5 01       	movw	r24, r10
     9ca:	0e 94 ec 08 	call	0x11d8	; 0x11d8 <strnlen>
     9ce:	4c 01       	movw	r8, r24
     9d0:	82 01       	movw	r16, r4
     9d2:	f3 2d       	mov	r31, r3
     9d4:	ff 77       	andi	r31, 0x7F	; 127
     9d6:	3f 2e       	mov	r3, r31
     9d8:	16 c0       	rjmp	.+44     	; 0xa06 <__stack+0x107>
     9da:	28 01       	movw	r4, r16
     9dc:	22 e0       	ldi	r18, 0x02	; 2
     9de:	42 0e       	add	r4, r18
     9e0:	51 1c       	adc	r5, r1
     9e2:	f8 01       	movw	r30, r16
     9e4:	a0 80       	ld	r10, Z
     9e6:	b1 80       	ldd	r11, Z+1	; 0x01
     9e8:	36 fe       	sbrs	r3, 6
     9ea:	03 c0       	rjmp	.+6      	; 0x9f2 <__stack+0xf3>
     9ec:	69 2d       	mov	r22, r9
     9ee:	70 e0       	ldi	r23, 0x00	; 0
     9f0:	02 c0       	rjmp	.+4      	; 0x9f6 <__stack+0xf7>
     9f2:	6f ef       	ldi	r22, 0xFF	; 255
     9f4:	7f ef       	ldi	r23, 0xFF	; 255
     9f6:	c5 01       	movw	r24, r10
     9f8:	0e 94 e1 08 	call	0x11c2	; 0x11c2 <strnlen_P>
     9fc:	4c 01       	movw	r8, r24
     9fe:	f3 2d       	mov	r31, r3
     a00:	f0 68       	ori	r31, 0x80	; 128
     a02:	3f 2e       	mov	r3, r31
     a04:	82 01       	movw	r16, r4
     a06:	33 fc       	sbrc	r3, 3
     a08:	1b c0       	rjmp	.+54     	; 0xa40 <__stack+0x141>
     a0a:	82 2d       	mov	r24, r2
     a0c:	90 e0       	ldi	r25, 0x00	; 0
     a0e:	88 16       	cp	r8, r24
     a10:	99 06       	cpc	r9, r25
     a12:	b0 f4       	brcc	.+44     	; 0xa40 <__stack+0x141>
     a14:	b6 01       	movw	r22, r12
     a16:	80 e2       	ldi	r24, 0x20	; 32
     a18:	90 e0       	ldi	r25, 0x00	; 0
     a1a:	0e 94 35 09 	call	0x126a	; 0x126a <fputc>
     a1e:	2a 94       	dec	r2
     a20:	f4 cf       	rjmp	.-24     	; 0xa0a <__stack+0x10b>
     a22:	f5 01       	movw	r30, r10
     a24:	37 fc       	sbrc	r3, 7
     a26:	85 91       	lpm	r24, Z+
     a28:	37 fe       	sbrs	r3, 7
     a2a:	81 91       	ld	r24, Z+
     a2c:	5f 01       	movw	r10, r30
     a2e:	b6 01       	movw	r22, r12
     a30:	90 e0       	ldi	r25, 0x00	; 0
     a32:	0e 94 35 09 	call	0x126a	; 0x126a <fputc>
     a36:	21 10       	cpse	r2, r1
     a38:	2a 94       	dec	r2
     a3a:	21 e0       	ldi	r18, 0x01	; 1
     a3c:	82 1a       	sub	r8, r18
     a3e:	91 08       	sbc	r9, r1
     a40:	81 14       	cp	r8, r1
     a42:	91 04       	cpc	r9, r1
     a44:	71 f7       	brne	.-36     	; 0xa22 <__stack+0x123>
     a46:	e8 c0       	rjmp	.+464    	; 0xc18 <__stack+0x319>
     a48:	84 36       	cpi	r24, 0x64	; 100
     a4a:	11 f0       	breq	.+4      	; 0xa50 <__stack+0x151>
     a4c:	89 36       	cpi	r24, 0x69	; 105
     a4e:	41 f5       	brne	.+80     	; 0xaa0 <__stack+0x1a1>
     a50:	f8 01       	movw	r30, r16
     a52:	37 fe       	sbrs	r3, 7
     a54:	07 c0       	rjmp	.+14     	; 0xa64 <__stack+0x165>
     a56:	60 81       	ld	r22, Z
     a58:	71 81       	ldd	r23, Z+1	; 0x01
     a5a:	82 81       	ldd	r24, Z+2	; 0x02
     a5c:	93 81       	ldd	r25, Z+3	; 0x03
     a5e:	0c 5f       	subi	r16, 0xFC	; 252
     a60:	1f 4f       	sbci	r17, 0xFF	; 255
     a62:	08 c0       	rjmp	.+16     	; 0xa74 <__stack+0x175>
     a64:	60 81       	ld	r22, Z
     a66:	71 81       	ldd	r23, Z+1	; 0x01
     a68:	07 2e       	mov	r0, r23
     a6a:	00 0c       	add	r0, r0
     a6c:	88 0b       	sbc	r24, r24
     a6e:	99 0b       	sbc	r25, r25
     a70:	0e 5f       	subi	r16, 0xFE	; 254
     a72:	1f 4f       	sbci	r17, 0xFF	; 255
     a74:	f3 2d       	mov	r31, r3
     a76:	ff 76       	andi	r31, 0x6F	; 111
     a78:	3f 2e       	mov	r3, r31
     a7a:	97 ff       	sbrs	r25, 7
     a7c:	09 c0       	rjmp	.+18     	; 0xa90 <__stack+0x191>
     a7e:	90 95       	com	r25
     a80:	80 95       	com	r24
     a82:	70 95       	com	r23
     a84:	61 95       	neg	r22
     a86:	7f 4f       	sbci	r23, 0xFF	; 255
     a88:	8f 4f       	sbci	r24, 0xFF	; 255
     a8a:	9f 4f       	sbci	r25, 0xFF	; 255
     a8c:	f0 68       	ori	r31, 0x80	; 128
     a8e:	3f 2e       	mov	r3, r31
     a90:	2a e0       	ldi	r18, 0x0A	; 10
     a92:	30 e0       	ldi	r19, 0x00	; 0
     a94:	a3 01       	movw	r20, r6
     a96:	0e 94 8a 09 	call	0x1314	; 0x1314 <__ultoa_invert>
     a9a:	88 2e       	mov	r8, r24
     a9c:	86 18       	sub	r8, r6
     a9e:	45 c0       	rjmp	.+138    	; 0xb2a <__stack+0x22b>
     aa0:	85 37       	cpi	r24, 0x75	; 117
     aa2:	31 f4       	brne	.+12     	; 0xab0 <__stack+0x1b1>
     aa4:	23 2d       	mov	r18, r3
     aa6:	2f 7e       	andi	r18, 0xEF	; 239
     aa8:	b2 2e       	mov	r11, r18
     aaa:	2a e0       	ldi	r18, 0x0A	; 10
     aac:	30 e0       	ldi	r19, 0x00	; 0
     aae:	25 c0       	rjmp	.+74     	; 0xafa <__stack+0x1fb>
     ab0:	93 2d       	mov	r25, r3
     ab2:	99 7f       	andi	r25, 0xF9	; 249
     ab4:	b9 2e       	mov	r11, r25
     ab6:	8f 36       	cpi	r24, 0x6F	; 111
     ab8:	c1 f0       	breq	.+48     	; 0xaea <__stack+0x1eb>
     aba:	18 f4       	brcc	.+6      	; 0xac2 <__stack+0x1c3>
     abc:	88 35       	cpi	r24, 0x58	; 88
     abe:	79 f0       	breq	.+30     	; 0xade <__stack+0x1df>
     ac0:	b5 c0       	rjmp	.+362    	; 0xc2c <__stack+0x32d>
     ac2:	80 37       	cpi	r24, 0x70	; 112
     ac4:	19 f0       	breq	.+6      	; 0xacc <__stack+0x1cd>
     ac6:	88 37       	cpi	r24, 0x78	; 120
     ac8:	21 f0       	breq	.+8      	; 0xad2 <__stack+0x1d3>
     aca:	b0 c0       	rjmp	.+352    	; 0xc2c <__stack+0x32d>
     acc:	e9 2f       	mov	r30, r25
     ace:	e0 61       	ori	r30, 0x10	; 16
     ad0:	be 2e       	mov	r11, r30
     ad2:	b4 fe       	sbrs	r11, 4
     ad4:	0d c0       	rjmp	.+26     	; 0xaf0 <__stack+0x1f1>
     ad6:	fb 2d       	mov	r31, r11
     ad8:	f4 60       	ori	r31, 0x04	; 4
     ada:	bf 2e       	mov	r11, r31
     adc:	09 c0       	rjmp	.+18     	; 0xaf0 <__stack+0x1f1>
     ade:	34 fe       	sbrs	r3, 4
     ae0:	0a c0       	rjmp	.+20     	; 0xaf6 <__stack+0x1f7>
     ae2:	29 2f       	mov	r18, r25
     ae4:	26 60       	ori	r18, 0x06	; 6
     ae6:	b2 2e       	mov	r11, r18
     ae8:	06 c0       	rjmp	.+12     	; 0xaf6 <__stack+0x1f7>
     aea:	28 e0       	ldi	r18, 0x08	; 8
     aec:	30 e0       	ldi	r19, 0x00	; 0
     aee:	05 c0       	rjmp	.+10     	; 0xafa <__stack+0x1fb>
     af0:	20 e1       	ldi	r18, 0x10	; 16
     af2:	30 e0       	ldi	r19, 0x00	; 0
     af4:	02 c0       	rjmp	.+4      	; 0xafa <__stack+0x1fb>
     af6:	20 e1       	ldi	r18, 0x10	; 16
     af8:	32 e0       	ldi	r19, 0x02	; 2
     afa:	f8 01       	movw	r30, r16
     afc:	b7 fe       	sbrs	r11, 7
     afe:	07 c0       	rjmp	.+14     	; 0xb0e <__stack+0x20f>
     b00:	60 81       	ld	r22, Z
     b02:	71 81       	ldd	r23, Z+1	; 0x01
     b04:	82 81       	ldd	r24, Z+2	; 0x02
     b06:	93 81       	ldd	r25, Z+3	; 0x03
     b08:	0c 5f       	subi	r16, 0xFC	; 252
     b0a:	1f 4f       	sbci	r17, 0xFF	; 255
     b0c:	06 c0       	rjmp	.+12     	; 0xb1a <__stack+0x21b>
     b0e:	60 81       	ld	r22, Z
     b10:	71 81       	ldd	r23, Z+1	; 0x01
     b12:	80 e0       	ldi	r24, 0x00	; 0
     b14:	90 e0       	ldi	r25, 0x00	; 0
     b16:	0e 5f       	subi	r16, 0xFE	; 254
     b18:	1f 4f       	sbci	r17, 0xFF	; 255
     b1a:	a3 01       	movw	r20, r6
     b1c:	0e 94 8a 09 	call	0x1314	; 0x1314 <__ultoa_invert>
     b20:	88 2e       	mov	r8, r24
     b22:	86 18       	sub	r8, r6
     b24:	fb 2d       	mov	r31, r11
     b26:	ff 77       	andi	r31, 0x7F	; 127
     b28:	3f 2e       	mov	r3, r31
     b2a:	36 fe       	sbrs	r3, 6
     b2c:	0d c0       	rjmp	.+26     	; 0xb48 <__stack+0x249>
     b2e:	23 2d       	mov	r18, r3
     b30:	2e 7f       	andi	r18, 0xFE	; 254
     b32:	a2 2e       	mov	r10, r18
     b34:	89 14       	cp	r8, r9
     b36:	58 f4       	brcc	.+22     	; 0xb4e <__stack+0x24f>
     b38:	34 fe       	sbrs	r3, 4
     b3a:	0b c0       	rjmp	.+22     	; 0xb52 <__stack+0x253>
     b3c:	32 fc       	sbrc	r3, 2
     b3e:	09 c0       	rjmp	.+18     	; 0xb52 <__stack+0x253>
     b40:	83 2d       	mov	r24, r3
     b42:	8e 7e       	andi	r24, 0xEE	; 238
     b44:	a8 2e       	mov	r10, r24
     b46:	05 c0       	rjmp	.+10     	; 0xb52 <__stack+0x253>
     b48:	b8 2c       	mov	r11, r8
     b4a:	a3 2c       	mov	r10, r3
     b4c:	03 c0       	rjmp	.+6      	; 0xb54 <__stack+0x255>
     b4e:	b8 2c       	mov	r11, r8
     b50:	01 c0       	rjmp	.+2      	; 0xb54 <__stack+0x255>
     b52:	b9 2c       	mov	r11, r9
     b54:	a4 fe       	sbrs	r10, 4
     b56:	0f c0       	rjmp	.+30     	; 0xb76 <__stack+0x277>
     b58:	fe 01       	movw	r30, r28
     b5a:	e8 0d       	add	r30, r8
     b5c:	f1 1d       	adc	r31, r1
     b5e:	80 81       	ld	r24, Z
     b60:	80 33       	cpi	r24, 0x30	; 48
     b62:	21 f4       	brne	.+8      	; 0xb6c <__stack+0x26d>
     b64:	9a 2d       	mov	r25, r10
     b66:	99 7e       	andi	r25, 0xE9	; 233
     b68:	a9 2e       	mov	r10, r25
     b6a:	09 c0       	rjmp	.+18     	; 0xb7e <__stack+0x27f>
     b6c:	a2 fe       	sbrs	r10, 2
     b6e:	06 c0       	rjmp	.+12     	; 0xb7c <__stack+0x27d>
     b70:	b3 94       	inc	r11
     b72:	b3 94       	inc	r11
     b74:	04 c0       	rjmp	.+8      	; 0xb7e <__stack+0x27f>
     b76:	8a 2d       	mov	r24, r10
     b78:	86 78       	andi	r24, 0x86	; 134
     b7a:	09 f0       	breq	.+2      	; 0xb7e <__stack+0x27f>
     b7c:	b3 94       	inc	r11
     b7e:	a3 fc       	sbrc	r10, 3
     b80:	11 c0       	rjmp	.+34     	; 0xba4 <__stack+0x2a5>
     b82:	a0 fe       	sbrs	r10, 0
     b84:	06 c0       	rjmp	.+12     	; 0xb92 <__stack+0x293>
     b86:	b2 14       	cp	r11, r2
     b88:	88 f4       	brcc	.+34     	; 0xbac <__stack+0x2ad>
     b8a:	28 0c       	add	r2, r8
     b8c:	92 2c       	mov	r9, r2
     b8e:	9b 18       	sub	r9, r11
     b90:	0e c0       	rjmp	.+28     	; 0xbae <__stack+0x2af>
     b92:	b2 14       	cp	r11, r2
     b94:	60 f4       	brcc	.+24     	; 0xbae <__stack+0x2af>
     b96:	b6 01       	movw	r22, r12
     b98:	80 e2       	ldi	r24, 0x20	; 32
     b9a:	90 e0       	ldi	r25, 0x00	; 0
     b9c:	0e 94 35 09 	call	0x126a	; 0x126a <fputc>
     ba0:	b3 94       	inc	r11
     ba2:	f7 cf       	rjmp	.-18     	; 0xb92 <__stack+0x293>
     ba4:	b2 14       	cp	r11, r2
     ba6:	18 f4       	brcc	.+6      	; 0xbae <__stack+0x2af>
     ba8:	2b 18       	sub	r2, r11
     baa:	02 c0       	rjmp	.+4      	; 0xbb0 <__stack+0x2b1>
     bac:	98 2c       	mov	r9, r8
     bae:	21 2c       	mov	r2, r1
     bb0:	a4 fe       	sbrs	r10, 4
     bb2:	10 c0       	rjmp	.+32     	; 0xbd4 <__stack+0x2d5>
     bb4:	b6 01       	movw	r22, r12
     bb6:	80 e3       	ldi	r24, 0x30	; 48
     bb8:	90 e0       	ldi	r25, 0x00	; 0
     bba:	0e 94 35 09 	call	0x126a	; 0x126a <fputc>
     bbe:	a2 fe       	sbrs	r10, 2
     bc0:	17 c0       	rjmp	.+46     	; 0xbf0 <__stack+0x2f1>
     bc2:	a1 fc       	sbrc	r10, 1
     bc4:	03 c0       	rjmp	.+6      	; 0xbcc <__stack+0x2cd>
     bc6:	88 e7       	ldi	r24, 0x78	; 120
     bc8:	90 e0       	ldi	r25, 0x00	; 0
     bca:	02 c0       	rjmp	.+4      	; 0xbd0 <__stack+0x2d1>
     bcc:	88 e5       	ldi	r24, 0x58	; 88
     bce:	90 e0       	ldi	r25, 0x00	; 0
     bd0:	b6 01       	movw	r22, r12
     bd2:	0c c0       	rjmp	.+24     	; 0xbec <__stack+0x2ed>
     bd4:	8a 2d       	mov	r24, r10
     bd6:	86 78       	andi	r24, 0x86	; 134
     bd8:	59 f0       	breq	.+22     	; 0xbf0 <__stack+0x2f1>
     bda:	a1 fe       	sbrs	r10, 1
     bdc:	02 c0       	rjmp	.+4      	; 0xbe2 <__stack+0x2e3>
     bde:	8b e2       	ldi	r24, 0x2B	; 43
     be0:	01 c0       	rjmp	.+2      	; 0xbe4 <__stack+0x2e5>
     be2:	80 e2       	ldi	r24, 0x20	; 32
     be4:	a7 fc       	sbrc	r10, 7
     be6:	8d e2       	ldi	r24, 0x2D	; 45
     be8:	b6 01       	movw	r22, r12
     bea:	90 e0       	ldi	r25, 0x00	; 0
     bec:	0e 94 35 09 	call	0x126a	; 0x126a <fputc>
     bf0:	89 14       	cp	r8, r9
     bf2:	38 f4       	brcc	.+14     	; 0xc02 <__stack+0x303>
     bf4:	b6 01       	movw	r22, r12
     bf6:	80 e3       	ldi	r24, 0x30	; 48
     bf8:	90 e0       	ldi	r25, 0x00	; 0
     bfa:	0e 94 35 09 	call	0x126a	; 0x126a <fputc>
     bfe:	9a 94       	dec	r9
     c00:	f7 cf       	rjmp	.-18     	; 0xbf0 <__stack+0x2f1>
     c02:	8a 94       	dec	r8
     c04:	f3 01       	movw	r30, r6
     c06:	e8 0d       	add	r30, r8
     c08:	f1 1d       	adc	r31, r1
     c0a:	80 81       	ld	r24, Z
     c0c:	b6 01       	movw	r22, r12
     c0e:	90 e0       	ldi	r25, 0x00	; 0
     c10:	0e 94 35 09 	call	0x126a	; 0x126a <fputc>
     c14:	81 10       	cpse	r8, r1
     c16:	f5 cf       	rjmp	.-22     	; 0xc02 <__stack+0x303>
     c18:	22 20       	and	r2, r2
     c1a:	09 f4       	brne	.+2      	; 0xc1e <__stack+0x31f>
     c1c:	42 ce       	rjmp	.-892    	; 0x8a2 <vfprintf+0x24>
     c1e:	b6 01       	movw	r22, r12
     c20:	80 e2       	ldi	r24, 0x20	; 32
     c22:	90 e0       	ldi	r25, 0x00	; 0
     c24:	0e 94 35 09 	call	0x126a	; 0x126a <fputc>
     c28:	2a 94       	dec	r2
     c2a:	f6 cf       	rjmp	.-20     	; 0xc18 <__stack+0x319>
     c2c:	f6 01       	movw	r30, r12
     c2e:	86 81       	ldd	r24, Z+6	; 0x06
     c30:	97 81       	ldd	r25, Z+7	; 0x07
     c32:	02 c0       	rjmp	.+4      	; 0xc38 <__stack+0x339>
     c34:	8f ef       	ldi	r24, 0xFF	; 255
     c36:	9f ef       	ldi	r25, 0xFF	; 255
     c38:	2b 96       	adiw	r28, 0x0b	; 11
     c3a:	e2 e1       	ldi	r30, 0x12	; 18
     c3c:	0c 94 07 0a 	jmp	0x140e	; 0x140e <__epilogue_restores__>

00000c40 <putval>:
     c40:	20 fd       	sbrc	r18, 0
     c42:	09 c0       	rjmp	.+18     	; 0xc56 <putval+0x16>
     c44:	fc 01       	movw	r30, r24
     c46:	23 fd       	sbrc	r18, 3
     c48:	05 c0       	rjmp	.+10     	; 0xc54 <putval+0x14>
     c4a:	22 ff       	sbrs	r18, 2
     c4c:	02 c0       	rjmp	.+4      	; 0xc52 <putval+0x12>
     c4e:	73 83       	std	Z+3, r23	; 0x03
     c50:	62 83       	std	Z+2, r22	; 0x02
     c52:	51 83       	std	Z+1, r21	; 0x01
     c54:	40 83       	st	Z, r20
     c56:	08 95       	ret

00000c58 <mulacc>:
     c58:	44 fd       	sbrc	r20, 4
     c5a:	17 c0       	rjmp	.+46     	; 0xc8a <mulacc+0x32>
     c5c:	46 fd       	sbrc	r20, 6
     c5e:	17 c0       	rjmp	.+46     	; 0xc8e <mulacc+0x36>
     c60:	ab 01       	movw	r20, r22
     c62:	bc 01       	movw	r22, r24
     c64:	da 01       	movw	r26, r20
     c66:	fb 01       	movw	r30, r22
     c68:	aa 0f       	add	r26, r26
     c6a:	bb 1f       	adc	r27, r27
     c6c:	ee 1f       	adc	r30, r30
     c6e:	ff 1f       	adc	r31, r31
     c70:	10 94       	com	r1
     c72:	d1 f7       	brne	.-12     	; 0xc68 <mulacc+0x10>
     c74:	4a 0f       	add	r20, r26
     c76:	5b 1f       	adc	r21, r27
     c78:	6e 1f       	adc	r22, r30
     c7a:	7f 1f       	adc	r23, r31
     c7c:	cb 01       	movw	r24, r22
     c7e:	ba 01       	movw	r22, r20
     c80:	66 0f       	add	r22, r22
     c82:	77 1f       	adc	r23, r23
     c84:	88 1f       	adc	r24, r24
     c86:	99 1f       	adc	r25, r25
     c88:	09 c0       	rjmp	.+18     	; 0xc9c <mulacc+0x44>
     c8a:	33 e0       	ldi	r19, 0x03	; 3
     c8c:	01 c0       	rjmp	.+2      	; 0xc90 <mulacc+0x38>
     c8e:	34 e0       	ldi	r19, 0x04	; 4
     c90:	66 0f       	add	r22, r22
     c92:	77 1f       	adc	r23, r23
     c94:	88 1f       	adc	r24, r24
     c96:	99 1f       	adc	r25, r25
     c98:	31 50       	subi	r19, 0x01	; 1
     c9a:	d1 f7       	brne	.-12     	; 0xc90 <mulacc+0x38>
     c9c:	62 0f       	add	r22, r18
     c9e:	71 1d       	adc	r23, r1
     ca0:	81 1d       	adc	r24, r1
     ca2:	91 1d       	adc	r25, r1
     ca4:	08 95       	ret

00000ca6 <skip_spaces>:
     ca6:	0f 93       	push	r16
     ca8:	1f 93       	push	r17
     caa:	cf 93       	push	r28
     cac:	df 93       	push	r29
     cae:	8c 01       	movw	r16, r24
     cb0:	c8 01       	movw	r24, r16
     cb2:	0e 94 f7 08 	call	0x11ee	; 0x11ee <fgetc>
     cb6:	ec 01       	movw	r28, r24
     cb8:	97 fd       	sbrc	r25, 7
     cba:	08 c0       	rjmp	.+16     	; 0xccc <skip_spaces+0x26>
     cbc:	0e 94 cd 08 	call	0x119a	; 0x119a <isspace>
     cc0:	89 2b       	or	r24, r25
     cc2:	b1 f7       	brne	.-20     	; 0xcb0 <skip_spaces+0xa>
     cc4:	b8 01       	movw	r22, r16
     cc6:	ce 01       	movw	r24, r28
     cc8:	0e 94 71 09 	call	0x12e2	; 0x12e2 <ungetc>
     ccc:	ce 01       	movw	r24, r28
     cce:	df 91       	pop	r29
     cd0:	cf 91       	pop	r28
     cd2:	1f 91       	pop	r17
     cd4:	0f 91       	pop	r16
     cd6:	08 95       	ret

00000cd8 <conv_int>:
     cd8:	8f 92       	push	r8
     cda:	9f 92       	push	r9
     cdc:	af 92       	push	r10
     cde:	bf 92       	push	r11
     ce0:	ef 92       	push	r14
     ce2:	ff 92       	push	r15
     ce4:	0f 93       	push	r16
     ce6:	1f 93       	push	r17
     ce8:	cf 93       	push	r28
     cea:	df 93       	push	r29
     cec:	8c 01       	movw	r16, r24
     cee:	d6 2f       	mov	r29, r22
     cf0:	7a 01       	movw	r14, r20
     cf2:	b2 2e       	mov	r11, r18
     cf4:	0e 94 f7 08 	call	0x11ee	; 0x11ee <fgetc>
     cf8:	9c 01       	movw	r18, r24
     cfa:	33 27       	eor	r19, r19
     cfc:	2b 32       	cpi	r18, 0x2B	; 43
     cfe:	31 05       	cpc	r19, r1
     d00:	31 f0       	breq	.+12     	; 0xd0e <conv_int+0x36>
     d02:	2d 32       	cpi	r18, 0x2D	; 45
     d04:	31 05       	cpc	r19, r1
     d06:	61 f4       	brne	.+24     	; 0xd20 <conv_int+0x48>
     d08:	8b 2d       	mov	r24, r11
     d0a:	80 68       	ori	r24, 0x80	; 128
     d0c:	b8 2e       	mov	r11, r24
     d0e:	d1 50       	subi	r29, 0x01	; 1
     d10:	11 f4       	brne	.+4      	; 0xd16 <conv_int+0x3e>
     d12:	80 e0       	ldi	r24, 0x00	; 0
     d14:	68 c0       	rjmp	.+208    	; 0xde6 <conv_int+0x10e>
     d16:	c8 01       	movw	r24, r16
     d18:	0e 94 f7 08 	call	0x11ee	; 0x11ee <fgetc>
     d1c:	97 fd       	sbrc	r25, 7
     d1e:	f9 cf       	rjmp	.-14     	; 0xd12 <conv_int+0x3a>
     d20:	cb 2d       	mov	r28, r11
     d22:	cd 7f       	andi	r28, 0xFD	; 253
     d24:	2b 2d       	mov	r18, r11
     d26:	20 73       	andi	r18, 0x30	; 48
     d28:	09 f5       	brne	.+66     	; 0xd6c <conv_int+0x94>
     d2a:	80 33       	cpi	r24, 0x30	; 48
     d2c:	f9 f4       	brne	.+62     	; 0xd6c <conv_int+0x94>
     d2e:	aa 24       	eor	r10, r10
     d30:	aa 94       	dec	r10
     d32:	ad 0e       	add	r10, r29
     d34:	09 f4       	brne	.+2      	; 0xd38 <conv_int+0x60>
     d36:	43 c0       	rjmp	.+134    	; 0xdbe <conv_int+0xe6>
     d38:	c8 01       	movw	r24, r16
     d3a:	0e 94 f7 08 	call	0x11ee	; 0x11ee <fgetc>
     d3e:	97 fd       	sbrc	r25, 7
     d40:	3e c0       	rjmp	.+124    	; 0xdbe <conv_int+0xe6>
     d42:	9c 01       	movw	r18, r24
     d44:	2f 7d       	andi	r18, 0xDF	; 223
     d46:	33 27       	eor	r19, r19
     d48:	28 35       	cpi	r18, 0x58	; 88
     d4a:	31 05       	cpc	r19, r1
     d4c:	49 f4       	brne	.+18     	; 0xd60 <conv_int+0x88>
     d4e:	c2 64       	ori	r28, 0x42	; 66
     d50:	d2 50       	subi	r29, 0x02	; 2
     d52:	a9 f1       	breq	.+106    	; 0xdbe <conv_int+0xe6>
     d54:	c8 01       	movw	r24, r16
     d56:	0e 94 f7 08 	call	0x11ee	; 0x11ee <fgetc>
     d5a:	97 ff       	sbrs	r25, 7
     d5c:	07 c0       	rjmp	.+14     	; 0xd6c <conv_int+0x94>
     d5e:	2f c0       	rjmp	.+94     	; 0xdbe <conv_int+0xe6>
     d60:	b6 fe       	sbrs	r11, 6
     d62:	02 c0       	rjmp	.+4      	; 0xd68 <conv_int+0x90>
     d64:	c2 60       	ori	r28, 0x02	; 2
     d66:	01 c0       	rjmp	.+2      	; 0xd6a <conv_int+0x92>
     d68:	c2 61       	ori	r28, 0x12	; 18
     d6a:	da 2d       	mov	r29, r10
     d6c:	81 2c       	mov	r8, r1
     d6e:	91 2c       	mov	r9, r1
     d70:	54 01       	movw	r10, r8
     d72:	20 ed       	ldi	r18, 0xD0	; 208
     d74:	28 0f       	add	r18, r24
     d76:	28 30       	cpi	r18, 0x08	; 8
     d78:	80 f0       	brcs	.+32     	; 0xd9a <conv_int+0xc2>
     d7a:	c4 ff       	sbrs	r28, 4
     d7c:	04 c0       	rjmp	.+8      	; 0xd86 <conv_int+0xae>
     d7e:	b8 01       	movw	r22, r16
     d80:	0e 94 71 09 	call	0x12e2	; 0x12e2 <ungetc>
     d84:	19 c0       	rjmp	.+50     	; 0xdb8 <conv_int+0xe0>
     d86:	2a 30       	cpi	r18, 0x0A	; 10
     d88:	40 f0       	brcs	.+16     	; 0xd9a <conv_int+0xc2>
     d8a:	c6 ff       	sbrs	r28, 6
     d8c:	f8 cf       	rjmp	.-16     	; 0xd7e <conv_int+0xa6>
     d8e:	2f 7d       	andi	r18, 0xDF	; 223
     d90:	3f ee       	ldi	r19, 0xEF	; 239
     d92:	32 0f       	add	r19, r18
     d94:	36 30       	cpi	r19, 0x06	; 6
     d96:	98 f7       	brcc	.-26     	; 0xd7e <conv_int+0xa6>
     d98:	27 50       	subi	r18, 0x07	; 7
     d9a:	4c 2f       	mov	r20, r28
     d9c:	c5 01       	movw	r24, r10
     d9e:	b4 01       	movw	r22, r8
     da0:	0e 94 2c 06 	call	0xc58	; 0xc58 <mulacc>
     da4:	4b 01       	movw	r8, r22
     da6:	5c 01       	movw	r10, r24
     da8:	c2 60       	ori	r28, 0x02	; 2
     daa:	d1 50       	subi	r29, 0x01	; 1
     dac:	59 f0       	breq	.+22     	; 0xdc4 <conv_int+0xec>
     dae:	c8 01       	movw	r24, r16
     db0:	0e 94 f7 08 	call	0x11ee	; 0x11ee <fgetc>
     db4:	97 ff       	sbrs	r25, 7
     db6:	dd cf       	rjmp	.-70     	; 0xd72 <conv_int+0x9a>
     db8:	c1 fd       	sbrc	r28, 1
     dba:	04 c0       	rjmp	.+8      	; 0xdc4 <conv_int+0xec>
     dbc:	aa cf       	rjmp	.-172    	; 0xd12 <conv_int+0x3a>
     dbe:	81 2c       	mov	r8, r1
     dc0:	91 2c       	mov	r9, r1
     dc2:	54 01       	movw	r10, r8
     dc4:	c7 ff       	sbrs	r28, 7
     dc6:	08 c0       	rjmp	.+16     	; 0xdd8 <conv_int+0x100>
     dc8:	b0 94       	com	r11
     dca:	a0 94       	com	r10
     dcc:	90 94       	com	r9
     dce:	80 94       	com	r8
     dd0:	81 1c       	adc	r8, r1
     dd2:	91 1c       	adc	r9, r1
     dd4:	a1 1c       	adc	r10, r1
     dd6:	b1 1c       	adc	r11, r1
     dd8:	2c 2f       	mov	r18, r28
     dda:	b5 01       	movw	r22, r10
     ddc:	a4 01       	movw	r20, r8
     dde:	c7 01       	movw	r24, r14
     de0:	0e 94 20 06 	call	0xc40	; 0xc40 <putval>
     de4:	81 e0       	ldi	r24, 0x01	; 1
     de6:	df 91       	pop	r29
     de8:	cf 91       	pop	r28
     dea:	1f 91       	pop	r17
     dec:	0f 91       	pop	r16
     dee:	ff 90       	pop	r15
     df0:	ef 90       	pop	r14
     df2:	bf 90       	pop	r11
     df4:	af 90       	pop	r10
     df6:	9f 90       	pop	r9
     df8:	8f 90       	pop	r8
     dfa:	08 95       	ret

00000dfc <conv_brk>:
     dfc:	a0 e2       	ldi	r26, 0x20	; 32
     dfe:	b0 e0       	ldi	r27, 0x00	; 0
     e00:	e4 e0       	ldi	r30, 0x04	; 4
     e02:	f7 e0       	ldi	r31, 0x07	; 7
     e04:	0c 94 ee 09 	jmp	0x13dc	; 0x13dc <__prologue_saves__+0x6>
     e08:	5c 01       	movw	r10, r24
     e0a:	96 2e       	mov	r9, r22
     e0c:	7a 01       	movw	r14, r20
     e0e:	f9 01       	movw	r30, r18
     e10:	8e 01       	movw	r16, r28
     e12:	0f 5f       	subi	r16, 0xFF	; 255
     e14:	1f 4f       	sbci	r17, 0xFF	; 255
     e16:	68 01       	movw	r12, r16
     e18:	80 e2       	ldi	r24, 0x20	; 32
     e1a:	d8 01       	movw	r26, r16
     e1c:	1d 92       	st	X+, r1
     e1e:	8a 95       	dec	r24
     e20:	e9 f7       	brne	.-6      	; 0xe1c <conv_brk+0x20>
     e22:	d5 01       	movw	r26, r10
     e24:	13 96       	adiw	r26, 0x03	; 3
     e26:	8c 90       	ld	r8, X
     e28:	80 e0       	ldi	r24, 0x00	; 0
     e2a:	90 e0       	ldi	r25, 0x00	; 0
     e2c:	61 2c       	mov	r6, r1
     e2e:	71 2c       	mov	r7, r1
     e30:	30 e0       	ldi	r19, 0x00	; 0
     e32:	61 e0       	ldi	r22, 0x01	; 1
     e34:	70 e0       	ldi	r23, 0x00	; 0
     e36:	83 fc       	sbrc	r8, 3
     e38:	25 91       	lpm	r18, Z+
     e3a:	83 fe       	sbrs	r8, 3
     e3c:	21 91       	ld	r18, Z+
     e3e:	8f 01       	movw	r16, r30
     e40:	52 2e       	mov	r5, r18
     e42:	21 11       	cpse	r18, r1
     e44:	03 c0       	rjmp	.+6      	; 0xe4c <conv_brk+0x50>
     e46:	80 e0       	ldi	r24, 0x00	; 0
     e48:	90 e0       	ldi	r25, 0x00	; 0
     e4a:	92 c0       	rjmp	.+292    	; 0xf70 <conv_brk+0x174>
     e4c:	2e 35       	cpi	r18, 0x5E	; 94
     e4e:	11 f4       	brne	.+4      	; 0xe54 <conv_brk+0x58>
     e50:	00 97       	sbiw	r24, 0x00	; 0
     e52:	51 f1       	breq	.+84     	; 0xea8 <conv_brk+0xac>
     e54:	43 2f       	mov	r20, r19
     e56:	50 e0       	ldi	r21, 0x00	; 0
     e58:	48 17       	cp	r20, r24
     e5a:	59 07       	cpc	r21, r25
     e5c:	3c f4       	brge	.+14     	; 0xe6c <conv_brk+0x70>
     e5e:	2d 35       	cpi	r18, 0x5D	; 93
     e60:	59 f1       	breq	.+86     	; 0xeb8 <conv_brk+0xbc>
     e62:	2d 32       	cpi	r18, 0x2D	; 45
     e64:	19 f4       	brne	.+6      	; 0xe6c <conv_brk+0x70>
     e66:	77 20       	and	r7, r7
     e68:	09 f1       	breq	.+66     	; 0xeac <conv_brk+0xb0>
     e6a:	03 c0       	rjmp	.+6      	; 0xe72 <conv_brk+0x76>
     e6c:	77 20       	and	r7, r7
     e6e:	09 f4       	brne	.+2      	; 0xe72 <conv_brk+0x76>
     e70:	6a c0       	rjmp	.+212    	; 0xf46 <conv_brk+0x14a>
     e72:	45 2d       	mov	r20, r5
     e74:	46 95       	lsr	r20
     e76:	46 95       	lsr	r20
     e78:	46 95       	lsr	r20
     e7a:	d6 01       	movw	r26, r12
     e7c:	a4 0f       	add	r26, r20
     e7e:	b1 1d       	adc	r27, r1
     e80:	45 2d       	mov	r20, r5
     e82:	47 70       	andi	r20, 0x07	; 7
     e84:	8b 01       	movw	r16, r22
     e86:	02 c0       	rjmp	.+4      	; 0xe8c <conv_brk+0x90>
     e88:	00 0f       	add	r16, r16
     e8a:	11 1f       	adc	r17, r17
     e8c:	4a 95       	dec	r20
     e8e:	e2 f7       	brpl	.-8      	; 0xe88 <conv_brk+0x8c>
     e90:	a8 01       	movw	r20, r16
     e92:	5c 91       	ld	r21, X
     e94:	45 2b       	or	r20, r21
     e96:	4c 93       	st	X, r20
     e98:	65 14       	cp	r6, r5
     e9a:	59 f0       	breq	.+22     	; 0xeb2 <conv_brk+0xb6>
     e9c:	56 14       	cp	r5, r6
     e9e:	10 f4       	brcc	.+4      	; 0xea4 <conv_brk+0xa8>
     ea0:	53 94       	inc	r5
     ea2:	e7 cf       	rjmp	.-50     	; 0xe72 <conv_brk+0x76>
     ea4:	5a 94       	dec	r5
     ea6:	e5 cf       	rjmp	.-54     	; 0xe72 <conv_brk+0x76>
     ea8:	31 e0       	ldi	r19, 0x01	; 1
     eaa:	04 c0       	rjmp	.+8      	; 0xeb4 <conv_brk+0xb8>
     eac:	77 24       	eor	r7, r7
     eae:	73 94       	inc	r7
     eb0:	01 c0       	rjmp	.+2      	; 0xeb4 <conv_brk+0xb8>
     eb2:	71 2c       	mov	r7, r1
     eb4:	01 96       	adiw	r24, 0x01	; 1
     eb6:	bf cf       	rjmp	.-130    	; 0xe36 <conv_brk+0x3a>
     eb8:	77 20       	and	r7, r7
     eba:	19 f0       	breq	.+6      	; 0xec2 <conv_brk+0xc6>
     ebc:	8e 81       	ldd	r24, Y+6	; 0x06
     ebe:	80 62       	ori	r24, 0x20	; 32
     ec0:	8e 83       	std	Y+6, r24	; 0x06
     ec2:	31 11       	cpse	r19, r1
     ec4:	03 c0       	rjmp	.+6      	; 0xecc <conv_brk+0xd0>
     ec6:	88 24       	eor	r8, r8
     ec8:	83 94       	inc	r8
     eca:	17 c0       	rjmp	.+46     	; 0xefa <conv_brk+0xfe>
     ecc:	f6 01       	movw	r30, r12
     ece:	9e 01       	movw	r18, r28
     ed0:	2f 5d       	subi	r18, 0xDF	; 223
     ed2:	3f 4f       	sbci	r19, 0xFF	; 255
     ed4:	80 81       	ld	r24, Z
     ed6:	80 95       	com	r24
     ed8:	81 93       	st	Z+, r24
     eda:	2e 17       	cp	r18, r30
     edc:	3f 07       	cpc	r19, r31
     ede:	d1 f7       	brne	.-12     	; 0xed4 <conv_brk+0xd8>
     ee0:	f2 cf       	rjmp	.-28     	; 0xec6 <conv_brk+0xca>
     ee2:	e1 14       	cp	r14, r1
     ee4:	f1 04       	cpc	r15, r1
     ee6:	29 f0       	breq	.+10     	; 0xef2 <conv_brk+0xf6>
     ee8:	d7 01       	movw	r26, r14
     eea:	8c 93       	st	X, r24
     eec:	f7 01       	movw	r30, r14
     eee:	31 96       	adiw	r30, 0x01	; 1
     ef0:	7f 01       	movw	r14, r30
     ef2:	9a 94       	dec	r9
     ef4:	81 2c       	mov	r8, r1
     ef6:	99 20       	and	r9, r9
     ef8:	f9 f0       	breq	.+62     	; 0xf38 <conv_brk+0x13c>
     efa:	c5 01       	movw	r24, r10
     efc:	0e 94 f7 08 	call	0x11ee	; 0x11ee <fgetc>
     f00:	97 fd       	sbrc	r25, 7
     f02:	18 c0       	rjmp	.+48     	; 0xf34 <conv_brk+0x138>
     f04:	fc 01       	movw	r30, r24
     f06:	ff 27       	eor	r31, r31
     f08:	23 e0       	ldi	r18, 0x03	; 3
     f0a:	f5 95       	asr	r31
     f0c:	e7 95       	ror	r30
     f0e:	2a 95       	dec	r18
     f10:	e1 f7       	brne	.-8      	; 0xf0a <conv_brk+0x10e>
     f12:	ec 0d       	add	r30, r12
     f14:	fd 1d       	adc	r31, r13
     f16:	20 81       	ld	r18, Z
     f18:	30 e0       	ldi	r19, 0x00	; 0
     f1a:	ac 01       	movw	r20, r24
     f1c:	47 70       	andi	r20, 0x07	; 7
     f1e:	55 27       	eor	r21, r21
     f20:	02 c0       	rjmp	.+4      	; 0xf26 <conv_brk+0x12a>
     f22:	35 95       	asr	r19
     f24:	27 95       	ror	r18
     f26:	4a 95       	dec	r20
     f28:	e2 f7       	brpl	.-8      	; 0xf22 <conv_brk+0x126>
     f2a:	20 fd       	sbrc	r18, 0
     f2c:	da cf       	rjmp	.-76     	; 0xee2 <conv_brk+0xe6>
     f2e:	b5 01       	movw	r22, r10
     f30:	0e 94 71 09 	call	0x12e2	; 0x12e2 <ungetc>
     f34:	81 10       	cpse	r8, r1
     f36:	87 cf       	rjmp	.-242    	; 0xe46 <conv_brk+0x4a>
     f38:	e1 14       	cp	r14, r1
     f3a:	f1 04       	cpc	r15, r1
     f3c:	11 f0       	breq	.+4      	; 0xf42 <conv_brk+0x146>
     f3e:	d7 01       	movw	r26, r14
     f40:	1c 92       	st	X, r1
     f42:	c8 01       	movw	r24, r16
     f44:	15 c0       	rjmp	.+42     	; 0xf70 <conv_brk+0x174>
     f46:	42 2f       	mov	r20, r18
     f48:	46 95       	lsr	r20
     f4a:	46 95       	lsr	r20
     f4c:	46 95       	lsr	r20
     f4e:	d6 01       	movw	r26, r12
     f50:	a4 0f       	add	r26, r20
     f52:	b1 1d       	adc	r27, r1
     f54:	42 2f       	mov	r20, r18
     f56:	47 70       	andi	r20, 0x07	; 7
     f58:	8b 01       	movw	r16, r22
     f5a:	02 c0       	rjmp	.+4      	; 0xf60 <conv_brk+0x164>
     f5c:	00 0f       	add	r16, r16
     f5e:	11 1f       	adc	r17, r17
     f60:	4a 95       	dec	r20
     f62:	e2 f7       	brpl	.-8      	; 0xf5c <conv_brk+0x160>
     f64:	a8 01       	movw	r20, r16
     f66:	5c 91       	ld	r21, X
     f68:	45 2b       	or	r20, r21
     f6a:	4c 93       	st	X, r20
     f6c:	62 2e       	mov	r6, r18
     f6e:	a2 cf       	rjmp	.-188    	; 0xeb4 <conv_brk+0xb8>
     f70:	a0 96       	adiw	r28, 0x20	; 32
     f72:	ef e0       	ldi	r30, 0x0F	; 15
     f74:	0c 94 0a 0a 	jmp	0x1414	; 0x1414 <__epilogue_restores__+0x6>

00000f78 <vfscanf>:
     f78:	a0 e0       	ldi	r26, 0x00	; 0
     f7a:	b0 e0       	ldi	r27, 0x00	; 0
     f7c:	e2 ec       	ldi	r30, 0xC2	; 194
     f7e:	f7 e0       	ldi	r31, 0x07	; 7
     f80:	0c 94 ee 09 	jmp	0x13dc	; 0x13dc <__prologue_saves__+0x6>
     f84:	6c 01       	movw	r12, r24
     f86:	eb 01       	movw	r28, r22
     f88:	5a 01       	movw	r10, r20
     f8a:	fc 01       	movw	r30, r24
     f8c:	17 82       	std	Z+7, r1	; 0x07
     f8e:	16 82       	std	Z+6, r1	; 0x06
     f90:	51 2c       	mov	r5, r1
     f92:	f6 01       	movw	r30, r12
     f94:	e3 80       	ldd	r14, Z+3	; 0x03
     f96:	fe 01       	movw	r30, r28
     f98:	e3 fc       	sbrc	r14, 3
     f9a:	85 91       	lpm	r24, Z+
     f9c:	e3 fe       	sbrs	r14, 3
     f9e:	81 91       	ld	r24, Z+
     fa0:	18 2f       	mov	r17, r24
     fa2:	ef 01       	movw	r28, r30
     fa4:	88 23       	and	r24, r24
     fa6:	09 f4       	brne	.+2      	; 0xfaa <vfscanf+0x32>
     fa8:	ee c0       	rjmp	.+476    	; 0x1186 <vfscanf+0x20e>
     faa:	90 e0       	ldi	r25, 0x00	; 0
     fac:	0e 94 cd 08 	call	0x119a	; 0x119a <isspace>
     fb0:	89 2b       	or	r24, r25
     fb2:	21 f0       	breq	.+8      	; 0xfbc <vfscanf+0x44>
     fb4:	c6 01       	movw	r24, r12
     fb6:	0e 94 53 06 	call	0xca6	; 0xca6 <skip_spaces>
     fba:	eb cf       	rjmp	.-42     	; 0xf92 <vfscanf+0x1a>
     fbc:	15 32       	cpi	r17, 0x25	; 37
     fbe:	41 f4       	brne	.+16     	; 0xfd0 <vfscanf+0x58>
     fc0:	fe 01       	movw	r30, r28
     fc2:	e3 fc       	sbrc	r14, 3
     fc4:	15 91       	lpm	r17, Z+
     fc6:	e3 fe       	sbrs	r14, 3
     fc8:	11 91       	ld	r17, Z+
     fca:	ef 01       	movw	r28, r30
     fcc:	15 32       	cpi	r17, 0x25	; 37
     fce:	81 f4       	brne	.+32     	; 0xff0 <vfscanf+0x78>
     fd0:	c6 01       	movw	r24, r12
     fd2:	0e 94 f7 08 	call	0x11ee	; 0x11ee <fgetc>
     fd6:	97 fd       	sbrc	r25, 7
     fd8:	d4 c0       	rjmp	.+424    	; 0x1182 <vfscanf+0x20a>
     fda:	41 2f       	mov	r20, r17
     fdc:	50 e0       	ldi	r21, 0x00	; 0
     fde:	9c 01       	movw	r18, r24
     fe0:	33 27       	eor	r19, r19
     fe2:	24 17       	cp	r18, r20
     fe4:	35 07       	cpc	r19, r21
     fe6:	a9 f2       	breq	.-86     	; 0xf92 <vfscanf+0x1a>
     fe8:	b6 01       	movw	r22, r12
     fea:	0e 94 71 09 	call	0x12e2	; 0x12e2 <ungetc>
     fee:	cb c0       	rjmp	.+406    	; 0x1186 <vfscanf+0x20e>
     ff0:	1a 32       	cpi	r17, 0x2A	; 42
     ff2:	39 f4       	brne	.+14     	; 0x1002 <vfscanf+0x8a>
     ff4:	e3 fc       	sbrc	r14, 3
     ff6:	15 91       	lpm	r17, Z+
     ff8:	e3 fe       	sbrs	r14, 3
     ffa:	11 91       	ld	r17, Z+
     ffc:	ef 01       	movw	r28, r30
     ffe:	01 e0       	ldi	r16, 0x01	; 1
    1000:	01 c0       	rjmp	.+2      	; 0x1004 <vfscanf+0x8c>
    1002:	00 e0       	ldi	r16, 0x00	; 0
    1004:	f1 2c       	mov	r15, r1
    1006:	20 ed       	ldi	r18, 0xD0	; 208
    1008:	21 0f       	add	r18, r17
    100a:	2a 30       	cpi	r18, 0x0A	; 10
    100c:	80 f4       	brcc	.+32     	; 0x102e <vfscanf+0xb6>
    100e:	02 60       	ori	r16, 0x02	; 2
    1010:	6f 2d       	mov	r22, r15
    1012:	70 e0       	ldi	r23, 0x00	; 0
    1014:	80 e0       	ldi	r24, 0x00	; 0
    1016:	90 e0       	ldi	r25, 0x00	; 0
    1018:	40 e2       	ldi	r20, 0x20	; 32
    101a:	0e 94 2c 06 	call	0xc58	; 0xc58 <mulacc>
    101e:	f6 2e       	mov	r15, r22
    1020:	fe 01       	movw	r30, r28
    1022:	e3 fc       	sbrc	r14, 3
    1024:	15 91       	lpm	r17, Z+
    1026:	e3 fe       	sbrs	r14, 3
    1028:	11 91       	ld	r17, Z+
    102a:	ef 01       	movw	r28, r30
    102c:	ec cf       	rjmp	.-40     	; 0x1006 <vfscanf+0x8e>
    102e:	01 ff       	sbrs	r16, 1
    1030:	03 c0       	rjmp	.+6      	; 0x1038 <vfscanf+0xc0>
    1032:	f1 10       	cpse	r15, r1
    1034:	03 c0       	rjmp	.+6      	; 0x103c <vfscanf+0xc4>
    1036:	a7 c0       	rjmp	.+334    	; 0x1186 <vfscanf+0x20e>
    1038:	ff 24       	eor	r15, r15
    103a:	fa 94       	dec	r15
    103c:	18 36       	cpi	r17, 0x68	; 104
    103e:	19 f0       	breq	.+6      	; 0x1046 <vfscanf+0xce>
    1040:	1c 36       	cpi	r17, 0x6C	; 108
    1042:	51 f0       	breq	.+20     	; 0x1058 <vfscanf+0xe0>
    1044:	10 c0       	rjmp	.+32     	; 0x1066 <vfscanf+0xee>
    1046:	fe 01       	movw	r30, r28
    1048:	e3 fc       	sbrc	r14, 3
    104a:	15 91       	lpm	r17, Z+
    104c:	e3 fe       	sbrs	r14, 3
    104e:	11 91       	ld	r17, Z+
    1050:	ef 01       	movw	r28, r30
    1052:	18 36       	cpi	r17, 0x68	; 104
    1054:	41 f4       	brne	.+16     	; 0x1066 <vfscanf+0xee>
    1056:	08 60       	ori	r16, 0x08	; 8
    1058:	04 60       	ori	r16, 0x04	; 4
    105a:	fe 01       	movw	r30, r28
    105c:	e3 fc       	sbrc	r14, 3
    105e:	15 91       	lpm	r17, Z+
    1060:	e3 fe       	sbrs	r14, 3
    1062:	11 91       	ld	r17, Z+
    1064:	ef 01       	movw	r28, r30
    1066:	11 23       	and	r17, r17
    1068:	09 f4       	brne	.+2      	; 0x106c <vfscanf+0xf4>
    106a:	8d c0       	rjmp	.+282    	; 0x1186 <vfscanf+0x20e>
    106c:	61 2f       	mov	r22, r17
    106e:	70 e0       	ldi	r23, 0x00	; 0
    1070:	84 eb       	ldi	r24, 0xB4	; 180
    1072:	90 e0       	ldi	r25, 0x00	; 0
    1074:	0e 94 d6 08 	call	0x11ac	; 0x11ac <strchr_P>
    1078:	89 2b       	or	r24, r25
    107a:	09 f4       	brne	.+2      	; 0x107e <vfscanf+0x106>
    107c:	84 c0       	rjmp	.+264    	; 0x1186 <vfscanf+0x20e>
    107e:	00 fd       	sbrc	r16, 0
    1080:	07 c0       	rjmp	.+14     	; 0x1090 <vfscanf+0x118>
    1082:	f5 01       	movw	r30, r10
    1084:	80 80       	ld	r8, Z
    1086:	91 80       	ldd	r9, Z+1	; 0x01
    1088:	c5 01       	movw	r24, r10
    108a:	02 96       	adiw	r24, 0x02	; 2
    108c:	5c 01       	movw	r10, r24
    108e:	02 c0       	rjmp	.+4      	; 0x1094 <vfscanf+0x11c>
    1090:	81 2c       	mov	r8, r1
    1092:	91 2c       	mov	r9, r1
    1094:	1e 36       	cpi	r17, 0x6E	; 110
    1096:	51 f4       	brne	.+20     	; 0x10ac <vfscanf+0x134>
    1098:	f6 01       	movw	r30, r12
    109a:	46 81       	ldd	r20, Z+6	; 0x06
    109c:	57 81       	ldd	r21, Z+7	; 0x07
    109e:	60 e0       	ldi	r22, 0x00	; 0
    10a0:	70 e0       	ldi	r23, 0x00	; 0
    10a2:	20 2f       	mov	r18, r16
    10a4:	c4 01       	movw	r24, r8
    10a6:	0e 94 20 06 	call	0xc40	; 0xc40 <putval>
    10aa:	73 cf       	rjmp	.-282    	; 0xf92 <vfscanf+0x1a>
    10ac:	13 36       	cpi	r17, 0x63	; 99
    10ae:	a9 f4       	brne	.+42     	; 0x10da <vfscanf+0x162>
    10b0:	01 fd       	sbrc	r16, 1
    10b2:	02 c0       	rjmp	.+4      	; 0x10b8 <vfscanf+0x140>
    10b4:	ff 24       	eor	r15, r15
    10b6:	f3 94       	inc	r15
    10b8:	c6 01       	movw	r24, r12
    10ba:	0e 94 f7 08 	call	0x11ee	; 0x11ee <fgetc>
    10be:	97 fd       	sbrc	r25, 7
    10c0:	60 c0       	rjmp	.+192    	; 0x1182 <vfscanf+0x20a>
    10c2:	81 14       	cp	r8, r1
    10c4:	91 04       	cpc	r9, r1
    10c6:	29 f0       	breq	.+10     	; 0x10d2 <vfscanf+0x15a>
    10c8:	f4 01       	movw	r30, r8
    10ca:	80 83       	st	Z, r24
    10cc:	c4 01       	movw	r24, r8
    10ce:	01 96       	adiw	r24, 0x01	; 1
    10d0:	4c 01       	movw	r8, r24
    10d2:	fa 94       	dec	r15
    10d4:	f1 10       	cpse	r15, r1
    10d6:	f0 cf       	rjmp	.-32     	; 0x10b8 <vfscanf+0x140>
    10d8:	50 c0       	rjmp	.+160    	; 0x117a <vfscanf+0x202>
    10da:	1b 35       	cpi	r17, 0x5B	; 91
    10dc:	59 f4       	brne	.+22     	; 0x10f4 <vfscanf+0x17c>
    10de:	9e 01       	movw	r18, r28
    10e0:	a4 01       	movw	r20, r8
    10e2:	6f 2d       	mov	r22, r15
    10e4:	c6 01       	movw	r24, r12
    10e6:	0e 94 fe 06 	call	0xdfc	; 0xdfc <conv_brk>
    10ea:	ec 01       	movw	r28, r24
    10ec:	89 2b       	or	r24, r25
    10ee:	09 f0       	breq	.+2      	; 0x10f2 <vfscanf+0x17a>
    10f0:	44 c0       	rjmp	.+136    	; 0x117a <vfscanf+0x202>
    10f2:	3e c0       	rjmp	.+124    	; 0x1170 <vfscanf+0x1f8>
    10f4:	c6 01       	movw	r24, r12
    10f6:	0e 94 53 06 	call	0xca6	; 0xca6 <skip_spaces>
    10fa:	97 fd       	sbrc	r25, 7
    10fc:	42 c0       	rjmp	.+132    	; 0x1182 <vfscanf+0x20a>
    10fe:	1f 36       	cpi	r17, 0x6F	; 111
    1100:	61 f1       	breq	.+88     	; 0x115a <vfscanf+0x1e2>
    1102:	28 f4       	brcc	.+10     	; 0x110e <vfscanf+0x196>
    1104:	14 36       	cpi	r17, 0x64	; 100
    1106:	39 f1       	breq	.+78     	; 0x1156 <vfscanf+0x1de>
    1108:	19 36       	cpi	r17, 0x69	; 105
    110a:	51 f1       	breq	.+84     	; 0x1160 <vfscanf+0x1e8>
    110c:	28 c0       	rjmp	.+80     	; 0x115e <vfscanf+0x1e6>
    110e:	13 37       	cpi	r17, 0x73	; 115
    1110:	71 f0       	breq	.+28     	; 0x112e <vfscanf+0x1b6>
    1112:	15 37       	cpi	r17, 0x75	; 117
    1114:	01 f1       	breq	.+64     	; 0x1156 <vfscanf+0x1de>
    1116:	23 c0       	rjmp	.+70     	; 0x115e <vfscanf+0x1e6>
    1118:	81 14       	cp	r8, r1
    111a:	91 04       	cpc	r9, r1
    111c:	29 f0       	breq	.+10     	; 0x1128 <vfscanf+0x1b0>
    111e:	f4 01       	movw	r30, r8
    1120:	60 82       	st	Z, r6
    1122:	c4 01       	movw	r24, r8
    1124:	01 96       	adiw	r24, 0x01	; 1
    1126:	4c 01       	movw	r8, r24
    1128:	fa 94       	dec	r15
    112a:	ff 20       	and	r15, r15
    112c:	71 f0       	breq	.+28     	; 0x114a <vfscanf+0x1d2>
    112e:	c6 01       	movw	r24, r12
    1130:	0e 94 f7 08 	call	0x11ee	; 0x11ee <fgetc>
    1134:	3c 01       	movw	r6, r24
    1136:	97 fd       	sbrc	r25, 7
    1138:	08 c0       	rjmp	.+16     	; 0x114a <vfscanf+0x1d2>
    113a:	0e 94 cd 08 	call	0x119a	; 0x119a <isspace>
    113e:	89 2b       	or	r24, r25
    1140:	59 f3       	breq	.-42     	; 0x1118 <vfscanf+0x1a0>
    1142:	b6 01       	movw	r22, r12
    1144:	c3 01       	movw	r24, r6
    1146:	0e 94 71 09 	call	0x12e2	; 0x12e2 <ungetc>
    114a:	81 14       	cp	r8, r1
    114c:	91 04       	cpc	r9, r1
    114e:	a9 f0       	breq	.+42     	; 0x117a <vfscanf+0x202>
    1150:	f4 01       	movw	r30, r8
    1152:	10 82       	st	Z, r1
    1154:	12 c0       	rjmp	.+36     	; 0x117a <vfscanf+0x202>
    1156:	00 62       	ori	r16, 0x20	; 32
    1158:	03 c0       	rjmp	.+6      	; 0x1160 <vfscanf+0x1e8>
    115a:	00 61       	ori	r16, 0x10	; 16
    115c:	01 c0       	rjmp	.+2      	; 0x1160 <vfscanf+0x1e8>
    115e:	00 64       	ori	r16, 0x40	; 64
    1160:	20 2f       	mov	r18, r16
    1162:	a4 01       	movw	r20, r8
    1164:	6f 2d       	mov	r22, r15
    1166:	c6 01       	movw	r24, r12
    1168:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <conv_int>
    116c:	81 11       	cpse	r24, r1
    116e:	05 c0       	rjmp	.+10     	; 0x117a <vfscanf+0x202>
    1170:	f6 01       	movw	r30, r12
    1172:	83 81       	ldd	r24, Z+3	; 0x03
    1174:	80 73       	andi	r24, 0x30	; 48
    1176:	29 f4       	brne	.+10     	; 0x1182 <vfscanf+0x20a>
    1178:	06 c0       	rjmp	.+12     	; 0x1186 <vfscanf+0x20e>
    117a:	00 fd       	sbrc	r16, 0
    117c:	0a cf       	rjmp	.-492    	; 0xf92 <vfscanf+0x1a>
    117e:	53 94       	inc	r5
    1180:	08 cf       	rjmp	.-496    	; 0xf92 <vfscanf+0x1a>
    1182:	55 20       	and	r5, r5
    1184:	19 f0       	breq	.+6      	; 0x118c <vfscanf+0x214>
    1186:	85 2d       	mov	r24, r5
    1188:	90 e0       	ldi	r25, 0x00	; 0
    118a:	02 c0       	rjmp	.+4      	; 0x1190 <vfscanf+0x218>
    118c:	8f ef       	ldi	r24, 0xFF	; 255
    118e:	9f ef       	ldi	r25, 0xFF	; 255
    1190:	cd b7       	in	r28, 0x3d	; 61
    1192:	de b7       	in	r29, 0x3e	; 62
    1194:	ef e0       	ldi	r30, 0x0F	; 15
    1196:	0c 94 0a 0a 	jmp	0x1414	; 0x1414 <__epilogue_restores__+0x6>

0000119a <isspace>:
    119a:	91 11       	cpse	r25, r1
    119c:	0c 94 e8 09 	jmp	0x13d0	; 0x13d0 <__ctype_isfalse>
    11a0:	80 32       	cpi	r24, 0x20	; 32
    11a2:	19 f0       	breq	.+6      	; 0x11aa <isspace+0x10>
    11a4:	89 50       	subi	r24, 0x09	; 9
    11a6:	85 50       	subi	r24, 0x05	; 5
    11a8:	c8 f7       	brcc	.-14     	; 0x119c <isspace+0x2>
    11aa:	08 95       	ret

000011ac <strchr_P>:
    11ac:	fc 01       	movw	r30, r24
    11ae:	05 90       	lpm	r0, Z+
    11b0:	06 16       	cp	r0, r22
    11b2:	21 f0       	breq	.+8      	; 0x11bc <strchr_P+0x10>
    11b4:	00 20       	and	r0, r0
    11b6:	d9 f7       	brne	.-10     	; 0x11ae <strchr_P+0x2>
    11b8:	c0 01       	movw	r24, r0
    11ba:	08 95       	ret
    11bc:	31 97       	sbiw	r30, 0x01	; 1
    11be:	cf 01       	movw	r24, r30
    11c0:	08 95       	ret

000011c2 <strnlen_P>:
    11c2:	fc 01       	movw	r30, r24
    11c4:	05 90       	lpm	r0, Z+
    11c6:	61 50       	subi	r22, 0x01	; 1
    11c8:	70 40       	sbci	r23, 0x00	; 0
    11ca:	01 10       	cpse	r0, r1
    11cc:	d8 f7       	brcc	.-10     	; 0x11c4 <strnlen_P+0x2>
    11ce:	80 95       	com	r24
    11d0:	90 95       	com	r25
    11d2:	8e 0f       	add	r24, r30
    11d4:	9f 1f       	adc	r25, r31
    11d6:	08 95       	ret

000011d8 <strnlen>:
    11d8:	fc 01       	movw	r30, r24
    11da:	61 50       	subi	r22, 0x01	; 1
    11dc:	70 40       	sbci	r23, 0x00	; 0
    11de:	01 90       	ld	r0, Z+
    11e0:	01 10       	cpse	r0, r1
    11e2:	d8 f7       	brcc	.-10     	; 0x11da <strnlen+0x2>
    11e4:	80 95       	com	r24
    11e6:	90 95       	com	r25
    11e8:	8e 0f       	add	r24, r30
    11ea:	9f 1f       	adc	r25, r31
    11ec:	08 95       	ret

000011ee <fgetc>:
    11ee:	cf 93       	push	r28
    11f0:	df 93       	push	r29
    11f2:	ec 01       	movw	r28, r24
    11f4:	2b 81       	ldd	r18, Y+3	; 0x03
    11f6:	20 ff       	sbrs	r18, 0
    11f8:	33 c0       	rjmp	.+102    	; 0x1260 <fgetc+0x72>
    11fa:	26 ff       	sbrs	r18, 6
    11fc:	0a c0       	rjmp	.+20     	; 0x1212 <fgetc+0x24>
    11fe:	2f 7b       	andi	r18, 0xBF	; 191
    1200:	2b 83       	std	Y+3, r18	; 0x03
    1202:	8e 81       	ldd	r24, Y+6	; 0x06
    1204:	9f 81       	ldd	r25, Y+7	; 0x07
    1206:	01 96       	adiw	r24, 0x01	; 1
    1208:	9f 83       	std	Y+7, r25	; 0x07
    120a:	8e 83       	std	Y+6, r24	; 0x06
    120c:	8a 81       	ldd	r24, Y+2	; 0x02
    120e:	90 e0       	ldi	r25, 0x00	; 0
    1210:	29 c0       	rjmp	.+82     	; 0x1264 <fgetc+0x76>
    1212:	22 ff       	sbrs	r18, 2
    1214:	0f c0       	rjmp	.+30     	; 0x1234 <fgetc+0x46>
    1216:	e8 81       	ld	r30, Y
    1218:	f9 81       	ldd	r31, Y+1	; 0x01
    121a:	80 81       	ld	r24, Z
    121c:	08 2e       	mov	r0, r24
    121e:	00 0c       	add	r0, r0
    1220:	99 0b       	sbc	r25, r25
    1222:	00 97       	sbiw	r24, 0x00	; 0
    1224:	19 f4       	brne	.+6      	; 0x122c <fgetc+0x3e>
    1226:	20 62       	ori	r18, 0x20	; 32
    1228:	2b 83       	std	Y+3, r18	; 0x03
    122a:	1a c0       	rjmp	.+52     	; 0x1260 <fgetc+0x72>
    122c:	31 96       	adiw	r30, 0x01	; 1
    122e:	f9 83       	std	Y+1, r31	; 0x01
    1230:	e8 83       	st	Y, r30
    1232:	0e c0       	rjmp	.+28     	; 0x1250 <fgetc+0x62>
    1234:	ea 85       	ldd	r30, Y+10	; 0x0a
    1236:	fb 85       	ldd	r31, Y+11	; 0x0b
    1238:	09 95       	icall
    123a:	97 ff       	sbrs	r25, 7
    123c:	09 c0       	rjmp	.+18     	; 0x1250 <fgetc+0x62>
    123e:	2b 81       	ldd	r18, Y+3	; 0x03
    1240:	01 96       	adiw	r24, 0x01	; 1
    1242:	11 f0       	breq	.+4      	; 0x1248 <fgetc+0x5a>
    1244:	80 e2       	ldi	r24, 0x20	; 32
    1246:	01 c0       	rjmp	.+2      	; 0x124a <fgetc+0x5c>
    1248:	80 e1       	ldi	r24, 0x10	; 16
    124a:	82 2b       	or	r24, r18
    124c:	8b 83       	std	Y+3, r24	; 0x03
    124e:	08 c0       	rjmp	.+16     	; 0x1260 <fgetc+0x72>
    1250:	2e 81       	ldd	r18, Y+6	; 0x06
    1252:	3f 81       	ldd	r19, Y+7	; 0x07
    1254:	2f 5f       	subi	r18, 0xFF	; 255
    1256:	3f 4f       	sbci	r19, 0xFF	; 255
    1258:	3f 83       	std	Y+7, r19	; 0x07
    125a:	2e 83       	std	Y+6, r18	; 0x06
    125c:	99 27       	eor	r25, r25
    125e:	02 c0       	rjmp	.+4      	; 0x1264 <fgetc+0x76>
    1260:	8f ef       	ldi	r24, 0xFF	; 255
    1262:	9f ef       	ldi	r25, 0xFF	; 255
    1264:	df 91       	pop	r29
    1266:	cf 91       	pop	r28
    1268:	08 95       	ret

0000126a <fputc>:
    126a:	0f 93       	push	r16
    126c:	1f 93       	push	r17
    126e:	cf 93       	push	r28
    1270:	df 93       	push	r29
    1272:	fb 01       	movw	r30, r22
    1274:	23 81       	ldd	r18, Z+3	; 0x03
    1276:	21 fd       	sbrc	r18, 1
    1278:	03 c0       	rjmp	.+6      	; 0x1280 <fputc+0x16>
    127a:	8f ef       	ldi	r24, 0xFF	; 255
    127c:	9f ef       	ldi	r25, 0xFF	; 255
    127e:	2c c0       	rjmp	.+88     	; 0x12d8 <fputc+0x6e>
    1280:	22 ff       	sbrs	r18, 2
    1282:	16 c0       	rjmp	.+44     	; 0x12b0 <fputc+0x46>
    1284:	46 81       	ldd	r20, Z+6	; 0x06
    1286:	57 81       	ldd	r21, Z+7	; 0x07
    1288:	24 81       	ldd	r18, Z+4	; 0x04
    128a:	35 81       	ldd	r19, Z+5	; 0x05
    128c:	42 17       	cp	r20, r18
    128e:	53 07       	cpc	r21, r19
    1290:	44 f4       	brge	.+16     	; 0x12a2 <fputc+0x38>
    1292:	a0 81       	ld	r26, Z
    1294:	b1 81       	ldd	r27, Z+1	; 0x01
    1296:	9d 01       	movw	r18, r26
    1298:	2f 5f       	subi	r18, 0xFF	; 255
    129a:	3f 4f       	sbci	r19, 0xFF	; 255
    129c:	31 83       	std	Z+1, r19	; 0x01
    129e:	20 83       	st	Z, r18
    12a0:	8c 93       	st	X, r24
    12a2:	26 81       	ldd	r18, Z+6	; 0x06
    12a4:	37 81       	ldd	r19, Z+7	; 0x07
    12a6:	2f 5f       	subi	r18, 0xFF	; 255
    12a8:	3f 4f       	sbci	r19, 0xFF	; 255
    12aa:	37 83       	std	Z+7, r19	; 0x07
    12ac:	26 83       	std	Z+6, r18	; 0x06
    12ae:	14 c0       	rjmp	.+40     	; 0x12d8 <fputc+0x6e>
    12b0:	8b 01       	movw	r16, r22
    12b2:	ec 01       	movw	r28, r24
    12b4:	fb 01       	movw	r30, r22
    12b6:	00 84       	ldd	r0, Z+8	; 0x08
    12b8:	f1 85       	ldd	r31, Z+9	; 0x09
    12ba:	e0 2d       	mov	r30, r0
    12bc:	09 95       	icall
    12be:	89 2b       	or	r24, r25
    12c0:	e1 f6       	brne	.-72     	; 0x127a <fputc+0x10>
    12c2:	d8 01       	movw	r26, r16
    12c4:	16 96       	adiw	r26, 0x06	; 6
    12c6:	8d 91       	ld	r24, X+
    12c8:	9c 91       	ld	r25, X
    12ca:	17 97       	sbiw	r26, 0x07	; 7
    12cc:	01 96       	adiw	r24, 0x01	; 1
    12ce:	17 96       	adiw	r26, 0x07	; 7
    12d0:	9c 93       	st	X, r25
    12d2:	8e 93       	st	-X, r24
    12d4:	16 97       	sbiw	r26, 0x06	; 6
    12d6:	ce 01       	movw	r24, r28
    12d8:	df 91       	pop	r29
    12da:	cf 91       	pop	r28
    12dc:	1f 91       	pop	r17
    12de:	0f 91       	pop	r16
    12e0:	08 95       	ret

000012e2 <ungetc>:
    12e2:	fb 01       	movw	r30, r22
    12e4:	23 81       	ldd	r18, Z+3	; 0x03
    12e6:	20 ff       	sbrs	r18, 0
    12e8:	12 c0       	rjmp	.+36     	; 0x130e <ungetc+0x2c>
    12ea:	26 fd       	sbrc	r18, 6
    12ec:	10 c0       	rjmp	.+32     	; 0x130e <ungetc+0x2c>
    12ee:	8f 3f       	cpi	r24, 0xFF	; 255
    12f0:	3f ef       	ldi	r19, 0xFF	; 255
    12f2:	93 07       	cpc	r25, r19
    12f4:	61 f0       	breq	.+24     	; 0x130e <ungetc+0x2c>
    12f6:	82 83       	std	Z+2, r24	; 0x02
    12f8:	2f 7d       	andi	r18, 0xDF	; 223
    12fa:	20 64       	ori	r18, 0x40	; 64
    12fc:	23 83       	std	Z+3, r18	; 0x03
    12fe:	26 81       	ldd	r18, Z+6	; 0x06
    1300:	37 81       	ldd	r19, Z+7	; 0x07
    1302:	21 50       	subi	r18, 0x01	; 1
    1304:	31 09       	sbc	r19, r1
    1306:	37 83       	std	Z+7, r19	; 0x07
    1308:	26 83       	std	Z+6, r18	; 0x06
    130a:	99 27       	eor	r25, r25
    130c:	08 95       	ret
    130e:	8f ef       	ldi	r24, 0xFF	; 255
    1310:	9f ef       	ldi	r25, 0xFF	; 255
    1312:	08 95       	ret

00001314 <__ultoa_invert>:
    1314:	fa 01       	movw	r30, r20
    1316:	aa 27       	eor	r26, r26
    1318:	28 30       	cpi	r18, 0x08	; 8
    131a:	51 f1       	breq	.+84     	; 0x1370 <__ultoa_invert+0x5c>
    131c:	20 31       	cpi	r18, 0x10	; 16
    131e:	81 f1       	breq	.+96     	; 0x1380 <__ultoa_invert+0x6c>
    1320:	e8 94       	clt
    1322:	6f 93       	push	r22
    1324:	6e 7f       	andi	r22, 0xFE	; 254
    1326:	6e 5f       	subi	r22, 0xFE	; 254
    1328:	7f 4f       	sbci	r23, 0xFF	; 255
    132a:	8f 4f       	sbci	r24, 0xFF	; 255
    132c:	9f 4f       	sbci	r25, 0xFF	; 255
    132e:	af 4f       	sbci	r26, 0xFF	; 255
    1330:	b1 e0       	ldi	r27, 0x01	; 1
    1332:	3e d0       	rcall	.+124    	; 0x13b0 <__ultoa_invert+0x9c>
    1334:	b4 e0       	ldi	r27, 0x04	; 4
    1336:	3c d0       	rcall	.+120    	; 0x13b0 <__ultoa_invert+0x9c>
    1338:	67 0f       	add	r22, r23
    133a:	78 1f       	adc	r23, r24
    133c:	89 1f       	adc	r24, r25
    133e:	9a 1f       	adc	r25, r26
    1340:	a1 1d       	adc	r26, r1
    1342:	68 0f       	add	r22, r24
    1344:	79 1f       	adc	r23, r25
    1346:	8a 1f       	adc	r24, r26
    1348:	91 1d       	adc	r25, r1
    134a:	a1 1d       	adc	r26, r1
    134c:	6a 0f       	add	r22, r26
    134e:	71 1d       	adc	r23, r1
    1350:	81 1d       	adc	r24, r1
    1352:	91 1d       	adc	r25, r1
    1354:	a1 1d       	adc	r26, r1
    1356:	20 d0       	rcall	.+64     	; 0x1398 <__ultoa_invert+0x84>
    1358:	09 f4       	brne	.+2      	; 0x135c <__ultoa_invert+0x48>
    135a:	68 94       	set
    135c:	3f 91       	pop	r19
    135e:	2a e0       	ldi	r18, 0x0A	; 10
    1360:	26 9f       	mul	r18, r22
    1362:	11 24       	eor	r1, r1
    1364:	30 19       	sub	r19, r0
    1366:	30 5d       	subi	r19, 0xD0	; 208
    1368:	31 93       	st	Z+, r19
    136a:	de f6       	brtc	.-74     	; 0x1322 <__ultoa_invert+0xe>
    136c:	cf 01       	movw	r24, r30
    136e:	08 95       	ret
    1370:	46 2f       	mov	r20, r22
    1372:	47 70       	andi	r20, 0x07	; 7
    1374:	40 5d       	subi	r20, 0xD0	; 208
    1376:	41 93       	st	Z+, r20
    1378:	b3 e0       	ldi	r27, 0x03	; 3
    137a:	0f d0       	rcall	.+30     	; 0x139a <__ultoa_invert+0x86>
    137c:	c9 f7       	brne	.-14     	; 0x1370 <__ultoa_invert+0x5c>
    137e:	f6 cf       	rjmp	.-20     	; 0x136c <__ultoa_invert+0x58>
    1380:	46 2f       	mov	r20, r22
    1382:	4f 70       	andi	r20, 0x0F	; 15
    1384:	40 5d       	subi	r20, 0xD0	; 208
    1386:	4a 33       	cpi	r20, 0x3A	; 58
    1388:	18 f0       	brcs	.+6      	; 0x1390 <__ultoa_invert+0x7c>
    138a:	49 5d       	subi	r20, 0xD9	; 217
    138c:	31 fd       	sbrc	r19, 1
    138e:	40 52       	subi	r20, 0x20	; 32
    1390:	41 93       	st	Z+, r20
    1392:	02 d0       	rcall	.+4      	; 0x1398 <__ultoa_invert+0x84>
    1394:	a9 f7       	brne	.-22     	; 0x1380 <__ultoa_invert+0x6c>
    1396:	ea cf       	rjmp	.-44     	; 0x136c <__ultoa_invert+0x58>
    1398:	b4 e0       	ldi	r27, 0x04	; 4
    139a:	a6 95       	lsr	r26
    139c:	97 95       	ror	r25
    139e:	87 95       	ror	r24
    13a0:	77 95       	ror	r23
    13a2:	67 95       	ror	r22
    13a4:	ba 95       	dec	r27
    13a6:	c9 f7       	brne	.-14     	; 0x139a <__ultoa_invert+0x86>
    13a8:	00 97       	sbiw	r24, 0x00	; 0
    13aa:	61 05       	cpc	r22, r1
    13ac:	71 05       	cpc	r23, r1
    13ae:	08 95       	ret
    13b0:	9b 01       	movw	r18, r22
    13b2:	ac 01       	movw	r20, r24
    13b4:	0a 2e       	mov	r0, r26
    13b6:	06 94       	lsr	r0
    13b8:	57 95       	ror	r21
    13ba:	47 95       	ror	r20
    13bc:	37 95       	ror	r19
    13be:	27 95       	ror	r18
    13c0:	ba 95       	dec	r27
    13c2:	c9 f7       	brne	.-14     	; 0x13b6 <__ultoa_invert+0xa2>
    13c4:	62 0f       	add	r22, r18
    13c6:	73 1f       	adc	r23, r19
    13c8:	84 1f       	adc	r24, r20
    13ca:	95 1f       	adc	r25, r21
    13cc:	a0 1d       	adc	r26, r0
    13ce:	08 95       	ret

000013d0 <__ctype_isfalse>:
    13d0:	99 27       	eor	r25, r25
    13d2:	88 27       	eor	r24, r24

000013d4 <__ctype_istrue>:
    13d4:	08 95       	ret

000013d6 <__prologue_saves__>:
    13d6:	2f 92       	push	r2
    13d8:	3f 92       	push	r3
    13da:	4f 92       	push	r4
    13dc:	5f 92       	push	r5
    13de:	6f 92       	push	r6
    13e0:	7f 92       	push	r7
    13e2:	8f 92       	push	r8
    13e4:	9f 92       	push	r9
    13e6:	af 92       	push	r10
    13e8:	bf 92       	push	r11
    13ea:	cf 92       	push	r12
    13ec:	df 92       	push	r13
    13ee:	ef 92       	push	r14
    13f0:	ff 92       	push	r15
    13f2:	0f 93       	push	r16
    13f4:	1f 93       	push	r17
    13f6:	cf 93       	push	r28
    13f8:	df 93       	push	r29
    13fa:	cd b7       	in	r28, 0x3d	; 61
    13fc:	de b7       	in	r29, 0x3e	; 62
    13fe:	ca 1b       	sub	r28, r26
    1400:	db 0b       	sbc	r29, r27
    1402:	0f b6       	in	r0, 0x3f	; 63
    1404:	f8 94       	cli
    1406:	de bf       	out	0x3e, r29	; 62
    1408:	0f be       	out	0x3f, r0	; 63
    140a:	cd bf       	out	0x3d, r28	; 61
    140c:	09 94       	ijmp

0000140e <__epilogue_restores__>:
    140e:	2a 88       	ldd	r2, Y+18	; 0x12
    1410:	39 88       	ldd	r3, Y+17	; 0x11
    1412:	48 88       	ldd	r4, Y+16	; 0x10
    1414:	5f 84       	ldd	r5, Y+15	; 0x0f
    1416:	6e 84       	ldd	r6, Y+14	; 0x0e
    1418:	7d 84       	ldd	r7, Y+13	; 0x0d
    141a:	8c 84       	ldd	r8, Y+12	; 0x0c
    141c:	9b 84       	ldd	r9, Y+11	; 0x0b
    141e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1420:	b9 84       	ldd	r11, Y+9	; 0x09
    1422:	c8 84       	ldd	r12, Y+8	; 0x08
    1424:	df 80       	ldd	r13, Y+7	; 0x07
    1426:	ee 80       	ldd	r14, Y+6	; 0x06
    1428:	fd 80       	ldd	r15, Y+5	; 0x05
    142a:	0c 81       	ldd	r16, Y+4	; 0x04
    142c:	1b 81       	ldd	r17, Y+3	; 0x03
    142e:	aa 81       	ldd	r26, Y+2	; 0x02
    1430:	b9 81       	ldd	r27, Y+1	; 0x01
    1432:	ce 0f       	add	r28, r30
    1434:	d1 1d       	adc	r29, r1
    1436:	0f b6       	in	r0, 0x3f	; 63
    1438:	f8 94       	cli
    143a:	de bf       	out	0x3e, r29	; 62
    143c:	0f be       	out	0x3f, r0	; 63
    143e:	cd bf       	out	0x3d, r28	; 61
    1440:	ed 01       	movw	r28, r26
    1442:	08 95       	ret

00001444 <_exit>:
    1444:	f8 94       	cli

00001446 <__stop_program>:
    1446:	ff cf       	rjmp	.-2      	; 0x1446 <__stop_program>
